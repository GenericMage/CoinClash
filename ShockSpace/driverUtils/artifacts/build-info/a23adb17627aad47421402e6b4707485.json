{
	"id": "a23adb17627aad47421402e6b4707485",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"ShockSpace/driverUtils/CSDExecutionPartial.sol": {
				"content": "/*\n SPDX-License-Identifier: BSD-3-Clause\n*/\n\n// Recent Changes:\n// - 2025-06-01: Extracted shouldClose logic from forceExecution to _shouldClosePosition to reduce stack depth for downstream calls. Version incremented to 0.0.4 for pre-testing.\n// - 2025-05-29: Renamed internal updateSL to _updateSL, updateTP to _updateTP.\n// - 2025-05-29: Version incremented to 0.0.3 for pre-testing.\n// - 2025-05-29: Implemented forceExecution and executeCloseAction.\n// - 2025-05-29: Updated updateSL/updateTP to check minEntryPrice/maxEntryPrice.\n// - 2025-05-29: Added onlyDriver modifier.\n\npragma solidity 0.8.1;\n\nimport \"./CSDPositionPartial.sol\";\n\ncontract CSDExecutionPartial is CSDPositionPartial {\n    modifier onlyDriver() {\n        require(msg.sender == address(this), \"Only Driver\");\n        _;\n    }\n\n    function _updateSL(\n        uint256 positionId,\n        uint256 newStopLossPrice,\n        address listingAddress,\n        uint8 positionType,\n        uint256 minPrice,\n        uint256 maxPrice,\n        uint256 currentPrice\n    ) internal onlyDriver {\n        require(positionType <= 1, \"Invalid position type\");\n        PriceParams1 storage price1 = priceParams1[positionId];\n\n        if (positionType == 0) {\n            require(newStopLossPrice == 0 || (newStopLossPrice <= currentPrice && newStopLossPrice < price1.minEntryPrice), \"Invalid SL for long\");\n        } else {\n            require(newStopLossPrice == 0 || (newStopLossPrice >= currentPrice && newStopLossPrice > price1.maxEntryPrice), \"Invalid SL for short\");\n        }\n\n        setExitParams(positionId, newStopLossPrice, exitParams[positionId].takeProfitPrice);\n    }\n\n    function _updateTP(\n        uint256 positionId,\n        uint256 newTakeProfitPrice,\n        address listingAddress,\n        uint8 positionType,\n        uint256 minPrice,\n        uint256 maxPrice,\n        uint256 currentPrice\n    ) internal onlyDriver {\n        require(positionType <= 1, \"Invalid position type\");\n        PriceParams1 storage price1 = priceParams1[positionId];\n\n        if (positionType == 0) {\n            require(newTakeProfitPrice == 0 || (newTakeProfitPrice >= currentPrice && newTakeProfitPrice > price1.maxEntryPrice), \"Invalid TP for long\");\n        } else {\n            require(newTakeProfitPrice == 0 || (newTakeProfitPrice <= currentPrice && newTakeProfitPrice < price1.minEntryPrice), \"Invalid TP for short\");\n        }\n\n        setExitParams(positionId, exitParams[positionId].stopLossPrice, newTakeProfitPrice);\n    }\n\n    function _shouldClosePosition(\n        uint256 positionId,\n        uint8 positionType,\n        uint256 currentPrice,\n        uint256 stopLossPrice,\n        uint256 takeProfitPrice,\n        uint256 liquidationPrice\n    ) internal view returns (bool) {\n        if (positionType == 0) {\n            return (stopLossPrice != 0 && currentPrice <= stopLossPrice) ||\n                   (takeProfitPrice != 0 && currentPrice >= takeProfitPrice) ||\n                   (currentPrice <= liquidationPrice);\n        } else {\n            return (stopLossPrice != 0 && currentPrice >= stopLossPrice) ||\n                   (takeProfitPrice != 0 && currentPrice <= takeProfitPrice) ||\n                   (currentPrice >= liquidationPrice);\n        }\n    }\n\n    function forceExecution(address listingAddress, uint256 maxIterations) internal onlyDriver {\n        uint256 gasLimit = gasleft();\n        uint256 currentPrice = ISSListing(listingAddress).prices(listingAddress);\n        uint256 processed = 0;\n\n        for (uint256 i = 0; i < positionCount && processed < maxIterations; i++) {\n            if (gasLimit < 50000) break; // Graceful degradation\n            uint256 positionId = i + 1; // Incremental position IDs\n            PositionCore1 storage core1 = positionCore1[positionId];\n            PositionCore2 storage core2 = positionCore2[positionId];\n            if (core1.listingAddress != listingAddress || core2.status2 != 0) continue;\n\n            PriceParams1 storage price1 = priceParams1[positionId];\n            PriceParams2 storage price2 = priceParams2[positionId];\n            ExitParams storage exit = exitParams[positionId];\n\n            // Check Price-at-Entry for Status-1\n            if (!core2.status1) {\n                if (price1.priceAtEntry > price1.minEntryPrice && currentPrice <= price1.minEntryPrice) {\n                    core2.status1 = true;\n                } else if (price1.priceAtEntry < price1.maxEntryPrice && currentPrice >= price1.maxEntryPrice) {\n                    core2.status1 = true;\n                }\n            }\n\n            // Check SL/TP/Liquidation\n            if (core2.status1) {\n                bool shouldClose = _shouldClosePosition(\n                    positionId,\n                    core1.positionType,\n                    currentPrice,\n                    exit.stopLossPrice,\n                    exit.takeProfitPrice,\n                    price2.liquidationPrice\n                );\n                if (shouldClose) {\n                    executeCloseAction(positionId, listingAddress);\n                }\n            }\n\n            processed++;\n            gasLimit = gasleft();\n        }\n    }\n\n    function executeCloseAction(uint256 positionId, address listingAddress) internal onlyDriver {\n        PositionCore1 storage core1 = positionCore1[positionId];\n        if (core1.positionType == 0) {\n            prepCloseLong(positionId, listingAddress);\n        } else {\n            prepCloseShort(positionId, listingAddress);\n        }\n    }\n}"
			},
			"ShockSpace/driverUtils/CSDPositionPartial.sol": {
				"content": "/*\n SPDX-License-Identifier: BSD-3-Clause\n*/\n\n// Recent Changes:\n// - 2025-06-02: Updated _transferMarginToListing to call ISSListing.update for volume balances (xBalance for long, yBalance for short) and _transferLiquidityFee to call addFees for fee tracking (xFees for long, yFees for short). Added positionType parameter. Version incremented to 0.0.10 for pre-testing.\n// - 2025-06-01: Extracted liquidity limit check and loan/liquidation price calculation in prepEnterLong to _checkLiquidityLimitLong and _computeLoanAndLiquidationLong to prevent stack too deep. Applied similar extraction in prepCloseLong/prepCloseShort to _deductMarginAndRemoveToken and _executePayoutUpdate. Version incremented to 0.0.9 for pre-testing.\n// - 2025-06-01: Extracted liquidity limit check and loan/liquidation price calculation in prepEnterShort to _checkLiquidityLimitShort and _computeLoanAndLiquidationShort to resolve stack too deep error. Version incremented to 0.0.8 for pre-testing.\n// - 2025-06-01: Added liquidityAddr validation in _transferLiquidityFee, extracted payout logic in prepCloseLong/prepCloseShort to _computePayoutLong/_computePayoutShort to prevent stack too deep in downstream calls. Version incremented to 0.0.7 for pre-testing.\n// - 2025-06-01: Split liquidity fee transfer into _transferLiquidityFee helper, removed liquidityAddr from _transferMarginToListing, consolidated margin transfers. Version incremented to 0.0.6 for pre-testing.\n// - 2025-05-31: Fixed stack too deep in prepEnterShort by extracting margin transfer logic to internal function _transferMarginToListing. Version incremented to 0.0.5 for pre-testing.\n// - 2025-05-30: Updated prepEnterLong to use xLiquid and prepEnterShort to use yLiquid from liquidityDetailsView.\n// - 2025-05-30: Version incremented to 0.0.4 for pre-testing.\n// - 2025-05-29: Added margin deduction in prepCloseLong/prepCloseShort.\n// - 2025-05-29: Version incremented to 0.0.2 for pre-testing.\n// - 2025-05-29: Updated prepEnterLong/prepEnterShort to transfer taxedMargin and excessMargin to listingAddress, track in makerTokenMargin.\n// - 2025-05-29: Updated liquidation price to use makerTokenMargin[maker][token].\n// - 2025-05-29: Replaced entryPrice with minEntryPrice/maxEntryPrice.\n// - 2025-05-29: Updated fee to (leverage - 1) * initialMargin / 100.\n// - 2025-05-29: Updated closeLongPosition/closeShortPosition to create PayoutUpdate without margin deduction.\n\npragma solidity 0.8.1;\n\nimport \"./CSDUtilityPartial.sol\";\n\ncontract CSDPositionPartial is CSDUtilityPartial {\n    struct PrepPosition {\n        uint256 fee;\n        uint256 taxedMargin;\n        uint256 leverageAmount;\n        uint256 initialLoan;\n        uint256 liquidationPrice;\n    }\n\n    function computeFee(uint256 initialMargin, uint8 leverage) internal pure returns (uint256) {\n        uint256 feePercent = uint256(leverage) - 1;\n        return (initialMargin * feePercent * DECIMAL_PRECISION) / 100 / DECIMAL_PRECISION;\n    }\n\n    function _transferLiquidityFee(\n        address listingAddress,\n        address token,\n        uint256 fee,\n        uint8 positionType\n    ) internal {\n        address liquidityAddr = ISSListing(listingAddress).liquidityAddressView(listingAddress);\n        require(liquidityAddr != address(0), \"Invalid liquidity address\");\n        if (fee > 0) {\n            transferMargin(liquidityAddr, token, fee);\n            ISSLiquidityTemplate(liquidityAddr).addFees(address(this), positionType == 0 ? true : false, fee);\n        }\n    }\n\n    // Fee switching is carried out by SSLiquidityTemplate using claimFees, no need to switch fees here\n    function _transferMarginToListing(\n        address token,\n        address listingAddress,\n        address maker,\n        uint256 taxedMargin,\n        uint256 excessMargin,\n        uint256 fee,\n        uint8 positionType\n    ) internal {\n        uint256 totalMargin = taxedMargin + excessMargin;\n        _transferLiquidityFee(listingAddress, token, fee, positionType);\n        if (totalMargin > 0) {\n            transferMargin(listingAddress, token, totalMargin);\n            ISSListing.UpdateType[] memory updates = new ISSListing.UpdateType[](1);\n            updates[0] = ISSListing.UpdateType({\n                updateType: 0,\n                index: positionType,\n                value: totalMargin,\n                addr: address(0),\n                recipient: address(0)\n            });\n            ISSListing(listingAddress).update(address(this), updates);\n        }\n        makerTokenMargin[maker][token] += totalMargin;\n        if (makerTokenMargin[maker][token] == totalMargin) {\n            makerMarginTokens[maker].push(token);\n        }\n    }\n\n    function _computePayoutLong(\n        uint256 positionId,\n        address listingAddress,\n        address tokenB\n    ) internal view returns (uint256) {\n        MarginParams1 storage margin1 = marginParams1[positionId];\n        MarginParams2 storage margin2 = margin2[positionId];\n        PriceParams1 storage price1 = priceParams1[positionId];\n        uint256 currentPrice = ISSListing(listingAddress).prices(listingAddress);\n        return (margin1.taxedMargin + makerTokenMargin[positionCore1[positionId].makerAddress][tokenB] + price1.leverage * margin1.initialMargin) / currentPrice - margin2.initialLoan;\n    }\n\n    function _computePayoutShort(\n        uint256 positionId,\n        address listingAddress,\n        address tokenA\n    ) internal view returns (uint256) {\n        MarginParams1 storage margin1 = marginParams1[positionId];\n        PriceParams1 storage price1 = priceParams1[positionId];\n        uint256 currentPrice = ISSListing(listingAddress).prices(listingAddress);\n        return (price1.minEntryPrice - currentPrice) * margin1.initialMargin * price1.leverage + (margin1.taxedMargin + makerTokenMargin[positionCore1[positionId].makerAddress][tokenA]) * currentPrice;\n    }\n\n    function _checkLiquidityLimitLong(\n        address listingAddress,\n        uint256 leverageAmount,\n        uint8 leverage\n    ) internal view returns (address tokenB) {\n        address liquidityAddr = ISSListing(listingAddress).liquidityAddressView(listingAddress);\n        (uint256 xLiquid,,,) = ISSLiquidityTemplate(liquidityAddr).liquidityDetailsView();\n        uint256 limitPercent = 101 - uint256(leverage);\n        uint256 limit = xLiquid * limitPercent / 100;\n        require(leverageAmount <= limit, \"Leverage amount exceeds limit\");\n        return ISSListing(listingAddress).tokenB();\n    }\n\n    function _computeLoanAndLiquidationLong(\n        uint256 leverageAmount,\n        uint256 minPrice,\n        address maker,\n        address tokenB\n    ) internal view returns (uint256 initialLoan, uint256 liquidationPrice) {\n        initialLoan = leverageAmount / minPrice;\n        uint256 marginRatio = makerTokenMargin[maker][tokenB] / leverageAmount;\n        liquidationPrice = marginRatio < minPrice ? minPrice - marginRatio : 0;\n    }\n\n    function _checkLiquidityLimitShort(\n        address listingAddress,\n        uint256 leverageAmount,\n        uint8 leverage\n    ) internal view returns (address tokenA) {\n        address liquidityAddr = ISSListing(listingAddress).liquidityAddressView(listingAddress);\n        (, uint256 yLiquid,,) = ISSLiquidityTemplate(liquidityAddr).liquidityDetailsView();\n        uint256 limitPercent = 101 - uint256(leverage);\n        uint256 limit = yLiquid * limitPercent / 100;\n        require(leverageAmount <= limit, \"Leverage amount exceeds limit\");\n        return ISSListing(listingAddress).tokenA();\n    }\n\n    function _computeLoanAndLiquidationShort(\n        uint256 leverageAmount,\n        uint256 minPrice,\n        address maker,\n        address tokenA\n    ) internal view returns (uint256 initialLoan, uint256 liquidationPrice) {\n        initialLoan = leverageAmount * minPrice;\n        uint256 marginRatio = makerTokenMargin[maker][tokenA] / leverageAmount;\n        liquidationPrice = minPrice + marginRatio;\n    }\n\n    function _deductMarginAndRemoveToken(\n        address maker,\n        address token,\n        uint256 taxedMargin,\n        uint256 excessMargin\n    ) internal {\n        makerTokenMargin[maker][token] -= (taxedMargin + excessMargin);\n        if (makerTokenMargin[maker][token] == 0) {\n            _removeToken(maker, token);\n        }\n    }\n\n    function _executePayoutUpdate(\n        uint256 positionId,\n        address listingAddress,\n        uint256 payout,\n        uint8 positionType,\n        address maker\n    ) internal {\n        ISSListing.PayoutUpdate[] memory updates = new ISSListing.PayoutUpdate[](1);\n        updates[0] = ISSListing.PayoutUpdate({\n            payoutType: positionType,\n            recipient: maker,\n            required: payout\n        });\n        ISSListing(listingAddress).ssUpdate(address(this), updates);\n\n        exitParams[positionId].exitPrice = ISSListing(listingAddress).prices(listingAddress);\n        positionCore2[positionId].status2 = 1;\n    }\n\n    function prepEnterLong(\n        uint256 positionId,\n        uint256 minEntryPrice,\n        uint256 maxEntryPrice,\n        uint256 initialMargin,\n        uint256 excessMargin,\n        uint8 leverage,\n        address listingAddress,\n        address maker\n    ) internal returns (PrepPosition memory prep) {\n        require(leverage >= 2 && leverage <= 100, \"Invalid leverage\");\n        (uint256 currentPrice, uint256 minPrice, uint256 maxPrice,) = parseEntryPrice(minEntryPrice, maxEntryPrice, listingAddress);\n\n        prep.fee = computeFee(initialMargin, leverage);\n        prep.taxedMargin = initialMargin - prep.fee;\n        prep.leverageAmount = initialMargin * uint256(leverage);\n        require(excessMargin <= prep.leverageAmount, \"Excess margin too high\");\n\n        address tokenB = _checkLiquidityLimitLong(listingAddress, prep.leverageAmount, leverage);\n        _transferMarginToListing(tokenB, listingAddress, maker, prep.taxedMargin, excessMargin, prep.fee, 0);\n\n        (prep.initialLoan, prep.liquidationPrice) = _computeLoanAndLiquidationLong(\n            prep.leverageAmount,\n            minPrice,\n            maker,\n            tokenB\n        );\n\n        return prep;\n    }\n\n    function prepEnterShort(\n        uint256 positionId,\n        uint256 minEntryPrice,\n        uint256 maxEntryPrice,\n        uint256 initialMargin,\n        uint256 excessMargin,\n        uint8 leverage,\n        address listingAddress,\n        address maker\n    ) internal returns (PrepPosition memory prep) {\n        require(leverage >= 2 && leverage <= 100, \"Invalid leverage\");\n        (uint256 currentPrice, uint256 minPrice, uint256 maxPrice,) = parseEntryPrice(minEntryPrice, maxEntryPrice, listingAddress);\n\n        prep.fee = computeFee(initialMargin, leverage);\n        prep.taxedMargin = initialMargin - prep.fee;\n        prep.leverageAmount = initialMargin * uint256(leverage);\n        require(excessMargin <= prep.leverageAmount, \"Excess margin too high\");\n\n        address tokenA = _checkLiquidityLimitShort(listingAddress, prep.leverageAmount, leverage);\n        _transferMarginToListing(tokenA, listingAddress, maker, prep.taxedMargin, excessMargin, prep.fee, 1);\n\n        (prep.initialLoan, prep.liquidationPrice) = _computeLoanAndLiquidationShort(\n            prep.leverageAmount,\n            minPrice,\n            maker,\n            tokenA\n        );\n\n        return prep;\n    }\n\n    function prepCloseLong(\n        uint256 positionId,\n        address listingAddress\n    ) internal returns (uint256 payout) {\n        PositionCore1 storage core1 = positionCore1[positionId];\n        MarginParams1 storage margin1 = marginParams1[positionId];\n\n        address tokenB = ISSListing(listingAddress).tokenB();\n        payout = _computePayoutLong(positionId, listingAddress, tokenB);\n\n        _deductMarginAndRemoveToken(core1.makerAddress, tokenB, margin1.taxedMargin, margin1.excessMargin);\n        _executePayoutUpdate(positionId, listingAddress, payout, core1.positionType, core1.makerAddress);\n    }\n\n    function prepCloseShort(\n        uint256 positionId,\n        address listingAddress\n    ) internal returns (uint256 payout) {\n        PositionCore1 storage core1 = positionCore1[positionId];\n        MarginParams1 storage margin1 = marginParams1[positionId];\n\n        address tokenA = ISSListing(listingAddress).tokenA();\n        payout = _computePayoutShort(positionId, listingAddress, tokenA);\n\n        _deductMarginAndRemoveToken(core1.makerAddress, tokenA, margin1.taxedMargin, margin1.excessMargin);\n        _executePayoutUpdate(positionId, listingAddress, payout, core1.positionType, core1.makerAddress);\n    }\n\n    function setExitParams(\n        uint256 positionId,\n        uint256 stopLossPrice,\n        uint256 takeProfitPrice\n    ) internal {\n        ExitParams storage exit = exitParams[positionId];\n        exit.stopLossPrice = stopLossPrice;\n        exit.takeProfitPrice = takeProfitPrice;\n    }\n}"
			},
			"ShockSpace/driverUtils/CSDUtilityPartial.sol": {
				"content": "/*\n SPDX-License-Identifier: BSD-3-Clause\n*/\n\n// Recent Changes:\n// - 2025-06-02: Added UpdateType struct and update function to ISSListing interface for volume balance updates. Version incremented to 0.0.7 for pre-testing.\n// - 2025-05-31: Added positionCount state variable to resolve undeclared identifier error in CSDExecutionPartial.\n// - 2025-05-31: Version incremented to 0.0.6 for pre-testing.\n// - 2025-05-31: Moved PositionCore1, PositionCore2, PriceParams1, PriceParams2, MarginParams1, MarginParams2, ExitParams, and OpenInterest structs and mappings from SSCrossDriver.sol to resolve identifier errors.\n// - 2025-05-30: Updated ISSLiquidityTemplate to include liquidityDetailsView for xLiquid and yLiquid.\n// - 2025-05-30: Version incremented to 0.0.4 for pre-testing.\n// - 2025-05-29: Added ISSAgent interface for listing validation.\n// - 2025-05-29: Added agentAddress storage variable.\n// - 2025-05-29: Updated parseEntryPrice to return priceAtEntry.\n// - 2025-05-29: Version incremented to 0.0.2 for pre-testing.\n\npragma solidity 0.8.1;\n\nimport \"../imports/SafeERC20.sol\";\nimport \"../imports/ReentrancyGuard.sol\";\nimport \"../imports/Ownable.sol\";\n\ninterface ISSListing {\n    function prices(address) external view returns (uint256);\n    function volumeBalances(address) external view returns (uint256 xBalance, uint256 yBalance);\n    function liquidityAddressView(address) external view returns (address);\n    function tokenA() external view returns (address);\n    function tokenB() external view returns (address);\n    function ssUpdate(address caller, PayoutUpdate[] calldata updates) external;\n    struct PayoutUpdate {\n        uint8 payoutType;\n        address recipient;\n        uint256 required;\n    }\n    function decimalsA() external view returns (uint8);\n    function decimalsB() external view returns (uint8);\n    struct UpdateType {\n        uint8 updateType;\n        uint256 index;\n        uint256 value;\n        address addr;\n        address recipient;\n    }\n    function update(address caller, UpdateType[] calldata updates) external;\n}\n\ninterface ISSLiquidityTemplate {\n    struct UpdateType {\n        uint8 updateTipo;\n        uint256 index;\n        uint256 value;\n        address addr;\n        address recipient;\n    }\n    function addFees(address caller, bool isX, uint256 fee) external;\n    function liquidityDetailsView() external view returns (uint256 xLiquid, uint256 yLiquid, uint256 xFees, uint256 yFees);\n}\n\ninterface ISSAgent {\n    function getListing(address tokenA, address tokenB) external view returns (address);\n}\n\ncontract CSDUtilityPartial {\n    using SafeERC20 for IERC20;\n\n    uint256 public constant DECIMAL_PRECISION = 1e18;\n    address public agentAddress;\n    uint256 public positionCount;\n\n    struct PositionCore1 {\n        uint256 positionId;\n        address listingAddress;\n        address makerAddress;\n        uint8 positionType;\n    }\n\n    struct PositionCore2 {\n        bool status1;\n        uint8 status2;\n    }\n\n    struct PriceParams1 {\n        uint256 minEntryPrice;\n        uint256 maxEntryPrice;\n        uint256 minPrice;\n        uint256 priceAtEntry;\n        uint8 leverage;\n    }\n\n    struct PriceParams2 {\n        uint256 liquidationPrice;\n    }\n\n    struct MarginParams1 {\n        uint256 initialMargin;\n        uint256 taxedMargin;\n        uint256 excessMargin;\n        uint256 fee;\n    }\n\n    struct MarginParams2 {\n        uint256 initialLoan;\n    }\n\n    struct ExitParams {\n        uint256 stopLossPrice;\n        uint256 takeProfitPrice;\n        uint256 exitPrice;\n    }\n\n    struct OpenInterest {\n        uint256 leverageAmount;\n        uint256 timestamp;\n    }\n\n    mapping(uint256 => PositionCore1) public positionCore1;\n    mapping(uint256 => PositionCore2) public positionCore2;\n    mapping(uint256 => PriceParams1) public priceParams1;\n    mapping(uint256 => PriceParams2) public priceParams2;\n    mapping(uint256 => MarginParams1) public marginParams1;\n    mapping(uint256 => MarginParams2) public margin2;\n    mapping(uint256 => ExitParams) public exitParams;\n    mapping(uint256 => OpenInterest) public openInterest;\n\n    mapping(address => mapping(address => uint256)) public makerTokenMargin;\n    mapping(address => address[]) public makerMarginTokens;\n\n    function parseEntryPrice(\n        uint256 minEntryPrice,\n        uint256 maxEntryPrice,\n        address listingAddress\n    ) internal view returns (uint256 currentPrice, uint256 minPrice, uint256 maxPrice, uint256 priceAtEntry) {\n        currentPrice = ISSListing(listingAddress).prices(listingAddress);\n        priceAtEntry = currentPrice;\n        if (minEntryPrice == 0 && maxEntryPrice == 0) {\n            return (currentPrice, currentPrice, currentPrice, priceAtEntry);\n        }\n        require(minEntryPrice <= maxEntryPrice, \"Invalid price range\");\n        return (currentPrice, minEntryPrice, maxEntryPrice, priceAtEntry);\n    }\n\n    function transferMargin(address to, address token, uint256 amount) internal {\n        if (amount > 0) {\n            IERC20(token).safeTransfer(to, amount);\n        }\n    }\n\n    function _removeToken(address maker, address token) internal {\n        address[] storage tokens = makerMarginTokens[maker];\n        for (uint256 i = 0; i < tokens.length; i++) {\n            if (tokens[i] == token) {\n                tokens[i] = tokens[tokens.length - 1];\n                tokens.pop();\n                break;\n            }\n        }\n    }\n}"
			},
			"ShockSpace/imports/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"ShockSpace/imports/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"ShockSpace/imports/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Permit.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"ShockSpace/imports/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"ShockSpace/imports/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"ShockSpace/imports/IERC20.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\npragma solidity ^0.8.1;\n\ninterface IERC20 {\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint256); // Added for OMFAgent prepListing\n    function balanceOf(address account) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function transfer(address to, uint256 amount) external returns (bool);\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}"
			},
			"ShockSpace/imports/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ShockSpace/driverUtils/CSDExecutionPartial.sol": {
				"CSDExecutionPartial": {
					"abi": [
						{
							"inputs": [],
							"name": "DECIMAL_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "agentAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "exitParams",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stopLossPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "takeProfitPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "exitPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "makerMarginTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "makerTokenMargin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "margin2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "initialLoan",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "marginParams1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "initialMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "taxedMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "excessMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "openInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "leverageAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positionCore1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "positionId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "listingAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "makerAddress",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "positionType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positionCore2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "status1",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "status2",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positionCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "priceParams1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "minEntryPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxEntryPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "priceAtEntry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "leverage",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "priceParams2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidationPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/driverUtils/CSDExecutionPartial.sol\":641:5486  contract CSDExecutionPartial is CSDPositionPartial {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/driverUtils/CSDExecutionPartial.sol\":641:5486  contract CSDExecutionPartial is CSDPositionPartial {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88e53ec8\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc22127a9\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc22127a9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe7702d05\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf86bcb9b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfe143615\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x88e53ec8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8eff3521\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa20baee6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0cd6a4bc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f037096\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2235410d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38613690\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x52289738\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7bc9ec23\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3705:3759  mapping(uint256 => PositionCore2) public positionCore2 */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3645:3699  mapping(uint256 => PositionCore1) public positionCore1 */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3995:4043  mapping(uint256 => ExitParams) public exitParams */\n    tag_5:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2682:2709  address public agentAddress */\n    tag_6:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4108:4179  mapping(address => mapping(address => uint256)) public makerTokenMargin */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4185:4239  mapping(address => address[]) public makerMarginTokens */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4049:4101  mapping(uint256 => OpenInterest) public openInterest */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3941:3989  mapping(uint256 => MarginParams2) public margin2 */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3823:3875  mapping(uint256 => PriceParams2) public priceParams2 */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2715:2743  uint256 public positionCount */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3881:3935  mapping(uint256 => MarginParams1) public marginParams1 */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3765:3817  mapping(uint256 => PriceParams1) public priceParams1 */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3705:3759  mapping(uint256 => PositionCore2) public positionCore2 */\n    tag_21:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3645:3699  mapping(uint256 => PositionCore1) public positionCore1 */\n    tag_26:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3995:4043  mapping(uint256 => ExitParams) public exitParams */\n    tag_31:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2682:2709  address public agentAddress */\n    tag_35:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4108:4179  mapping(address => mapping(address => uint256)) public makerTokenMargin */\n    tag_41:\n      mstore(0x20, 0x0a)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4185:4239  mapping(address => address[]) public makerMarginTokens */\n    tag_47:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4049:4101  mapping(uint256 => OpenInterest) public openInterest */\n    tag_51:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3941:3989  mapping(uint256 => MarginParams2) public margin2 */\n    tag_56:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n    tag_59:\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2672:2676  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3823:3875  mapping(uint256 => PriceParams2) public priceParams2 */\n    tag_63:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2715:2743  uint256 public positionCount */\n    tag_66:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3881:3935  mapping(uint256 => MarginParams1) public marginParams1 */\n    tag_70:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3765:3817  mapping(uint256 => PriceParams1) public priceParams1 */\n    tag_75:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_81:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_83\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_87\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:704   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":422:424   */\n      0x40\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":401:408   */\n      dup6\n        /* \"#utility.yul\":397:420   */\n      sub\n        /* \"#utility.yul\":393:425   */\n      slt\n        /* \"#utility.yul\":390:392   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":438:439   */\n      0x00\n        /* \"#utility.yul\":435:436   */\n      dup1\n        /* \"#utility.yul\":428:440   */\n      revert\n        /* \"#utility.yul\":390:392   */\n    tag_90:\n        /* \"#utility.yul\":481:482   */\n      0x00\n        /* \"#utility.yul\":506:559   */\n      tag_91\n        /* \"#utility.yul\":551:558   */\n      dup6\n        /* \"#utility.yul\":542:548   */\n      dup3\n        /* \"#utility.yul\":531:540   */\n      dup7\n        /* \"#utility.yul\":527:549   */\n      add\n        /* \"#utility.yul\":506:559   */\n      tag_81\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":496:559   */\n      swap3\n      pop\n        /* \"#utility.yul\":452:569   */\n      pop\n        /* \"#utility.yul\":608:610   */\n      0x20\n        /* \"#utility.yul\":634:687   */\n      tag_92\n        /* \"#utility.yul\":679:686   */\n      dup6\n        /* \"#utility.yul\":670:676   */\n      dup3\n        /* \"#utility.yul\":659:668   */\n      dup7\n        /* \"#utility.yul\":655:677   */\n      add\n        /* \"#utility.yul\":634:687   */\n      tag_81\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":624:687   */\n      swap2\n      pop\n        /* \"#utility.yul\":579:697   */\n      pop\n        /* \"#utility.yul\":380:704   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":710:1117   */\n    tag_46:\n      0x00\n      dup1\n        /* \"#utility.yul\":835:837   */\n      0x40\n        /* \"#utility.yul\":823:832   */\n      dup4\n        /* \"#utility.yul\":814:821   */\n      dup6\n        /* \"#utility.yul\":810:833   */\n      sub\n        /* \"#utility.yul\":806:838   */\n      slt\n        /* \"#utility.yul\":803:805   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":851:852   */\n      0x00\n        /* \"#utility.yul\":848:849   */\n      dup1\n        /* \"#utility.yul\":841:853   */\n      revert\n        /* \"#utility.yul\":803:805   */\n    tag_94:\n        /* \"#utility.yul\":894:895   */\n      0x00\n        /* \"#utility.yul\":919:972   */\n      tag_95\n        /* \"#utility.yul\":964:971   */\n      dup6\n        /* \"#utility.yul\":955:961   */\n      dup3\n        /* \"#utility.yul\":944:953   */\n      dup7\n        /* \"#utility.yul\":940:962   */\n      add\n        /* \"#utility.yul\":919:972   */\n      tag_81\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":909:972   */\n      swap3\n      pop\n        /* \"#utility.yul\":865:982   */\n      pop\n        /* \"#utility.yul\":1021:1023   */\n      0x20\n        /* \"#utility.yul\":1047:1100   */\n      tag_96\n        /* \"#utility.yul\":1092:1099   */\n      dup6\n        /* \"#utility.yul\":1083:1089   */\n      dup3\n        /* \"#utility.yul\":1072:1081   */\n      dup7\n        /* \"#utility.yul\":1068:1090   */\n      add\n        /* \"#utility.yul\":1047:1100   */\n      tag_85\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1037:1100   */\n      swap2\n      pop\n        /* \"#utility.yul\":992:1110   */\n      pop\n        /* \"#utility.yul\":793:1117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1385   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":1231:1233   */\n      0x20\n        /* \"#utility.yul\":1219:1228   */\n      dup3\n        /* \"#utility.yul\":1210:1217   */\n      dup5\n        /* \"#utility.yul\":1206:1229   */\n      sub\n        /* \"#utility.yul\":1202:1234   */\n      slt\n        /* \"#utility.yul\":1199:1201   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1247:1248   */\n      0x00\n        /* \"#utility.yul\":1244:1245   */\n      dup1\n        /* \"#utility.yul\":1237:1249   */\n      revert\n        /* \"#utility.yul\":1199:1201   */\n    tag_98:\n        /* \"#utility.yul\":1290:1291   */\n      0x00\n        /* \"#utility.yul\":1315:1368   */\n      tag_99\n        /* \"#utility.yul\":1360:1367   */\n      dup5\n        /* \"#utility.yul\":1351:1357   */\n      dup3\n        /* \"#utility.yul\":1340:1349   */\n      dup6\n        /* \"#utility.yul\":1336:1358   */\n      add\n        /* \"#utility.yul\":1315:1368   */\n      tag_85\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1305:1368   */\n      swap2\n      pop\n        /* \"#utility.yul\":1261:1378   */\n      pop\n        /* \"#utility.yul\":1189:1385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1391:1509   */\n    tag_100:\n        /* \"#utility.yul\":1478:1502   */\n      tag_102\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1478:1502   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1473:1476   */\n      dup3\n        /* \"#utility.yul\":1466:1503   */\n      mstore\n        /* \"#utility.yul\":1456:1509   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1515:1624   */\n    tag_104:\n        /* \"#utility.yul\":1596:1617   */\n      tag_106\n        /* \"#utility.yul\":1611:1616   */\n      dup2\n        /* \"#utility.yul\":1596:1617   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1591:1594   */\n      dup3\n        /* \"#utility.yul\":1584:1618   */\n      mstore\n        /* \"#utility.yul\":1574:1624   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1630:1748   */\n    tag_108:\n        /* \"#utility.yul\":1717:1741   */\n      tag_110\n        /* \"#utility.yul\":1735:1740   */\n      dup2\n        /* \"#utility.yul\":1717:1741   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1712:1715   */\n      dup3\n        /* \"#utility.yul\":1705:1742   */\n      mstore\n        /* \"#utility.yul\":1695:1748   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:1866   */\n    tag_112:\n        /* \"#utility.yul\":1837:1859   */\n      tag_114\n        /* \"#utility.yul\":1853:1858   */\n      dup2\n        /* \"#utility.yul\":1837:1859   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1832:1835   */\n      dup3\n        /* \"#utility.yul\":1825:1860   */\n      mstore\n        /* \"#utility.yul\":1815:1866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1872:2094   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":2003:2005   */\n      0x20\n        /* \"#utility.yul\":1992:2001   */\n      dup3\n        /* \"#utility.yul\":1988:2006   */\n      add\n        /* \"#utility.yul\":1980:2006   */\n      swap1\n      pop\n        /* \"#utility.yul\":2016:2087   */\n      tag_117\n        /* \"#utility.yul\":2084:2085   */\n      0x00\n        /* \"#utility.yul\":2073:2082   */\n      dup4\n        /* \"#utility.yul\":2069:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2016:2087   */\n      tag_100\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1970:2094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2100:2412   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2226:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2262:2327   */\n      tag_119\n        /* \"#utility.yul\":2324:2325   */\n      0x00\n        /* \"#utility.yul\":2313:2322   */\n      dup4\n        /* \"#utility.yul\":2309:2326   */\n      add\n        /* \"#utility.yul\":2300:2306   */\n      dup6\n        /* \"#utility.yul\":2262:2327   */\n      tag_104\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2337:2405   */\n      tag_120\n        /* \"#utility.yul\":2401:2403   */\n      0x20\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2386:2404   */\n      add\n        /* \"#utility.yul\":2377:2383   */\n      dup5\n        /* \"#utility.yul\":2337:2405   */\n      tag_112\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2216:2412   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2418:2640   */\n    tag_43:\n      0x00\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup3\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2526:2552   */\n      swap1\n      pop\n        /* \"#utility.yul\":2562:2633   */\n      tag_122\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2619:2628   */\n      dup4\n        /* \"#utility.yul\":2615:2632   */\n      add\n        /* \"#utility.yul\":2606:2612   */\n      dup5\n        /* \"#utility.yul\":2562:2633   */\n      tag_108\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2516:2640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:3191   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":2857:2860   */\n      0x80\n        /* \"#utility.yul\":2846:2855   */\n      dup3\n        /* \"#utility.yul\":2842:2861   */\n      add\n        /* \"#utility.yul\":2834:2861   */\n      swap1\n      pop\n        /* \"#utility.yul\":2871:2942   */\n      tag_124\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2928:2937   */\n      dup4\n        /* \"#utility.yul\":2924:2941   */\n      add\n        /* \"#utility.yul\":2915:2921   */\n      dup8\n        /* \"#utility.yul\":2871:2942   */\n      tag_108\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2952:3024   */\n      tag_125\n        /* \"#utility.yul\":3020:3022   */\n      0x20\n        /* \"#utility.yul\":3009:3018   */\n      dup4\n        /* \"#utility.yul\":3005:3023   */\n      add\n        /* \"#utility.yul\":2996:3002   */\n      dup7\n        /* \"#utility.yul\":2952:3024   */\n      tag_100\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3034:3106   */\n      tag_126\n        /* \"#utility.yul\":3102:3104   */\n      0x40\n        /* \"#utility.yul\":3091:3100   */\n      dup4\n        /* \"#utility.yul\":3087:3105   */\n      add\n        /* \"#utility.yul\":3078:3084   */\n      dup6\n        /* \"#utility.yul\":3034:3106   */\n      tag_100\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3116:3184   */\n      tag_127\n        /* \"#utility.yul\":3180:3182   */\n      0x60\n        /* \"#utility.yul\":3169:3178   */\n      dup4\n        /* \"#utility.yul\":3165:3183   */\n      add\n        /* \"#utility.yul\":3156:3162   */\n      dup5\n        /* \"#utility.yul\":3116:3184   */\n      tag_112\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2824:3191   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3197:3529   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":3356:3358   */\n      0x40\n        /* \"#utility.yul\":3345:3354   */\n      dup3\n        /* \"#utility.yul\":3341:3359   */\n      add\n        /* \"#utility.yul\":3333:3359   */\n      swap1\n      pop\n        /* \"#utility.yul\":3369:3440   */\n      tag_129\n        /* \"#utility.yul\":3437:3438   */\n      0x00\n        /* \"#utility.yul\":3426:3435   */\n      dup4\n        /* \"#utility.yul\":3422:3439   */\n      add\n        /* \"#utility.yul\":3413:3419   */\n      dup6\n        /* \"#utility.yul\":3369:3440   */\n      tag_108\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3450:3522   */\n      tag_130\n        /* \"#utility.yul\":3518:3520   */\n      0x20\n        /* \"#utility.yul\":3507:3516   */\n      dup4\n        /* \"#utility.yul\":3503:3521   */\n      add\n        /* \"#utility.yul\":3494:3500   */\n      dup5\n        /* \"#utility.yul\":3450:3522   */\n      tag_108\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3323:3529   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3535:3977   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":3722:3724   */\n      0x60\n        /* \"#utility.yul\":3711:3720   */\n      dup3\n        /* \"#utility.yul\":3707:3725   */\n      add\n        /* \"#utility.yul\":3699:3725   */\n      swap1\n      pop\n        /* \"#utility.yul\":3735:3806   */\n      tag_132\n        /* \"#utility.yul\":3803:3804   */\n      0x00\n        /* \"#utility.yul\":3792:3801   */\n      dup4\n        /* \"#utility.yul\":3788:3805   */\n      add\n        /* \"#utility.yul\":3779:3785   */\n      dup7\n        /* \"#utility.yul\":3735:3806   */\n      tag_108\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3816:3888   */\n      tag_133\n        /* \"#utility.yul\":3884:3886   */\n      0x20\n        /* \"#utility.yul\":3873:3882   */\n      dup4\n        /* \"#utility.yul\":3869:3887   */\n      add\n        /* \"#utility.yul\":3860:3866   */\n      dup6\n        /* \"#utility.yul\":3816:3888   */\n      tag_108\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3898:3970   */\n      tag_134\n        /* \"#utility.yul\":3966:3968   */\n      0x40\n        /* \"#utility.yul\":3955:3964   */\n      dup4\n        /* \"#utility.yul\":3951:3969   */\n      add\n        /* \"#utility.yul\":3942:3948   */\n      dup5\n        /* \"#utility.yul\":3898:3970   */\n      tag_108\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3689:3977   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4536   */\n    tag_72:\n      0x00\n        /* \"#utility.yul\":4198:4201   */\n      0x80\n        /* \"#utility.yul\":4187:4196   */\n      dup3\n        /* \"#utility.yul\":4183:4202   */\n      add\n        /* \"#utility.yul\":4175:4202   */\n      swap1\n      pop\n        /* \"#utility.yul\":4212:4283   */\n      tag_136\n        /* \"#utility.yul\":4280:4281   */\n      0x00\n        /* \"#utility.yul\":4269:4278   */\n      dup4\n        /* \"#utility.yul\":4265:4282   */\n      add\n        /* \"#utility.yul\":4256:4262   */\n      dup8\n        /* \"#utility.yul\":4212:4283   */\n      tag_108\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4293:4365   */\n      tag_137\n        /* \"#utility.yul\":4361:4363   */\n      0x20\n        /* \"#utility.yul\":4350:4359   */\n      dup4\n        /* \"#utility.yul\":4346:4364   */\n      add\n        /* \"#utility.yul\":4337:4343   */\n      dup7\n        /* \"#utility.yul\":4293:4365   */\n      tag_108\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4375:4447   */\n      tag_138\n        /* \"#utility.yul\":4443:4445   */\n      0x40\n        /* \"#utility.yul\":4432:4441   */\n      dup4\n        /* \"#utility.yul\":4428:4446   */\n      add\n        /* \"#utility.yul\":4419:4425   */\n      dup6\n        /* \"#utility.yul\":4375:4447   */\n      tag_108\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4457:4529   */\n      tag_139\n        /* \"#utility.yul\":4525:4527   */\n      0x60\n        /* \"#utility.yul\":4514:4523   */\n      dup4\n        /* \"#utility.yul\":4510:4528   */\n      add\n        /* \"#utility.yul\":4501:4507   */\n      dup5\n        /* \"#utility.yul\":4457:4529   */\n      tag_108\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4165:4536   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4542:5198   */\n    tag_77:\n      0x00\n        /* \"#utility.yul\":4781:4784   */\n      0xa0\n        /* \"#utility.yul\":4770:4779   */\n      dup3\n        /* \"#utility.yul\":4766:4785   */\n      add\n        /* \"#utility.yul\":4758:4785   */\n      swap1\n      pop\n        /* \"#utility.yul\":4795:4866   */\n      tag_141\n        /* \"#utility.yul\":4863:4864   */\n      0x00\n        /* \"#utility.yul\":4852:4861   */\n      dup4\n        /* \"#utility.yul\":4848:4865   */\n      add\n        /* \"#utility.yul\":4839:4845   */\n      dup9\n        /* \"#utility.yul\":4795:4866   */\n      tag_108\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4876:4948   */\n      tag_142\n        /* \"#utility.yul\":4944:4946   */\n      0x20\n        /* \"#utility.yul\":4933:4942   */\n      dup4\n        /* \"#utility.yul\":4929:4947   */\n      add\n        /* \"#utility.yul\":4920:4926   */\n      dup8\n        /* \"#utility.yul\":4876:4948   */\n      tag_108\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4958:5030   */\n      tag_143\n        /* \"#utility.yul\":5026:5028   */\n      0x40\n        /* \"#utility.yul\":5015:5024   */\n      dup4\n        /* \"#utility.yul\":5011:5029   */\n      add\n        /* \"#utility.yul\":5002:5008   */\n      dup7\n        /* \"#utility.yul\":4958:5030   */\n      tag_108\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5040:5112   */\n      tag_144\n        /* \"#utility.yul\":5108:5110   */\n      0x60\n        /* \"#utility.yul\":5097:5106   */\n      dup4\n        /* \"#utility.yul\":5093:5111   */\n      add\n        /* \"#utility.yul\":5084:5090   */\n      dup6\n        /* \"#utility.yul\":5040:5112   */\n      tag_108\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5122:5191   */\n      tag_145\n        /* \"#utility.yul\":5186:5189   */\n      0x80\n        /* \"#utility.yul\":5175:5184   */\n      dup4\n        /* \"#utility.yul\":5171:5190   */\n      add\n        /* \"#utility.yul\":5162:5168   */\n      dup5\n        /* \"#utility.yul\":5122:5191   */\n      tag_112\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4748:5198   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5204:5300   */\n    tag_103:\n      0x00\n        /* \"#utility.yul\":5270:5294   */\n      tag_147\n        /* \"#utility.yul\":5288:5293   */\n      dup3\n        /* \"#utility.yul\":5270:5294   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5259:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":5249:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5396   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":5383:5388   */\n      dup2\n        /* \"#utility.yul\":5376:5389   */\n      iszero\n        /* \"#utility.yul\":5369:5390   */\n      iszero\n        /* \"#utility.yul\":5358:5390   */\n      swap1\n      pop\n        /* \"#utility.yul\":5348:5396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5402:5528   */\n    tag_148:\n      0x00\n        /* \"#utility.yul\":5479:5521   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5472:5477   */\n      dup3\n        /* \"#utility.yul\":5468:5522   */\n      and\n        /* \"#utility.yul\":5457:5522   */\n      swap1\n      pop\n        /* \"#utility.yul\":5447:5528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5611   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":5600:5605   */\n      dup2\n        /* \"#utility.yul\":5589:5605   */\n      swap1\n      pop\n        /* \"#utility.yul\":5579:5611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5617:5703   */\n    tag_115:\n      0x00\n        /* \"#utility.yul\":5692:5696   */\n      0xff\n        /* \"#utility.yul\":5685:5690   */\n      dup3\n        /* \"#utility.yul\":5681:5697   */\n      and\n        /* \"#utility.yul\":5670:5697   */\n      swap1\n      pop\n        /* \"#utility.yul\":5660:5703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5709:5831   */\n    tag_84:\n        /* \"#utility.yul\":5782:5806   */\n      tag_154\n        /* \"#utility.yul\":5800:5805   */\n      dup2\n        /* \"#utility.yul\":5782:5806   */\n      tag_103\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5775:5780   */\n      dup2\n        /* \"#utility.yul\":5772:5807   */\n      eq\n        /* \"#utility.yul\":5762:5764   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5821:5822   */\n      0x00\n        /* \"#utility.yul\":5818:5819   */\n      dup1\n        /* \"#utility.yul\":5811:5823   */\n      revert\n        /* \"#utility.yul\":5762:5764   */\n    tag_155:\n        /* \"#utility.yul\":5752:5831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5837:5959   */\n    tag_88:\n        /* \"#utility.yul\":5910:5934   */\n      tag_157\n        /* \"#utility.yul\":5928:5933   */\n      dup2\n        /* \"#utility.yul\":5910:5934   */\n      tag_111\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5903:5908   */\n      dup2\n        /* \"#utility.yul\":5900:5935   */\n      eq\n        /* \"#utility.yul\":5890:5892   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5949:5950   */\n      0x00\n        /* \"#utility.yul\":5946:5947   */\n      dup1\n        /* \"#utility.yul\":5939:5951   */\n      revert\n        /* \"#utility.yul\":5890:5892   */\n    tag_158:\n        /* \"#utility.yul\":5880:5959   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063f4957deaf21b9276b41599ea3155ecfc712308084233c5d29d36db1632491564736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506108d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806388e53ec81161008c578063c22127a911610066578063c22127a914610267578063e7702d0514610297578063f86bcb9b146102b5578063fe143615146102e8576100cf565b806388e53ec8146101e85780638eff352114610219578063a20baee614610249576100cf565b80630cd6a4bc146100d45780631f037096146101055780632235410d14610138578063386136901461016a57806352289738146101885780637bc9ec23146101b8575b600080fd5b6100ee60048036038101906100e9919061061f565b61031c565b6040516100fc92919061069f565b60405180910390f35b61011f600480360381019061011a919061061f565b61035a565b60405161012f94939291906106e3565b60405180910390f35b610152600480360381019061014d919061061f565b6103d7565b60405161016193929190610751565b60405180910390f35b610172610401565b60405161017f9190610684565b60405180910390f35b6101a2600480360381019061019d91906105a7565b610425565b6040516101af91906106c8565b60405180910390f35b6101d260048036038101906101cd91906105e3565b61044a565b6040516101df9190610684565b60405180910390f35b61020260048036038101906101fd919061061f565b610498565b604051610210929190610728565b60405180910390f35b610233600480360381019061022e919061061f565b6104bc565b60405161024091906106c8565b60405180910390f35b6102516104da565b60405161025e91906106c8565b60405180910390f35b610281600480360381019061027c919061061f565b6104e6565b60405161028e91906106c8565b60405180910390f35b61029f610504565b6040516102ac91906106c8565b60405180910390f35b6102cf60048036038101906102ca919061061f565b61050a565b6040516102df9493929190610788565b60405180910390f35b61030260048036038101906102fd919061061f565b61053a565b6040516103139594939291906107cd565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905084565b60086020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020818154811061046657600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090508060000154908060010154905082565b60076020528060005260406000206000915090508060000154905081565b670de0b6b3a764000081565b60056020528060005260406000206000915090508060000154905081565b60015481565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b60046020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60008135905061058c81610875565b92915050565b6000813590506105a18161088c565b92915050565b600080604083850312156105ba57600080fd5b60006105c88582860161057d565b92505060206105d98582860161057d565b9150509250929050565b600080604083850312156105f657600080fd5b60006106048582860161057d565b925050602061061585828601610592565b9150509250929050565b60006020828403121561063157600080fd5b600061063f84828501610592565b91505092915050565b61065181610820565b82525050565b61066081610832565b82525050565b61066f8161085e565b82525050565b61067e81610868565b82525050565b60006020820190506106996000830184610648565b92915050565b60006040820190506106b46000830185610657565b6106c16020830184610675565b9392505050565b60006020820190506106dd6000830184610666565b92915050565b60006080820190506106f86000830187610666565b6107056020830186610648565b6107126040830185610648565b61071f6060830184610675565b95945050505050565b600060408201905061073d6000830185610666565b61074a6020830184610666565b9392505050565b60006060820190506107666000830186610666565b6107736020830185610666565b6107806040830184610666565b949350505050565b600060808201905061079d6000830187610666565b6107aa6020830186610666565b6107b76040830185610666565b6107c46060830184610666565b95945050505050565b600060a0820190506107e26000830188610666565b6107ef6020830187610666565b6107fc6040830186610666565b6108096060830185610666565b6108166080830184610675565b9695505050505050565b600061082b8261083e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b61087e81610820565b811461088957600080fd5b50565b6108958161085e565b81146108a057600080fd5b5056fea264697066735822122063f4957deaf21b9276b41599ea3155ecfc712308084233c5d29d36db1632491564736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88E53EC8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC22127A9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC22127A9 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xE7702D05 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF86BCB9B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xFE143615 EQ PUSH2 0x2E8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x88E53EC8 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8EFF3521 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA20BAEE6 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xCD6A4BC EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1F037096 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2235410D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x38613690 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x52289738 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x7BC9EC23 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP3 SWAP2 SWAP1 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP3 SWAP2 SWAP1 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58C DUP2 PUSH2 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A1 DUP2 PUSH2 0x88C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5D9 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x604 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x615 DUP6 DUP3 DUP7 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x63F DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x66F DUP2 PUSH2 0x85E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x67E DUP2 PUSH2 0x868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x6C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6F8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x705 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x712 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x71F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x73D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x74A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x766 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x773 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x780 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x79D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7C4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7E2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7EF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7FC PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x809 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x816 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0x820 JUMP JUMPDEST DUP2 EQ PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xF4957DEA CALLCODE SHL SWAP3 PUSH23 0xB41599EA3155ECFC712308084233C5D29D36DB16324915 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "641:4845:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5962:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "7:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:10",
														"type": ""
													}
												],
												"src": "152:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:324:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "438:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "428:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "428:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "428:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:10"
															},
															"nodeType": "YulIf",
															"src": "390:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "452:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "467:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "481:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "471:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "496:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "531:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "542:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "527:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "527:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "551:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "506:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "496:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "579:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "594:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "598:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "624:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "659:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "679:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "634:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "624:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "342:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "353:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "365:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "373:6:10",
														"type": ""
													}
												],
												"src": "297:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "793:324:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "839:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "848:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "851:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "841:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "841:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "814:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "823:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "810:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "835:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "806:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:10"
															},
															"nodeType": "YulIf",
															"src": "803:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "865:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "880:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "894:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "884:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "909:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "944:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "955:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "940:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "940:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "964:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "919:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "919:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "909:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "992:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1007:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1021:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1011:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1037:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1072:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1083:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1068:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1068:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1092:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1047:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1047:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1037:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "755:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "766:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "778:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "786:6:10",
														"type": ""
													}
												],
												"src": "710:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1189:196:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1235:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1244:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1247:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1237:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1237:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1210:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1219:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:32:10"
															},
															"nodeType": "YulIf",
															"src": "1199:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1261:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1276:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1280:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1305:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1340:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1351:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1336:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1336:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1360:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1315:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1305:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1159:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1170:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1182:6:10",
														"type": ""
													}
												],
												"src": "1123:262:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1473:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1496:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1478:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1478:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1444:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1451:3:10",
														"type": ""
													}
												],
												"src": "1391:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1574:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1591:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1611:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1596:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1562:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1569:3:10",
														"type": ""
													}
												],
												"src": "1515:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1712:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1735:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1717:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1717:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1705:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1683:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1690:3:10",
														"type": ""
													}
												],
												"src": "1630:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1832:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1853:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1837:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1825:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1803:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1810:3:10",
														"type": ""
													}
												],
												"src": "1754:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1980:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1992:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2003:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1988:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1980:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2073:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2084:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2069:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2016:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1942:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1954:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1965:4:10",
														"type": ""
													}
												],
												"src": "1872:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2216:196:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2226:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2234:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2300:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2324:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2309:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2262:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2262:65:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2401:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2337:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2337:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint8__to_t_bool_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2180:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2192:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2200:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2211:4:10",
														"type": ""
													}
												],
												"src": "2100:312:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2516:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2526:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2538:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2549:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2534:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2526:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2606:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2630:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2615:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2562:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2562:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2511:4:10",
														"type": ""
													}
												],
												"src": "2418:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:367:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2834:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2846:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2857:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2834:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2915:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2928:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2939:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2924:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2871:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2871:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3020:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2952:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2952:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3102:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3087:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3034:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3034:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3180:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3116:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint8__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2784:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2792:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2800:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2808:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2819:4:10",
														"type": ""
													}
												],
												"src": "2646:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3323:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3333:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3333:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3413:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3426:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3437:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3422:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3369:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3369:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3494:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3507:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3518:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3450:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3450:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3287:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3299:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3307:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3318:4:10",
														"type": ""
													}
												],
												"src": "3197:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3689:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3699:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3711:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3722:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3699:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3779:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3792:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3803:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3735:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3860:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3873:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3884:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3869:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3816:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3816:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3942:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3955:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3966:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3951:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3898:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3898:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3645:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3657:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3665:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3673:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3684:4:10",
														"type": ""
													}
												],
												"src": "3535:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4165:371:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4175:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4187:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4198:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4183:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4175:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4256:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4280:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4212:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4212:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4337:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4361:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4346:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4293:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4293:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4419:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4443:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4428:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4375:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4375:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4501:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4514:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4525:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4457:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4457:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4113:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4125:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4133:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4141:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4149:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4160:4:10",
														"type": ""
													}
												],
												"src": "3983:553:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4748:450:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4758:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4770:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4766:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4758:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4839:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4852:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4863:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4848:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4795:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4795:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4920:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4933:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4944:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4876:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4876:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5002:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4958:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4958:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5084:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5097:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5108:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5093:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5040:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5040:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5162:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5175:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5186:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5171:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5122:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5122:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4688:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4700:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4708:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4716:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4724:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4732:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4743:4:10",
														"type": ""
													}
												],
												"src": "4542:656:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5249:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5259:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5288:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5270:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5259:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5231:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5241:7:10",
														"type": ""
													}
												],
												"src": "5204:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5348:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5358:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5383:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5376:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5376:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5358:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5330:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5340:7:10",
														"type": ""
													}
												],
												"src": "5306:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5447:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5457:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5472:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5479:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5457:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5429:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5439:7:10",
														"type": ""
													}
												],
												"src": "5402:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5579:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5589:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5600:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5589:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5561:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5571:7:10",
														"type": ""
													}
												],
												"src": "5534:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5660:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5670:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5685:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5681:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5681:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5670:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5642:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5652:7:10",
														"type": ""
													}
												],
												"src": "5617:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5752:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5809:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5818:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5821:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5811:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5811:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5811:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5775:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5800:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5782:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5782:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5772:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5772:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:43:10"
															},
															"nodeType": "YulIf",
															"src": "5762:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5745:5:10",
														"type": ""
													}
												],
												"src": "5709:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5880:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5937:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5946:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5949:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5939:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5939:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5939:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5903:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5928:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5910:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5910:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5900:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5893:43:10"
															},
															"nodeType": "YulIf",
															"src": "5890:2:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5873:5:10",
														"type": ""
													}
												],
												"src": "5837:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_uint8__to_t_bool_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint8__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806388e53ec81161008c578063c22127a911610066578063c22127a914610267578063e7702d0514610297578063f86bcb9b146102b5578063fe143615146102e8576100cf565b806388e53ec8146101e85780638eff352114610219578063a20baee614610249576100cf565b80630cd6a4bc146100d45780631f037096146101055780632235410d14610138578063386136901461016a57806352289738146101885780637bc9ec23146101b8575b600080fd5b6100ee60048036038101906100e9919061061f565b61031c565b6040516100fc92919061069f565b60405180910390f35b61011f600480360381019061011a919061061f565b61035a565b60405161012f94939291906106e3565b60405180910390f35b610152600480360381019061014d919061061f565b6103d7565b60405161016193929190610751565b60405180910390f35b610172610401565b60405161017f9190610684565b60405180910390f35b6101a2600480360381019061019d91906105a7565b610425565b6040516101af91906106c8565b60405180910390f35b6101d260048036038101906101cd91906105e3565b61044a565b6040516101df9190610684565b60405180910390f35b61020260048036038101906101fd919061061f565b610498565b604051610210929190610728565b60405180910390f35b610233600480360381019061022e919061061f565b6104bc565b60405161024091906106c8565b60405180910390f35b6102516104da565b60405161025e91906106c8565b60405180910390f35b610281600480360381019061027c919061061f565b6104e6565b60405161028e91906106c8565b60405180910390f35b61029f610504565b6040516102ac91906106c8565b60405180910390f35b6102cf60048036038101906102ca919061061f565b61050a565b6040516102df9493929190610788565b60405180910390f35b61030260048036038101906102fd919061061f565b61053a565b6040516103139594939291906107cd565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905084565b60086020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020818154811061046657600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090508060000154908060010154905082565b60076020528060005260406000206000915090508060000154905081565b670de0b6b3a764000081565b60056020528060005260406000206000915090508060000154905081565b60015481565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b60046020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60008135905061058c81610875565b92915050565b6000813590506105a18161088c565b92915050565b600080604083850312156105ba57600080fd5b60006105c88582860161057d565b92505060206105d98582860161057d565b9150509250929050565b600080604083850312156105f657600080fd5b60006106048582860161057d565b925050602061061585828601610592565b9150509250929050565b60006020828403121561063157600080fd5b600061063f84828501610592565b91505092915050565b61065181610820565b82525050565b61066081610832565b82525050565b61066f8161085e565b82525050565b61067e81610868565b82525050565b60006020820190506106996000830184610648565b92915050565b60006040820190506106b46000830185610657565b6106c16020830184610675565b9392505050565b60006020820190506106dd6000830184610666565b92915050565b60006080820190506106f86000830187610666565b6107056020830186610648565b6107126040830185610648565b61071f6060830184610675565b95945050505050565b600060408201905061073d6000830185610666565b61074a6020830184610666565b9392505050565b60006060820190506107666000830186610666565b6107736020830185610666565b6107806040830184610666565b949350505050565b600060808201905061079d6000830187610666565b6107aa6020830186610666565b6107b76040830185610666565b6107c46060830184610666565b95945050505050565b600060a0820190506107e26000830188610666565b6107ef6020830187610666565b6107fc6040830186610666565b6108096060830185610666565b6108166080830184610675565b9695505050505050565b600061082b8261083e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b61087e81610820565b811461088957600080fd5b50565b6108958161085e565b81146108a057600080fd5b5056fea264697066735822122063f4957deaf21b9276b41599ea3155ecfc712308084233c5d29d36db1632491564736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88E53EC8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC22127A9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC22127A9 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xE7702D05 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF86BCB9B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xFE143615 EQ PUSH2 0x2E8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x88E53EC8 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8EFF3521 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA20BAEE6 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xCD6A4BC EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1F037096 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2235410D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x38613690 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x52289738 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x7BC9EC23 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP3 SWAP2 SWAP1 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP3 SWAP2 SWAP1 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58C DUP2 PUSH2 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A1 DUP2 PUSH2 0x88C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5D9 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x604 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x615 DUP6 DUP3 DUP7 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x63F DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x66F DUP2 PUSH2 0x85E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x67E DUP2 PUSH2 0x868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x6C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6F8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x705 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x712 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x71F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x73D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x74A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x766 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x773 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x780 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x79D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7C4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7E2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7EF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7FC PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x809 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x816 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0x820 JUMP JUMPDEST DUP2 EQ PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xF4957DEA CALLCODE SHL SWAP3 PUSH23 0xB41599EA3155ECFC712308084233C5D29D36DB16324915 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "641:4845:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:54:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3645;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3995:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2682:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4108:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4185:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3941:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2628;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2715:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3881:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3765:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3705:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3645:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3995:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2682:27::-;;;;;;;;;;;;:::o;4108:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4185:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4049:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3941:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;2628:::-;2672:4;2628:48;:::o;3823:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;2715:28::-;;;;:::o;3881:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3765:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:10:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:407::-;;;422:2;410:9;401:7;397:23;393:32;390:2;;;438:1;435;428:12;390:2;481:1;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;452:117;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;380:324;;;;;:::o;710:407::-;;;835:2;823:9;814:7;810:23;806:32;803:2;;;851:1;848;841:12;803:2;894:1;919:53;964:7;955:6;944:9;940:22;919:53;:::i;:::-;909:63;;865:117;1021:2;1047:53;1092:7;1083:6;1072:9;1068:22;1047:53;:::i;:::-;1037:63;;992:118;793:324;;;;;:::o;1123:262::-;;1231:2;1219:9;1210:7;1206:23;1202:32;1199:2;;;1247:1;1244;1237:12;1199:2;1290:1;1315:53;1360:7;1351:6;1340:9;1336:22;1315:53;:::i;:::-;1305:63;;1261:117;1189:196;;;;:::o;1391:118::-;1478:24;1496:5;1478:24;:::i;:::-;1473:3;1466:37;1456:53;;:::o;1515:109::-;1596:21;1611:5;1596:21;:::i;:::-;1591:3;1584:34;1574:50;;:::o;1630:118::-;1717:24;1735:5;1717:24;:::i;:::-;1712:3;1705:37;1695:53;;:::o;1754:112::-;1837:22;1853:5;1837:22;:::i;:::-;1832:3;1825:35;1815:51;;:::o;1872:222::-;;2003:2;1992:9;1988:18;1980:26;;2016:71;2084:1;2073:9;2069:17;2060:6;2016:71;:::i;:::-;1970:124;;;;:::o;2100:312::-;;2249:2;2238:9;2234:18;2226:26;;2262:65;2324:1;2313:9;2309:17;2300:6;2262:65;:::i;:::-;2337:68;2401:2;2390:9;2386:18;2377:6;2337:68;:::i;:::-;2216:196;;;;;:::o;2418:222::-;;2549:2;2538:9;2534:18;2526:26;;2562:71;2630:1;2619:9;2615:17;2606:6;2562:71;:::i;:::-;2516:124;;;;:::o;2646:545::-;;2857:3;2846:9;2842:19;2834:27;;2871:71;2939:1;2928:9;2924:17;2915:6;2871:71;:::i;:::-;2952:72;3020:2;3009:9;3005:18;2996:6;2952:72;:::i;:::-;3034;3102:2;3091:9;3087:18;3078:6;3034:72;:::i;:::-;3116:68;3180:2;3169:9;3165:18;3156:6;3116:68;:::i;:::-;2824:367;;;;;;;:::o;3197:332::-;;3356:2;3345:9;3341:18;3333:26;;3369:71;3437:1;3426:9;3422:17;3413:6;3369:71;:::i;:::-;3450:72;3518:2;3507:9;3503:18;3494:6;3450:72;:::i;:::-;3323:206;;;;;:::o;3535:442::-;;3722:2;3711:9;3707:18;3699:26;;3735:71;3803:1;3792:9;3788:17;3779:6;3735:71;:::i;:::-;3816:72;3884:2;3873:9;3869:18;3860:6;3816:72;:::i;:::-;3898;3966:2;3955:9;3951:18;3942:6;3898:72;:::i;:::-;3689:288;;;;;;:::o;3983:553::-;;4198:3;4187:9;4183:19;4175:27;;4212:71;4280:1;4269:9;4265:17;4256:6;4212:71;:::i;:::-;4293:72;4361:2;4350:9;4346:18;4337:6;4293:72;:::i;:::-;4375;4443:2;4432:9;4428:18;4419:6;4375:72;:::i;:::-;4457;4525:2;4514:9;4510:18;4501:6;4457:72;:::i;:::-;4165:371;;;;;;;:::o;4542:656::-;;4781:3;4770:9;4766:19;4758:27;;4795:71;4863:1;4852:9;4848:17;4839:6;4795:71;:::i;:::-;4876:72;4944:2;4933:9;4929:18;4920:6;4876:72;:::i;:::-;4958;5026:2;5015:9;5011:18;5002:6;4958:72;:::i;:::-;5040;5108:2;5097:9;5093:18;5084:6;5040:72;:::i;:::-;5122:69;5186:3;5175:9;5171:19;5162:6;5122:69;:::i;:::-;4748:450;;;;;;;;:::o;5204:96::-;;5270:24;5288:5;5270:24;:::i;:::-;5259:35;;5249:51;;;:::o;5306:90::-;;5383:5;5376:13;5369:21;5358:32;;5348:48;;;:::o;5402:126::-;;5479:42;5472:5;5468:54;5457:65;;5447:81;;;:::o;5534:77::-;;5600:5;5589:16;;5579:32;;;:::o;5617:86::-;;5692:4;5685:5;5681:16;5670:27;;5660:43;;;:::o;5709:122::-;5782:24;5800:5;5782:24;:::i;:::-;5775:5;5772:35;5762:2;;5821:1;5818;5811:12;5762:2;5752:79;:::o;5837:122::-;5910:24;5928:5;5910:24;:::i;:::-;5903:5;5900:35;5890:2;;5949:1;5946;5939:12;5890:2;5880:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "453000",
								"executionCost": "486",
								"totalCost": "453486"
							},
							"external": {
								"DECIMAL_PRECISION()": "396",
								"agentAddress()": "1278",
								"exitParams(uint256)": "infinite",
								"makerMarginTokens(address,uint256)": "infinite",
								"makerTokenMargin(address,address)": "infinite",
								"margin2(uint256)": "infinite",
								"marginParams1(uint256)": "infinite",
								"openInterest(uint256)": "infinite",
								"positionCore1(uint256)": "infinite",
								"positionCore2(uint256)": "2526",
								"positionCount()": "1173",
								"priceParams1(uint256)": "infinite",
								"priceParams2(uint256)": "infinite"
							},
							"internal": {
								"_shouldClosePosition(uint256,uint8,uint256,uint256,uint256,uint256)": "infinite",
								"_updateSL(uint256,uint256,address,uint8,uint256,uint256,uint256)": "infinite",
								"_updateTP(uint256,uint256,address,uint8,uint256,uint256,uint256)": "infinite",
								"executeCloseAction(uint256,address)": "infinite",
								"forceExecution(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 641,
									"end": 5486,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 5486,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063f4957deaf21b9276b41599ea3155ecfc712308084233c5d29d36db1632491564736f6c63430008010033",
									".code": [
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "88E53EC8"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "C22127A9"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "C22127A9"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "E7702D05"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "F86BCB9B"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "FE143615"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "88E53EC8"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "8EFF3521"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "A20BAEE6"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "CD6A4BC"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "1F037096"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "2235410D"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "38613690"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "52289738"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "7BC9EC23"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 5486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 401,
											"end": 408,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 397,
											"end": 420,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 393,
											"end": 425,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 390,
											"end": 392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 438,
											"end": 439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 428,
											"end": 440,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 390,
											"end": 392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 551,
											"end": 558,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 542,
											"end": 548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 531,
											"end": 540,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 527,
											"end": 549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 506,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 496,
											"end": 559,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 496,
											"end": 559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 452,
											"end": 569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 679,
											"end": 686,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 655,
											"end": 677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 634,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 624,
											"end": 687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 624,
											"end": 687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 835,
											"end": 837,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 814,
											"end": 821,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 810,
											"end": 833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 806,
											"end": 838,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 851,
											"end": 852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 853,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 894,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 964,
											"end": 971,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 944,
											"end": 953,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 940,
											"end": 962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 919,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 909,
											"end": 972,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 909,
											"end": 972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1092,
											"end": 1099,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1234,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1611,
											"end": 1616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1618,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1748,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1630,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1735,
											"end": 1740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1754,
											"end": 1866,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1754,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1853,
											"end": 1858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2005,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2401,
											"end": 2403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2615,
											"end": 2632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2860,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3180,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3358,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3942,
											"end": 3948,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4187,
											"end": 4196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4343,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4443,
											"end": 4445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4425,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4525,
											"end": 4527,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4507,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4784,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4863,
											"end": 4864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4861,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4944,
											"end": 4946,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4942,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 4947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4926,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5097,
											"end": 5106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5186,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5168,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5288,
											"end": 5293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5390,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5521,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5472,
											"end": 5477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5522,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5696,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5685,
											"end": 5690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5697,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5709,
											"end": 5831,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5709,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5800,
											"end": 5805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5775,
											"end": 5780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5807,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5823,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5837,
											"end": 5959,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 5837,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5935,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5946,
											"end": 5947,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5939,
											"end": 5951,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5959,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DECIMAL_PRECISION()": "a20baee6",
							"agentAddress()": "38613690",
							"exitParams(uint256)": "2235410d",
							"makerMarginTokens(address,uint256)": "7bc9ec23",
							"makerTokenMargin(address,address)": "52289738",
							"margin2(uint256)": "8eff3521",
							"marginParams1(uint256)": "f86bcb9b",
							"openInterest(uint256)": "88e53ec8",
							"positionCore1(uint256)": "1f037096",
							"positionCore2(uint256)": "0cd6a4bc",
							"positionCount()": "e7702d05",
							"priceParams1(uint256)": "fe143615",
							"priceParams2(uint256)": "c22127a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DECIMAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exitParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stopLossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"makerMarginTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"makerTokenMargin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"margin2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialLoan\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marginParams1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxedMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"excessMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionCore1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"listingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"positionType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionCore2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status1\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"status2\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceParams1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAtEntry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceParams2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/driverUtils/CSDExecutionPartial.sol\":\"CSDExecutionPartial\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/driverUtils/CSDExecutionPartial.sol\":{\"keccak256\":\"0x5c3a388d1ca957798dc0f789b4147b43679ff6e6150f7d0bea6d6e8e756a4b96\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://826a8a707551a911f565ecff1459cc26ad3ab6ddd578fdecd4512c546a9af13f\",\"dweb:/ipfs/QmcoANnHHPKnfEtjb4XDDLB2GPtD3PybRgtF67UBMBcBPn\"]},\"ShockSpace/driverUtils/CSDPositionPartial.sol\":{\"keccak256\":\"0x9ca658943988d87076b02a14c2aa2542e1a76c9ba45c09a6d7b5025356010268\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://943f85ca561495d290f076919a2c2c470a40da7bda62e4774fb8c69e53241674\",\"dweb:/ipfs/QmcARHFBV2eEivoCksez8NwhBwNYHukUgH1MWYUHcgWyKK\"]},\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":{\"keccak256\":\"0x0b85fa87b21ef193f955823092b2be587acb2bfe644b859c10ed3f3a30e590fc\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://17fc79e27ef9eeb6a47b0746ec7807ba331c0abfe7720a0d086e2d364827ebb6\",\"dweb:/ipfs/QmZ3aH4rSZ36UjtGWpLE8TQ3riX7gKBPc8tdVfJ25YA8BG\"]},\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1641,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "agentAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1643,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "positionCount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1700,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "positionCore1",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(PositionCore1)1652_storage)"
							},
							{
								"astId": 1705,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "positionCore2",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(PositionCore2)1657_storage)"
							},
							{
								"astId": 1710,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "priceParams1",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(PriceParams1)1668_storage)"
							},
							{
								"astId": 1715,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "priceParams2",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(PriceParams2)1671_storage)"
							},
							{
								"astId": 1720,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "marginParams1",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(MarginParams1)1680_storage)"
							},
							{
								"astId": 1725,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "margin2",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(MarginParams2)1683_storage)"
							},
							{
								"astId": 1730,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "exitParams",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(ExitParams)1690_storage)"
							},
							{
								"astId": 1735,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "openInterest",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(OpenInterest)1695_storage)"
							},
							{
								"astId": 1741,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "makerTokenMargin",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1746,
								"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
								"label": "makerMarginTokens",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(ExitParams)1690_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.ExitParams)",
								"numberOfBytes": "32",
								"value": "t_struct(ExitParams)1690_storage"
							},
							"t_mapping(t_uint256,t_struct(MarginParams1)1680_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1)",
								"numberOfBytes": "32",
								"value": "t_struct(MarginParams1)1680_storage"
							},
							"t_mapping(t_uint256,t_struct(MarginParams2)1683_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.MarginParams2)",
								"numberOfBytes": "32",
								"value": "t_struct(MarginParams2)1683_storage"
							},
							"t_mapping(t_uint256,t_struct(OpenInterest)1695_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.OpenInterest)",
								"numberOfBytes": "32",
								"value": "t_struct(OpenInterest)1695_storage"
							},
							"t_mapping(t_uint256,t_struct(PositionCore1)1652_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1)",
								"numberOfBytes": "32",
								"value": "t_struct(PositionCore1)1652_storage"
							},
							"t_mapping(t_uint256,t_struct(PositionCore2)1657_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PositionCore2)",
								"numberOfBytes": "32",
								"value": "t_struct(PositionCore2)1657_storage"
							},
							"t_mapping(t_uint256,t_struct(PriceParams1)1668_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceParams1)1668_storage"
							},
							"t_mapping(t_uint256,t_struct(PriceParams2)1671_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PriceParams2)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceParams2)1671_storage"
							},
							"t_struct(ExitParams)1690_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.ExitParams",
								"members": [
									{
										"astId": 1685,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "stopLossPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1687,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "takeProfitPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1689,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "exitPrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(MarginParams1)1680_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.MarginParams1",
								"members": [
									{
										"astId": 1673,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "initialMargin",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1675,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "taxedMargin",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1677,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "excessMargin",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1679,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "fee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(MarginParams2)1683_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.MarginParams2",
								"members": [
									{
										"astId": 1682,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "initialLoan",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(OpenInterest)1695_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.OpenInterest",
								"members": [
									{
										"astId": 1692,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "leverageAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1694,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PositionCore1)1652_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PositionCore1",
								"members": [
									{
										"astId": 1645,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "positionId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1647,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "listingAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1649,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "makerAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1651,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "positionType",
										"offset": 20,
										"slot": "2",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(PositionCore2)1657_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PositionCore2",
								"members": [
									{
										"astId": 1654,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "status1",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1656,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "status2",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(PriceParams1)1668_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PriceParams1",
								"members": [
									{
										"astId": 1659,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "minEntryPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1661,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "maxEntryPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1663,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "minPrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1665,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "priceAtEntry",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1667,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "leverage",
										"offset": 0,
										"slot": "4",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PriceParams2)1671_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PriceParams2",
								"members": [
									{
										"astId": 1670,
										"contract": "ShockSpace/driverUtils/CSDExecutionPartial.sol:CSDExecutionPartial",
										"label": "liquidationPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/driverUtils/CSDPositionPartial.sol": {
				"CSDPositionPartial": {
					"abi": [
						{
							"inputs": [],
							"name": "DECIMAL_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "agentAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "exitParams",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stopLossPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "takeProfitPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "exitPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "makerMarginTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "makerTokenMargin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "margin2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "initialLoan",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "marginParams1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "initialMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "taxedMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "excessMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "openInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "leverageAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positionCore1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "positionId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "listingAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "makerAddress",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "positionType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positionCore2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "status1",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "status2",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positionCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "priceParams1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "minEntryPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxEntryPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "priceAtEntry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "leverage",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "priceParams2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidationPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/driverUtils/CSDPositionPartial.sol\":2488:12843  contract CSDPositionPartial is CSDUtilityPartial {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/driverUtils/CSDPositionPartial.sol\":2488:12843  contract CSDPositionPartial is CSDUtilityPartial {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88e53ec8\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc22127a9\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc22127a9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe7702d05\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf86bcb9b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfe143615\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x88e53ec8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8eff3521\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa20baee6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0cd6a4bc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f037096\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2235410d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38613690\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x52289738\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7bc9ec23\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3705:3759  mapping(uint256 => PositionCore2) public positionCore2 */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3645:3699  mapping(uint256 => PositionCore1) public positionCore1 */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3995:4043  mapping(uint256 => ExitParams) public exitParams */\n    tag_5:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2682:2709  address public agentAddress */\n    tag_6:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4108:4179  mapping(address => mapping(address => uint256)) public makerTokenMargin */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4185:4239  mapping(address => address[]) public makerMarginTokens */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4049:4101  mapping(uint256 => OpenInterest) public openInterest */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3941:3989  mapping(uint256 => MarginParams2) public margin2 */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3823:3875  mapping(uint256 => PriceParams2) public priceParams2 */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2715:2743  uint256 public positionCount */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3881:3935  mapping(uint256 => MarginParams1) public marginParams1 */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3765:3817  mapping(uint256 => PriceParams1) public priceParams1 */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3705:3759  mapping(uint256 => PositionCore2) public positionCore2 */\n    tag_21:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3645:3699  mapping(uint256 => PositionCore1) public positionCore1 */\n    tag_26:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3995:4043  mapping(uint256 => ExitParams) public exitParams */\n    tag_31:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2682:2709  address public agentAddress */\n    tag_35:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4108:4179  mapping(address => mapping(address => uint256)) public makerTokenMargin */\n    tag_41:\n      mstore(0x20, 0x0a)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4185:4239  mapping(address => address[]) public makerMarginTokens */\n    tag_47:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4049:4101  mapping(uint256 => OpenInterest) public openInterest */\n    tag_51:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3941:3989  mapping(uint256 => MarginParams2) public margin2 */\n    tag_56:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n    tag_59:\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2672:2676  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3823:3875  mapping(uint256 => PriceParams2) public priceParams2 */\n    tag_63:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2715:2743  uint256 public positionCount */\n    tag_66:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3881:3935  mapping(uint256 => MarginParams1) public marginParams1 */\n    tag_70:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3765:3817  mapping(uint256 => PriceParams1) public priceParams1 */\n    tag_75:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_81:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_83\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_87\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:704   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":422:424   */\n      0x40\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":401:408   */\n      dup6\n        /* \"#utility.yul\":397:420   */\n      sub\n        /* \"#utility.yul\":393:425   */\n      slt\n        /* \"#utility.yul\":390:392   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":438:439   */\n      0x00\n        /* \"#utility.yul\":435:436   */\n      dup1\n        /* \"#utility.yul\":428:440   */\n      revert\n        /* \"#utility.yul\":390:392   */\n    tag_90:\n        /* \"#utility.yul\":481:482   */\n      0x00\n        /* \"#utility.yul\":506:559   */\n      tag_91\n        /* \"#utility.yul\":551:558   */\n      dup6\n        /* \"#utility.yul\":542:548   */\n      dup3\n        /* \"#utility.yul\":531:540   */\n      dup7\n        /* \"#utility.yul\":527:549   */\n      add\n        /* \"#utility.yul\":506:559   */\n      tag_81\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":496:559   */\n      swap3\n      pop\n        /* \"#utility.yul\":452:569   */\n      pop\n        /* \"#utility.yul\":608:610   */\n      0x20\n        /* \"#utility.yul\":634:687   */\n      tag_92\n        /* \"#utility.yul\":679:686   */\n      dup6\n        /* \"#utility.yul\":670:676   */\n      dup3\n        /* \"#utility.yul\":659:668   */\n      dup7\n        /* \"#utility.yul\":655:677   */\n      add\n        /* \"#utility.yul\":634:687   */\n      tag_81\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":624:687   */\n      swap2\n      pop\n        /* \"#utility.yul\":579:697   */\n      pop\n        /* \"#utility.yul\":380:704   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":710:1117   */\n    tag_46:\n      0x00\n      dup1\n        /* \"#utility.yul\":835:837   */\n      0x40\n        /* \"#utility.yul\":823:832   */\n      dup4\n        /* \"#utility.yul\":814:821   */\n      dup6\n        /* \"#utility.yul\":810:833   */\n      sub\n        /* \"#utility.yul\":806:838   */\n      slt\n        /* \"#utility.yul\":803:805   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":851:852   */\n      0x00\n        /* \"#utility.yul\":848:849   */\n      dup1\n        /* \"#utility.yul\":841:853   */\n      revert\n        /* \"#utility.yul\":803:805   */\n    tag_94:\n        /* \"#utility.yul\":894:895   */\n      0x00\n        /* \"#utility.yul\":919:972   */\n      tag_95\n        /* \"#utility.yul\":964:971   */\n      dup6\n        /* \"#utility.yul\":955:961   */\n      dup3\n        /* \"#utility.yul\":944:953   */\n      dup7\n        /* \"#utility.yul\":940:962   */\n      add\n        /* \"#utility.yul\":919:972   */\n      tag_81\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":909:972   */\n      swap3\n      pop\n        /* \"#utility.yul\":865:982   */\n      pop\n        /* \"#utility.yul\":1021:1023   */\n      0x20\n        /* \"#utility.yul\":1047:1100   */\n      tag_96\n        /* \"#utility.yul\":1092:1099   */\n      dup6\n        /* \"#utility.yul\":1083:1089   */\n      dup3\n        /* \"#utility.yul\":1072:1081   */\n      dup7\n        /* \"#utility.yul\":1068:1090   */\n      add\n        /* \"#utility.yul\":1047:1100   */\n      tag_85\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1037:1100   */\n      swap2\n      pop\n        /* \"#utility.yul\":992:1110   */\n      pop\n        /* \"#utility.yul\":793:1117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1385   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":1231:1233   */\n      0x20\n        /* \"#utility.yul\":1219:1228   */\n      dup3\n        /* \"#utility.yul\":1210:1217   */\n      dup5\n        /* \"#utility.yul\":1206:1229   */\n      sub\n        /* \"#utility.yul\":1202:1234   */\n      slt\n        /* \"#utility.yul\":1199:1201   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1247:1248   */\n      0x00\n        /* \"#utility.yul\":1244:1245   */\n      dup1\n        /* \"#utility.yul\":1237:1249   */\n      revert\n        /* \"#utility.yul\":1199:1201   */\n    tag_98:\n        /* \"#utility.yul\":1290:1291   */\n      0x00\n        /* \"#utility.yul\":1315:1368   */\n      tag_99\n        /* \"#utility.yul\":1360:1367   */\n      dup5\n        /* \"#utility.yul\":1351:1357   */\n      dup3\n        /* \"#utility.yul\":1340:1349   */\n      dup6\n        /* \"#utility.yul\":1336:1358   */\n      add\n        /* \"#utility.yul\":1315:1368   */\n      tag_85\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1305:1368   */\n      swap2\n      pop\n        /* \"#utility.yul\":1261:1378   */\n      pop\n        /* \"#utility.yul\":1189:1385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1391:1509   */\n    tag_100:\n        /* \"#utility.yul\":1478:1502   */\n      tag_102\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1478:1502   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1473:1476   */\n      dup3\n        /* \"#utility.yul\":1466:1503   */\n      mstore\n        /* \"#utility.yul\":1456:1509   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1515:1624   */\n    tag_104:\n        /* \"#utility.yul\":1596:1617   */\n      tag_106\n        /* \"#utility.yul\":1611:1616   */\n      dup2\n        /* \"#utility.yul\":1596:1617   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1591:1594   */\n      dup3\n        /* \"#utility.yul\":1584:1618   */\n      mstore\n        /* \"#utility.yul\":1574:1624   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1630:1748   */\n    tag_108:\n        /* \"#utility.yul\":1717:1741   */\n      tag_110\n        /* \"#utility.yul\":1735:1740   */\n      dup2\n        /* \"#utility.yul\":1717:1741   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1712:1715   */\n      dup3\n        /* \"#utility.yul\":1705:1742   */\n      mstore\n        /* \"#utility.yul\":1695:1748   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:1866   */\n    tag_112:\n        /* \"#utility.yul\":1837:1859   */\n      tag_114\n        /* \"#utility.yul\":1853:1858   */\n      dup2\n        /* \"#utility.yul\":1837:1859   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1832:1835   */\n      dup3\n        /* \"#utility.yul\":1825:1860   */\n      mstore\n        /* \"#utility.yul\":1815:1866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1872:2094   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":2003:2005   */\n      0x20\n        /* \"#utility.yul\":1992:2001   */\n      dup3\n        /* \"#utility.yul\":1988:2006   */\n      add\n        /* \"#utility.yul\":1980:2006   */\n      swap1\n      pop\n        /* \"#utility.yul\":2016:2087   */\n      tag_117\n        /* \"#utility.yul\":2084:2085   */\n      0x00\n        /* \"#utility.yul\":2073:2082   */\n      dup4\n        /* \"#utility.yul\":2069:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2016:2087   */\n      tag_100\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1970:2094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2100:2412   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2226:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2262:2327   */\n      tag_119\n        /* \"#utility.yul\":2324:2325   */\n      0x00\n        /* \"#utility.yul\":2313:2322   */\n      dup4\n        /* \"#utility.yul\":2309:2326   */\n      add\n        /* \"#utility.yul\":2300:2306   */\n      dup6\n        /* \"#utility.yul\":2262:2327   */\n      tag_104\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2337:2405   */\n      tag_120\n        /* \"#utility.yul\":2401:2403   */\n      0x20\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2386:2404   */\n      add\n        /* \"#utility.yul\":2377:2383   */\n      dup5\n        /* \"#utility.yul\":2337:2405   */\n      tag_112\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2216:2412   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2418:2640   */\n    tag_43:\n      0x00\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup3\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2526:2552   */\n      swap1\n      pop\n        /* \"#utility.yul\":2562:2633   */\n      tag_122\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2619:2628   */\n      dup4\n        /* \"#utility.yul\":2615:2632   */\n      add\n        /* \"#utility.yul\":2606:2612   */\n      dup5\n        /* \"#utility.yul\":2562:2633   */\n      tag_108\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2516:2640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:3191   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":2857:2860   */\n      0x80\n        /* \"#utility.yul\":2846:2855   */\n      dup3\n        /* \"#utility.yul\":2842:2861   */\n      add\n        /* \"#utility.yul\":2834:2861   */\n      swap1\n      pop\n        /* \"#utility.yul\":2871:2942   */\n      tag_124\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2928:2937   */\n      dup4\n        /* \"#utility.yul\":2924:2941   */\n      add\n        /* \"#utility.yul\":2915:2921   */\n      dup8\n        /* \"#utility.yul\":2871:2942   */\n      tag_108\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2952:3024   */\n      tag_125\n        /* \"#utility.yul\":3020:3022   */\n      0x20\n        /* \"#utility.yul\":3009:3018   */\n      dup4\n        /* \"#utility.yul\":3005:3023   */\n      add\n        /* \"#utility.yul\":2996:3002   */\n      dup7\n        /* \"#utility.yul\":2952:3024   */\n      tag_100\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3034:3106   */\n      tag_126\n        /* \"#utility.yul\":3102:3104   */\n      0x40\n        /* \"#utility.yul\":3091:3100   */\n      dup4\n        /* \"#utility.yul\":3087:3105   */\n      add\n        /* \"#utility.yul\":3078:3084   */\n      dup6\n        /* \"#utility.yul\":3034:3106   */\n      tag_100\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3116:3184   */\n      tag_127\n        /* \"#utility.yul\":3180:3182   */\n      0x60\n        /* \"#utility.yul\":3169:3178   */\n      dup4\n        /* \"#utility.yul\":3165:3183   */\n      add\n        /* \"#utility.yul\":3156:3162   */\n      dup5\n        /* \"#utility.yul\":3116:3184   */\n      tag_112\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2824:3191   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3197:3529   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":3356:3358   */\n      0x40\n        /* \"#utility.yul\":3345:3354   */\n      dup3\n        /* \"#utility.yul\":3341:3359   */\n      add\n        /* \"#utility.yul\":3333:3359   */\n      swap1\n      pop\n        /* \"#utility.yul\":3369:3440   */\n      tag_129\n        /* \"#utility.yul\":3437:3438   */\n      0x00\n        /* \"#utility.yul\":3426:3435   */\n      dup4\n        /* \"#utility.yul\":3422:3439   */\n      add\n        /* \"#utility.yul\":3413:3419   */\n      dup6\n        /* \"#utility.yul\":3369:3440   */\n      tag_108\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3450:3522   */\n      tag_130\n        /* \"#utility.yul\":3518:3520   */\n      0x20\n        /* \"#utility.yul\":3507:3516   */\n      dup4\n        /* \"#utility.yul\":3503:3521   */\n      add\n        /* \"#utility.yul\":3494:3500   */\n      dup5\n        /* \"#utility.yul\":3450:3522   */\n      tag_108\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3323:3529   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3535:3977   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":3722:3724   */\n      0x60\n        /* \"#utility.yul\":3711:3720   */\n      dup3\n        /* \"#utility.yul\":3707:3725   */\n      add\n        /* \"#utility.yul\":3699:3725   */\n      swap1\n      pop\n        /* \"#utility.yul\":3735:3806   */\n      tag_132\n        /* \"#utility.yul\":3803:3804   */\n      0x00\n        /* \"#utility.yul\":3792:3801   */\n      dup4\n        /* \"#utility.yul\":3788:3805   */\n      add\n        /* \"#utility.yul\":3779:3785   */\n      dup7\n        /* \"#utility.yul\":3735:3806   */\n      tag_108\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3816:3888   */\n      tag_133\n        /* \"#utility.yul\":3884:3886   */\n      0x20\n        /* \"#utility.yul\":3873:3882   */\n      dup4\n        /* \"#utility.yul\":3869:3887   */\n      add\n        /* \"#utility.yul\":3860:3866   */\n      dup6\n        /* \"#utility.yul\":3816:3888   */\n      tag_108\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3898:3970   */\n      tag_134\n        /* \"#utility.yul\":3966:3968   */\n      0x40\n        /* \"#utility.yul\":3955:3964   */\n      dup4\n        /* \"#utility.yul\":3951:3969   */\n      add\n        /* \"#utility.yul\":3942:3948   */\n      dup5\n        /* \"#utility.yul\":3898:3970   */\n      tag_108\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3689:3977   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4536   */\n    tag_72:\n      0x00\n        /* \"#utility.yul\":4198:4201   */\n      0x80\n        /* \"#utility.yul\":4187:4196   */\n      dup3\n        /* \"#utility.yul\":4183:4202   */\n      add\n        /* \"#utility.yul\":4175:4202   */\n      swap1\n      pop\n        /* \"#utility.yul\":4212:4283   */\n      tag_136\n        /* \"#utility.yul\":4280:4281   */\n      0x00\n        /* \"#utility.yul\":4269:4278   */\n      dup4\n        /* \"#utility.yul\":4265:4282   */\n      add\n        /* \"#utility.yul\":4256:4262   */\n      dup8\n        /* \"#utility.yul\":4212:4283   */\n      tag_108\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4293:4365   */\n      tag_137\n        /* \"#utility.yul\":4361:4363   */\n      0x20\n        /* \"#utility.yul\":4350:4359   */\n      dup4\n        /* \"#utility.yul\":4346:4364   */\n      add\n        /* \"#utility.yul\":4337:4343   */\n      dup7\n        /* \"#utility.yul\":4293:4365   */\n      tag_108\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4375:4447   */\n      tag_138\n        /* \"#utility.yul\":4443:4445   */\n      0x40\n        /* \"#utility.yul\":4432:4441   */\n      dup4\n        /* \"#utility.yul\":4428:4446   */\n      add\n        /* \"#utility.yul\":4419:4425   */\n      dup6\n        /* \"#utility.yul\":4375:4447   */\n      tag_108\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4457:4529   */\n      tag_139\n        /* \"#utility.yul\":4525:4527   */\n      0x60\n        /* \"#utility.yul\":4514:4523   */\n      dup4\n        /* \"#utility.yul\":4510:4528   */\n      add\n        /* \"#utility.yul\":4501:4507   */\n      dup5\n        /* \"#utility.yul\":4457:4529   */\n      tag_108\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4165:4536   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4542:5198   */\n    tag_77:\n      0x00\n        /* \"#utility.yul\":4781:4784   */\n      0xa0\n        /* \"#utility.yul\":4770:4779   */\n      dup3\n        /* \"#utility.yul\":4766:4785   */\n      add\n        /* \"#utility.yul\":4758:4785   */\n      swap1\n      pop\n        /* \"#utility.yul\":4795:4866   */\n      tag_141\n        /* \"#utility.yul\":4863:4864   */\n      0x00\n        /* \"#utility.yul\":4852:4861   */\n      dup4\n        /* \"#utility.yul\":4848:4865   */\n      add\n        /* \"#utility.yul\":4839:4845   */\n      dup9\n        /* \"#utility.yul\":4795:4866   */\n      tag_108\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4876:4948   */\n      tag_142\n        /* \"#utility.yul\":4944:4946   */\n      0x20\n        /* \"#utility.yul\":4933:4942   */\n      dup4\n        /* \"#utility.yul\":4929:4947   */\n      add\n        /* \"#utility.yul\":4920:4926   */\n      dup8\n        /* \"#utility.yul\":4876:4948   */\n      tag_108\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4958:5030   */\n      tag_143\n        /* \"#utility.yul\":5026:5028   */\n      0x40\n        /* \"#utility.yul\":5015:5024   */\n      dup4\n        /* \"#utility.yul\":5011:5029   */\n      add\n        /* \"#utility.yul\":5002:5008   */\n      dup7\n        /* \"#utility.yul\":4958:5030   */\n      tag_108\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5040:5112   */\n      tag_144\n        /* \"#utility.yul\":5108:5110   */\n      0x60\n        /* \"#utility.yul\":5097:5106   */\n      dup4\n        /* \"#utility.yul\":5093:5111   */\n      add\n        /* \"#utility.yul\":5084:5090   */\n      dup6\n        /* \"#utility.yul\":5040:5112   */\n      tag_108\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5122:5191   */\n      tag_145\n        /* \"#utility.yul\":5186:5189   */\n      0x80\n        /* \"#utility.yul\":5175:5184   */\n      dup4\n        /* \"#utility.yul\":5171:5190   */\n      add\n        /* \"#utility.yul\":5162:5168   */\n      dup5\n        /* \"#utility.yul\":5122:5191   */\n      tag_112\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4748:5198   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5204:5300   */\n    tag_103:\n      0x00\n        /* \"#utility.yul\":5270:5294   */\n      tag_147\n        /* \"#utility.yul\":5288:5293   */\n      dup3\n        /* \"#utility.yul\":5270:5294   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5259:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":5249:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5396   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":5383:5388   */\n      dup2\n        /* \"#utility.yul\":5376:5389   */\n      iszero\n        /* \"#utility.yul\":5369:5390   */\n      iszero\n        /* \"#utility.yul\":5358:5390   */\n      swap1\n      pop\n        /* \"#utility.yul\":5348:5396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5402:5528   */\n    tag_148:\n      0x00\n        /* \"#utility.yul\":5479:5521   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5472:5477   */\n      dup3\n        /* \"#utility.yul\":5468:5522   */\n      and\n        /* \"#utility.yul\":5457:5522   */\n      swap1\n      pop\n        /* \"#utility.yul\":5447:5528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5611   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":5600:5605   */\n      dup2\n        /* \"#utility.yul\":5589:5605   */\n      swap1\n      pop\n        /* \"#utility.yul\":5579:5611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5617:5703   */\n    tag_115:\n      0x00\n        /* \"#utility.yul\":5692:5696   */\n      0xff\n        /* \"#utility.yul\":5685:5690   */\n      dup3\n        /* \"#utility.yul\":5681:5697   */\n      and\n        /* \"#utility.yul\":5670:5697   */\n      swap1\n      pop\n        /* \"#utility.yul\":5660:5703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5709:5831   */\n    tag_84:\n        /* \"#utility.yul\":5782:5806   */\n      tag_154\n        /* \"#utility.yul\":5800:5805   */\n      dup2\n        /* \"#utility.yul\":5782:5806   */\n      tag_103\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5775:5780   */\n      dup2\n        /* \"#utility.yul\":5772:5807   */\n      eq\n        /* \"#utility.yul\":5762:5764   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5821:5822   */\n      0x00\n        /* \"#utility.yul\":5818:5819   */\n      dup1\n        /* \"#utility.yul\":5811:5823   */\n      revert\n        /* \"#utility.yul\":5762:5764   */\n    tag_155:\n        /* \"#utility.yul\":5752:5831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5837:5959   */\n    tag_88:\n        /* \"#utility.yul\":5910:5934   */\n      tag_157\n        /* \"#utility.yul\":5928:5933   */\n      dup2\n        /* \"#utility.yul\":5910:5934   */\n      tag_111\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5903:5908   */\n      dup2\n        /* \"#utility.yul\":5900:5935   */\n      eq\n        /* \"#utility.yul\":5890:5892   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5949:5950   */\n      0x00\n        /* \"#utility.yul\":5946:5947   */\n      dup1\n        /* \"#utility.yul\":5939:5951   */\n      revert\n        /* \"#utility.yul\":5890:5892   */\n    tag_158:\n        /* \"#utility.yul\":5880:5959   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206c5a92a4ee225f8e6c253614206f4aa2d9dfbb1c0d67409c069f16fae492bd8f64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506108d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806388e53ec81161008c578063c22127a911610066578063c22127a914610267578063e7702d0514610297578063f86bcb9b146102b5578063fe143615146102e8576100cf565b806388e53ec8146101e85780638eff352114610219578063a20baee614610249576100cf565b80630cd6a4bc146100d45780631f037096146101055780632235410d14610138578063386136901461016a57806352289738146101885780637bc9ec23146101b8575b600080fd5b6100ee60048036038101906100e9919061061f565b61031c565b6040516100fc92919061069f565b60405180910390f35b61011f600480360381019061011a919061061f565b61035a565b60405161012f94939291906106e3565b60405180910390f35b610152600480360381019061014d919061061f565b6103d7565b60405161016193929190610751565b60405180910390f35b610172610401565b60405161017f9190610684565b60405180910390f35b6101a2600480360381019061019d91906105a7565b610425565b6040516101af91906106c8565b60405180910390f35b6101d260048036038101906101cd91906105e3565b61044a565b6040516101df9190610684565b60405180910390f35b61020260048036038101906101fd919061061f565b610498565b604051610210929190610728565b60405180910390f35b610233600480360381019061022e919061061f565b6104bc565b60405161024091906106c8565b60405180910390f35b6102516104da565b60405161025e91906106c8565b60405180910390f35b610281600480360381019061027c919061061f565b6104e6565b60405161028e91906106c8565b60405180910390f35b61029f610504565b6040516102ac91906106c8565b60405180910390f35b6102cf60048036038101906102ca919061061f565b61050a565b6040516102df9493929190610788565b60405180910390f35b61030260048036038101906102fd919061061f565b61053a565b6040516103139594939291906107cd565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905084565b60086020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020818154811061046657600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090508060000154908060010154905082565b60076020528060005260406000206000915090508060000154905081565b670de0b6b3a764000081565b60056020528060005260406000206000915090508060000154905081565b60015481565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b60046020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60008135905061058c81610875565b92915050565b6000813590506105a18161088c565b92915050565b600080604083850312156105ba57600080fd5b60006105c88582860161057d565b92505060206105d98582860161057d565b9150509250929050565b600080604083850312156105f657600080fd5b60006106048582860161057d565b925050602061061585828601610592565b9150509250929050565b60006020828403121561063157600080fd5b600061063f84828501610592565b91505092915050565b61065181610820565b82525050565b61066081610832565b82525050565b61066f8161085e565b82525050565b61067e81610868565b82525050565b60006020820190506106996000830184610648565b92915050565b60006040820190506106b46000830185610657565b6106c16020830184610675565b9392505050565b60006020820190506106dd6000830184610666565b92915050565b60006080820190506106f86000830187610666565b6107056020830186610648565b6107126040830185610648565b61071f6060830184610675565b95945050505050565b600060408201905061073d6000830185610666565b61074a6020830184610666565b9392505050565b60006060820190506107666000830186610666565b6107736020830185610666565b6107806040830184610666565b949350505050565b600060808201905061079d6000830187610666565b6107aa6020830186610666565b6107b76040830185610666565b6107c46060830184610666565b95945050505050565b600060a0820190506107e26000830188610666565b6107ef6020830187610666565b6107fc6040830186610666565b6108096060830185610666565b6108166080830184610675565b9695505050505050565b600061082b8261083e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b61087e81610820565b811461088957600080fd5b50565b6108958161085e565b81146108a057600080fd5b5056fea26469706673582212206c5a92a4ee225f8e6c253614206f4aa2d9dfbb1c0d67409c069f16fae492bd8f64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88E53EC8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC22127A9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC22127A9 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xE7702D05 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF86BCB9B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xFE143615 EQ PUSH2 0x2E8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x88E53EC8 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8EFF3521 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA20BAEE6 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xCD6A4BC EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1F037096 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2235410D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x38613690 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x52289738 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x7BC9EC23 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP3 SWAP2 SWAP1 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP3 SWAP2 SWAP1 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58C DUP2 PUSH2 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A1 DUP2 PUSH2 0x88C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5D9 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x604 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x615 DUP6 DUP3 DUP7 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x63F DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x66F DUP2 PUSH2 0x85E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x67E DUP2 PUSH2 0x868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x6C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6F8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x705 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x712 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x71F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x73D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x74A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x766 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x773 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x780 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x79D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7C4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7E2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7EF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7FC PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x809 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x816 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0x820 JUMP JUMPDEST DUP2 EQ PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x5A92A4EE225F8E6C253614206F 0x4A LOG2 0xD9 0xDF 0xBB SHR 0xD PUSH8 0x409C069F16FAE492 0xBD DUP16 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "2488:10355:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5962:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "7:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:10",
														"type": ""
													}
												],
												"src": "152:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:324:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "438:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "428:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "428:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "428:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:10"
															},
															"nodeType": "YulIf",
															"src": "390:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "452:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "467:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "481:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "471:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "496:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "531:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "542:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "527:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "527:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "551:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "506:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "496:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "579:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "594:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "598:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "624:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "659:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "679:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "634:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "624:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "342:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "353:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "365:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "373:6:10",
														"type": ""
													}
												],
												"src": "297:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "793:324:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "839:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "848:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "851:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "841:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "841:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "814:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "823:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "810:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "835:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "806:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:10"
															},
															"nodeType": "YulIf",
															"src": "803:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "865:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "880:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "894:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "884:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "909:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "944:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "955:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "940:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "940:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "964:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "919:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "919:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "909:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "992:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1007:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1021:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1011:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1037:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1072:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1083:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1068:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1068:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1092:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1047:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1047:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1037:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "755:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "766:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "778:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "786:6:10",
														"type": ""
													}
												],
												"src": "710:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1189:196:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1235:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1244:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1247:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1237:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1237:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1210:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1219:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:32:10"
															},
															"nodeType": "YulIf",
															"src": "1199:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1261:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1276:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1280:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1305:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1340:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1351:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1336:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1336:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1360:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1315:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1305:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1159:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1170:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1182:6:10",
														"type": ""
													}
												],
												"src": "1123:262:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1473:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1496:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1478:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1478:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1444:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1451:3:10",
														"type": ""
													}
												],
												"src": "1391:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1574:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1591:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1611:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1596:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1562:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1569:3:10",
														"type": ""
													}
												],
												"src": "1515:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1712:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1735:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1717:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1717:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1705:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1683:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1690:3:10",
														"type": ""
													}
												],
												"src": "1630:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1832:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1853:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1837:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1825:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1803:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1810:3:10",
														"type": ""
													}
												],
												"src": "1754:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1980:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1992:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2003:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1988:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1980:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2073:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2084:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2069:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2016:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1942:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1954:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1965:4:10",
														"type": ""
													}
												],
												"src": "1872:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2216:196:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2226:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2234:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2300:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2324:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2309:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2262:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2262:65:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2401:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2337:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2337:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint8__to_t_bool_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2180:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2192:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2200:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2211:4:10",
														"type": ""
													}
												],
												"src": "2100:312:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2516:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2526:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2538:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2549:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2534:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2526:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2606:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2630:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2615:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2562:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2562:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2511:4:10",
														"type": ""
													}
												],
												"src": "2418:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:367:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2834:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2846:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2857:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2834:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2915:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2928:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2939:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2924:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2871:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2871:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3020:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2952:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2952:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3102:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3087:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3034:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3034:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3180:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3116:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint8__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2784:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2792:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2800:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2808:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2819:4:10",
														"type": ""
													}
												],
												"src": "2646:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3323:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3333:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3333:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3413:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3426:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3437:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3422:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3369:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3369:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3494:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3507:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3518:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3450:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3450:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3287:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3299:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3307:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3318:4:10",
														"type": ""
													}
												],
												"src": "3197:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3689:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3699:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3711:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3722:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3699:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3779:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3792:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3803:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3735:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3860:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3873:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3884:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3869:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3816:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3816:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3942:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3955:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3966:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3951:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3898:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3898:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3645:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3657:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3665:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3673:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3684:4:10",
														"type": ""
													}
												],
												"src": "3535:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4165:371:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4175:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4187:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4198:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4183:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4175:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4256:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4280:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4212:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4212:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4337:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4361:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4346:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4293:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4293:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4419:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4443:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4428:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4375:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4375:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4501:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4514:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4525:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4457:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4457:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4113:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4125:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4133:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4141:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4149:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4160:4:10",
														"type": ""
													}
												],
												"src": "3983:553:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4748:450:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4758:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4770:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4766:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4758:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4839:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4852:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4863:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4848:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4795:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4795:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4920:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4933:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4944:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4876:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4876:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5002:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4958:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4958:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5084:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5097:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5108:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5093:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5040:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5040:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5162:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5175:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5186:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5171:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5122:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5122:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4688:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4700:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4708:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4716:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4724:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4732:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4743:4:10",
														"type": ""
													}
												],
												"src": "4542:656:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5249:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5259:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5288:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5270:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5259:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5231:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5241:7:10",
														"type": ""
													}
												],
												"src": "5204:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5348:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5358:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5383:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5376:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5376:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5358:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5330:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5340:7:10",
														"type": ""
													}
												],
												"src": "5306:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5447:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5457:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5472:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5479:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5457:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5429:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5439:7:10",
														"type": ""
													}
												],
												"src": "5402:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5579:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5589:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5600:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5589:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5561:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5571:7:10",
														"type": ""
													}
												],
												"src": "5534:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5660:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5670:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5685:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5681:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5681:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5670:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5642:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5652:7:10",
														"type": ""
													}
												],
												"src": "5617:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5752:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5809:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5818:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5821:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5811:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5811:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5811:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5775:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5800:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5782:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5782:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5772:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5772:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:43:10"
															},
															"nodeType": "YulIf",
															"src": "5762:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5745:5:10",
														"type": ""
													}
												],
												"src": "5709:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5880:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5937:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5946:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5949:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5939:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5939:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5939:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5903:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5928:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5910:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5910:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5900:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5893:43:10"
															},
															"nodeType": "YulIf",
															"src": "5890:2:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5873:5:10",
														"type": ""
													}
												],
												"src": "5837:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_uint8__to_t_bool_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint8__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806388e53ec81161008c578063c22127a911610066578063c22127a914610267578063e7702d0514610297578063f86bcb9b146102b5578063fe143615146102e8576100cf565b806388e53ec8146101e85780638eff352114610219578063a20baee614610249576100cf565b80630cd6a4bc146100d45780631f037096146101055780632235410d14610138578063386136901461016a57806352289738146101885780637bc9ec23146101b8575b600080fd5b6100ee60048036038101906100e9919061061f565b61031c565b6040516100fc92919061069f565b60405180910390f35b61011f600480360381019061011a919061061f565b61035a565b60405161012f94939291906106e3565b60405180910390f35b610152600480360381019061014d919061061f565b6103d7565b60405161016193929190610751565b60405180910390f35b610172610401565b60405161017f9190610684565b60405180910390f35b6101a2600480360381019061019d91906105a7565b610425565b6040516101af91906106c8565b60405180910390f35b6101d260048036038101906101cd91906105e3565b61044a565b6040516101df9190610684565b60405180910390f35b61020260048036038101906101fd919061061f565b610498565b604051610210929190610728565b60405180910390f35b610233600480360381019061022e919061061f565b6104bc565b60405161024091906106c8565b60405180910390f35b6102516104da565b60405161025e91906106c8565b60405180910390f35b610281600480360381019061027c919061061f565b6104e6565b60405161028e91906106c8565b60405180910390f35b61029f610504565b6040516102ac91906106c8565b60405180910390f35b6102cf60048036038101906102ca919061061f565b61050a565b6040516102df9493929190610788565b60405180910390f35b61030260048036038101906102fd919061061f565b61053a565b6040516103139594939291906107cd565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905084565b60086020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020818154811061046657600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090508060000154908060010154905082565b60076020528060005260406000206000915090508060000154905081565b670de0b6b3a764000081565b60056020528060005260406000206000915090508060000154905081565b60015481565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b60046020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60008135905061058c81610875565b92915050565b6000813590506105a18161088c565b92915050565b600080604083850312156105ba57600080fd5b60006105c88582860161057d565b92505060206105d98582860161057d565b9150509250929050565b600080604083850312156105f657600080fd5b60006106048582860161057d565b925050602061061585828601610592565b9150509250929050565b60006020828403121561063157600080fd5b600061063f84828501610592565b91505092915050565b61065181610820565b82525050565b61066081610832565b82525050565b61066f8161085e565b82525050565b61067e81610868565b82525050565b60006020820190506106996000830184610648565b92915050565b60006040820190506106b46000830185610657565b6106c16020830184610675565b9392505050565b60006020820190506106dd6000830184610666565b92915050565b60006080820190506106f86000830187610666565b6107056020830186610648565b6107126040830185610648565b61071f6060830184610675565b95945050505050565b600060408201905061073d6000830185610666565b61074a6020830184610666565b9392505050565b60006060820190506107666000830186610666565b6107736020830185610666565b6107806040830184610666565b949350505050565b600060808201905061079d6000830187610666565b6107aa6020830186610666565b6107b76040830185610666565b6107c46060830184610666565b95945050505050565b600060a0820190506107e26000830188610666565b6107ef6020830187610666565b6107fc6040830186610666565b6108096060830185610666565b6108166080830184610675565b9695505050505050565b600061082b8261083e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b61087e81610820565b811461088957600080fd5b50565b6108958161085e565b81146108a057600080fd5b5056fea26469706673582212206c5a92a4ee225f8e6c253614206f4aa2d9dfbb1c0d67409c069f16fae492bd8f64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88E53EC8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC22127A9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC22127A9 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xE7702D05 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF86BCB9B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xFE143615 EQ PUSH2 0x2E8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x88E53EC8 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8EFF3521 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA20BAEE6 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xCD6A4BC EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1F037096 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2235410D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x38613690 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x52289738 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x7BC9EC23 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP3 SWAP2 SWAP1 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP3 SWAP2 SWAP1 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58C DUP2 PUSH2 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A1 DUP2 PUSH2 0x88C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5D9 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x604 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x615 DUP6 DUP3 DUP7 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x63F DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x66F DUP2 PUSH2 0x85E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x67E DUP2 PUSH2 0x868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x6C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6F8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x705 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x712 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x71F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x73D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x74A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x766 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x773 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x780 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x79D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7C4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7E2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7EF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7FC PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x809 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x816 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0x820 JUMP JUMPDEST DUP2 EQ PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x5A92A4EE225F8E6C253614206F 0x4A LOG2 0xD9 0xDF 0xBB SHR 0xD PUSH8 0x409C069F16FAE492 0xBD DUP16 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "2488:10355:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:54:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3645;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3995:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2682:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4108:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4185:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3941:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2628;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2715:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3881:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3765:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3705:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3645:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3995:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2682:27::-;;;;;;;;;;;;:::o;4108:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4185:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4049:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3941:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;2628:::-;2672:4;2628:48;:::o;3823:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;2715:28::-;;;;:::o;3881:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3765:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:10:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:407::-;;;422:2;410:9;401:7;397:23;393:32;390:2;;;438:1;435;428:12;390:2;481:1;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;452:117;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;380:324;;;;;:::o;710:407::-;;;835:2;823:9;814:7;810:23;806:32;803:2;;;851:1;848;841:12;803:2;894:1;919:53;964:7;955:6;944:9;940:22;919:53;:::i;:::-;909:63;;865:117;1021:2;1047:53;1092:7;1083:6;1072:9;1068:22;1047:53;:::i;:::-;1037:63;;992:118;793:324;;;;;:::o;1123:262::-;;1231:2;1219:9;1210:7;1206:23;1202:32;1199:2;;;1247:1;1244;1237:12;1199:2;1290:1;1315:53;1360:7;1351:6;1340:9;1336:22;1315:53;:::i;:::-;1305:63;;1261:117;1189:196;;;;:::o;1391:118::-;1478:24;1496:5;1478:24;:::i;:::-;1473:3;1466:37;1456:53;;:::o;1515:109::-;1596:21;1611:5;1596:21;:::i;:::-;1591:3;1584:34;1574:50;;:::o;1630:118::-;1717:24;1735:5;1717:24;:::i;:::-;1712:3;1705:37;1695:53;;:::o;1754:112::-;1837:22;1853:5;1837:22;:::i;:::-;1832:3;1825:35;1815:51;;:::o;1872:222::-;;2003:2;1992:9;1988:18;1980:26;;2016:71;2084:1;2073:9;2069:17;2060:6;2016:71;:::i;:::-;1970:124;;;;:::o;2100:312::-;;2249:2;2238:9;2234:18;2226:26;;2262:65;2324:1;2313:9;2309:17;2300:6;2262:65;:::i;:::-;2337:68;2401:2;2390:9;2386:18;2377:6;2337:68;:::i;:::-;2216:196;;;;;:::o;2418:222::-;;2549:2;2538:9;2534:18;2526:26;;2562:71;2630:1;2619:9;2615:17;2606:6;2562:71;:::i;:::-;2516:124;;;;:::o;2646:545::-;;2857:3;2846:9;2842:19;2834:27;;2871:71;2939:1;2928:9;2924:17;2915:6;2871:71;:::i;:::-;2952:72;3020:2;3009:9;3005:18;2996:6;2952:72;:::i;:::-;3034;3102:2;3091:9;3087:18;3078:6;3034:72;:::i;:::-;3116:68;3180:2;3169:9;3165:18;3156:6;3116:68;:::i;:::-;2824:367;;;;;;;:::o;3197:332::-;;3356:2;3345:9;3341:18;3333:26;;3369:71;3437:1;3426:9;3422:17;3413:6;3369:71;:::i;:::-;3450:72;3518:2;3507:9;3503:18;3494:6;3450:72;:::i;:::-;3323:206;;;;;:::o;3535:442::-;;3722:2;3711:9;3707:18;3699:26;;3735:71;3803:1;3792:9;3788:17;3779:6;3735:71;:::i;:::-;3816:72;3884:2;3873:9;3869:18;3860:6;3816:72;:::i;:::-;3898;3966:2;3955:9;3951:18;3942:6;3898:72;:::i;:::-;3689:288;;;;;;:::o;3983:553::-;;4198:3;4187:9;4183:19;4175:27;;4212:71;4280:1;4269:9;4265:17;4256:6;4212:71;:::i;:::-;4293:72;4361:2;4350:9;4346:18;4337:6;4293:72;:::i;:::-;4375;4443:2;4432:9;4428:18;4419:6;4375:72;:::i;:::-;4457;4525:2;4514:9;4510:18;4501:6;4457:72;:::i;:::-;4165:371;;;;;;;:::o;4542:656::-;;4781:3;4770:9;4766:19;4758:27;;4795:71;4863:1;4852:9;4848:17;4839:6;4795:71;:::i;:::-;4876:72;4944:2;4933:9;4929:18;4920:6;4876:72;:::i;:::-;4958;5026:2;5015:9;5011:18;5002:6;4958:72;:::i;:::-;5040;5108:2;5097:9;5093:18;5084:6;5040:72;:::i;:::-;5122:69;5186:3;5175:9;5171:19;5162:6;5122:69;:::i;:::-;4748:450;;;;;;;;:::o;5204:96::-;;5270:24;5288:5;5270:24;:::i;:::-;5259:35;;5249:51;;;:::o;5306:90::-;;5383:5;5376:13;5369:21;5358:32;;5348:48;;;:::o;5402:126::-;;5479:42;5472:5;5468:54;5457:65;;5447:81;;;:::o;5534:77::-;;5600:5;5589:16;;5579:32;;;:::o;5617:86::-;;5692:4;5685:5;5681:16;5670:27;;5660:43;;;:::o;5709:122::-;5782:24;5800:5;5782:24;:::i;:::-;5775:5;5772:35;5762:2;;5821:1;5818;5811:12;5762:2;5752:79;:::o;5837:122::-;5910:24;5928:5;5910:24;:::i;:::-;5903:5;5900:35;5890:2;;5949:1;5946;5939:12;5890:2;5880:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "453000",
								"executionCost": "486",
								"totalCost": "453486"
							},
							"external": {
								"DECIMAL_PRECISION()": "396",
								"agentAddress()": "1278",
								"exitParams(uint256)": "infinite",
								"makerMarginTokens(address,uint256)": "infinite",
								"makerTokenMargin(address,address)": "infinite",
								"margin2(uint256)": "infinite",
								"marginParams1(uint256)": "infinite",
								"openInterest(uint256)": "infinite",
								"positionCore1(uint256)": "infinite",
								"positionCore2(uint256)": "2526",
								"positionCount()": "1173",
								"priceParams1(uint256)": "infinite",
								"priceParams2(uint256)": "infinite"
							},
							"internal": {
								"_checkLiquidityLimitLong(address,uint256,uint8)": "infinite",
								"_checkLiquidityLimitShort(address,uint256,uint8)": "infinite",
								"_computeLoanAndLiquidationLong(uint256,uint256,address,address)": "infinite",
								"_computeLoanAndLiquidationShort(uint256,uint256,address,address)": "infinite",
								"_computePayoutLong(uint256,address,address)": "infinite",
								"_computePayoutShort(uint256,address,address)": "infinite",
								"_deductMarginAndRemoveToken(address,address,uint256,uint256)": "infinite",
								"_executePayoutUpdate(uint256,address,uint256,uint8,address)": "infinite",
								"_transferLiquidityFee(address,address,uint256,uint8)": "infinite",
								"_transferMarginToListing(address,address,address,uint256,uint256,uint256,uint8)": "infinite",
								"computeFee(uint256,uint8)": "infinite",
								"prepCloseLong(uint256,address)": "infinite",
								"prepCloseShort(uint256,address)": "infinite",
								"prepEnterLong(uint256,uint256,uint256,uint256,uint256,uint8,address,address)": "infinite",
								"prepEnterShort(uint256,uint256,uint256,uint256,uint256,uint8,address,address)": "infinite",
								"setExitParams(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2488,
									"end": 12843,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 12843,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c5a92a4ee225f8e6c253614206f4aa2d9dfbb1c0d67409c069f16fae492bd8f64736f6c63430008010033",
									".code": [
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "88E53EC8"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "C22127A9"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "C22127A9"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "E7702D05"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "F86BCB9B"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "FE143615"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "88E53EC8"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "8EFF3521"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "A20BAEE6"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "CD6A4BC"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "1F037096"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "2235410D"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "38613690"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "52289738"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "7BC9EC23"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 12843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 401,
											"end": 408,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 397,
											"end": 420,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 393,
											"end": 425,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 390,
											"end": 392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 438,
											"end": 439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 428,
											"end": 440,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 390,
											"end": 392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 551,
											"end": 558,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 542,
											"end": 548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 531,
											"end": 540,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 527,
											"end": 549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 506,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 496,
											"end": 559,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 496,
											"end": 559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 452,
											"end": 569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 679,
											"end": 686,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 655,
											"end": 677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 634,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 624,
											"end": 687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 624,
											"end": 687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 835,
											"end": 837,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 814,
											"end": 821,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 810,
											"end": 833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 806,
											"end": 838,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 851,
											"end": 852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 853,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 894,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 964,
											"end": 971,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 944,
											"end": 953,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 940,
											"end": 962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 919,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 909,
											"end": 972,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 909,
											"end": 972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1092,
											"end": 1099,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1234,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1611,
											"end": 1616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1618,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1748,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1630,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1735,
											"end": 1740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1754,
											"end": 1866,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1754,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1853,
											"end": 1858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2005,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2401,
											"end": 2403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2615,
											"end": 2632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2860,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3180,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3358,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3942,
											"end": 3948,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4187,
											"end": 4196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4343,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4443,
											"end": 4445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4425,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4525,
											"end": 4527,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4507,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4784,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4863,
											"end": 4864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4861,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4944,
											"end": 4946,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4942,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 4947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4926,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5097,
											"end": 5106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5186,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5168,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5288,
											"end": 5293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5390,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5521,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5472,
											"end": 5477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5522,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5696,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5685,
											"end": 5690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5697,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5709,
											"end": 5831,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5709,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5800,
											"end": 5805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5775,
											"end": 5780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5807,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5823,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5837,
											"end": 5959,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 5837,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5935,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5946,
											"end": 5947,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5939,
											"end": 5951,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5959,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DECIMAL_PRECISION()": "a20baee6",
							"agentAddress()": "38613690",
							"exitParams(uint256)": "2235410d",
							"makerMarginTokens(address,uint256)": "7bc9ec23",
							"makerTokenMargin(address,address)": "52289738",
							"margin2(uint256)": "8eff3521",
							"marginParams1(uint256)": "f86bcb9b",
							"openInterest(uint256)": "88e53ec8",
							"positionCore1(uint256)": "1f037096",
							"positionCore2(uint256)": "0cd6a4bc",
							"positionCount()": "e7702d05",
							"priceParams1(uint256)": "fe143615",
							"priceParams2(uint256)": "c22127a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DECIMAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exitParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stopLossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"makerMarginTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"makerTokenMargin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"margin2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialLoan\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marginParams1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxedMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"excessMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionCore1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"listingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"positionType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionCore2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status1\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"status2\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceParams1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAtEntry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceParams2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/driverUtils/CSDPositionPartial.sol\":\"CSDPositionPartial\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/driverUtils/CSDPositionPartial.sol\":{\"keccak256\":\"0x9ca658943988d87076b02a14c2aa2542e1a76c9ba45c09a6d7b5025356010268\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://943f85ca561495d290f076919a2c2c470a40da7bda62e4774fb8c69e53241674\",\"dweb:/ipfs/QmcARHFBV2eEivoCksez8NwhBwNYHukUgH1MWYUHcgWyKK\"]},\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":{\"keccak256\":\"0x0b85fa87b21ef193f955823092b2be587acb2bfe644b859c10ed3f3a30e590fc\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://17fc79e27ef9eeb6a47b0746ec7807ba331c0abfe7720a0d086e2d364827ebb6\",\"dweb:/ipfs/QmZ3aH4rSZ36UjtGWpLE8TQ3riX7gKBPc8tdVfJ25YA8BG\"]},\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1641,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "agentAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1643,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "positionCount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1700,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "positionCore1",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(PositionCore1)1652_storage)"
							},
							{
								"astId": 1705,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "positionCore2",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(PositionCore2)1657_storage)"
							},
							{
								"astId": 1710,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "priceParams1",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(PriceParams1)1668_storage)"
							},
							{
								"astId": 1715,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "priceParams2",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(PriceParams2)1671_storage)"
							},
							{
								"astId": 1720,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "marginParams1",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(MarginParams1)1680_storage)"
							},
							{
								"astId": 1725,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "margin2",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(MarginParams2)1683_storage)"
							},
							{
								"astId": 1730,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "exitParams",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(ExitParams)1690_storage)"
							},
							{
								"astId": 1735,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "openInterest",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(OpenInterest)1695_storage)"
							},
							{
								"astId": 1741,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "makerTokenMargin",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1746,
								"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
								"label": "makerMarginTokens",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(ExitParams)1690_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.ExitParams)",
								"numberOfBytes": "32",
								"value": "t_struct(ExitParams)1690_storage"
							},
							"t_mapping(t_uint256,t_struct(MarginParams1)1680_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1)",
								"numberOfBytes": "32",
								"value": "t_struct(MarginParams1)1680_storage"
							},
							"t_mapping(t_uint256,t_struct(MarginParams2)1683_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.MarginParams2)",
								"numberOfBytes": "32",
								"value": "t_struct(MarginParams2)1683_storage"
							},
							"t_mapping(t_uint256,t_struct(OpenInterest)1695_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.OpenInterest)",
								"numberOfBytes": "32",
								"value": "t_struct(OpenInterest)1695_storage"
							},
							"t_mapping(t_uint256,t_struct(PositionCore1)1652_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1)",
								"numberOfBytes": "32",
								"value": "t_struct(PositionCore1)1652_storage"
							},
							"t_mapping(t_uint256,t_struct(PositionCore2)1657_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PositionCore2)",
								"numberOfBytes": "32",
								"value": "t_struct(PositionCore2)1657_storage"
							},
							"t_mapping(t_uint256,t_struct(PriceParams1)1668_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceParams1)1668_storage"
							},
							"t_mapping(t_uint256,t_struct(PriceParams2)1671_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PriceParams2)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceParams2)1671_storage"
							},
							"t_struct(ExitParams)1690_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.ExitParams",
								"members": [
									{
										"astId": 1685,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "stopLossPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1687,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "takeProfitPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1689,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "exitPrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(MarginParams1)1680_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.MarginParams1",
								"members": [
									{
										"astId": 1673,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "initialMargin",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1675,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "taxedMargin",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1677,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "excessMargin",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1679,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "fee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(MarginParams2)1683_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.MarginParams2",
								"members": [
									{
										"astId": 1682,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "initialLoan",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(OpenInterest)1695_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.OpenInterest",
								"members": [
									{
										"astId": 1692,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "leverageAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1694,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PositionCore1)1652_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PositionCore1",
								"members": [
									{
										"astId": 1645,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "positionId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1647,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "listingAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1649,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "makerAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1651,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "positionType",
										"offset": 20,
										"slot": "2",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(PositionCore2)1657_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PositionCore2",
								"members": [
									{
										"astId": 1654,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "status1",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1656,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "status2",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(PriceParams1)1668_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PriceParams1",
								"members": [
									{
										"astId": 1659,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "minEntryPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1661,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "maxEntryPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1663,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "minPrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1665,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "priceAtEntry",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1667,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "leverage",
										"offset": 0,
										"slot": "4",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PriceParams2)1671_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PriceParams2",
								"members": [
									{
										"astId": 1670,
										"contract": "ShockSpace/driverUtils/CSDPositionPartial.sol:CSDPositionPartial",
										"label": "liquidationPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/driverUtils/CSDUtilityPartial.sol": {
				"CSDUtilityPartial": {
					"abi": [
						{
							"inputs": [],
							"name": "DECIMAL_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "agentAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "exitParams",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stopLossPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "takeProfitPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "exitPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "makerMarginTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "makerTokenMargin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "margin2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "initialLoan",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "marginParams1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "initialMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "taxedMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "excessMargin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "openInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "leverageAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positionCore1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "positionId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "listingAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "makerAddress",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "positionType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positionCore2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "status1",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "status2",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positionCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "priceParams1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "minEntryPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxEntryPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "priceAtEntry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "leverage",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "priceParams2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidationPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2562:5420  contract CSDUtilityPartial {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2562:5420  contract CSDUtilityPartial {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88e53ec8\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc22127a9\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc22127a9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe7702d05\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf86bcb9b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfe143615\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x88e53ec8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8eff3521\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa20baee6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0cd6a4bc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f037096\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2235410d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38613690\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x52289738\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7bc9ec23\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3705:3759  mapping(uint256 => PositionCore2) public positionCore2 */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3645:3699  mapping(uint256 => PositionCore1) public positionCore1 */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3995:4043  mapping(uint256 => ExitParams) public exitParams */\n    tag_5:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2682:2709  address public agentAddress */\n    tag_6:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4108:4179  mapping(address => mapping(address => uint256)) public makerTokenMargin */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4185:4239  mapping(address => address[]) public makerMarginTokens */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4049:4101  mapping(uint256 => OpenInterest) public openInterest */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3941:3989  mapping(uint256 => MarginParams2) public margin2 */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3823:3875  mapping(uint256 => PriceParams2) public priceParams2 */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2715:2743  uint256 public positionCount */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3881:3935  mapping(uint256 => MarginParams1) public marginParams1 */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3765:3817  mapping(uint256 => PriceParams1) public priceParams1 */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3705:3759  mapping(uint256 => PositionCore2) public positionCore2 */\n    tag_21:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3645:3699  mapping(uint256 => PositionCore1) public positionCore1 */\n    tag_26:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3995:4043  mapping(uint256 => ExitParams) public exitParams */\n    tag_31:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2682:2709  address public agentAddress */\n    tag_35:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4108:4179  mapping(address => mapping(address => uint256)) public makerTokenMargin */\n    tag_41:\n      mstore(0x20, 0x0a)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4185:4239  mapping(address => address[]) public makerMarginTokens */\n    tag_47:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":4049:4101  mapping(uint256 => OpenInterest) public openInterest */\n    tag_51:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3941:3989  mapping(uint256 => MarginParams2) public margin2 */\n    tag_56:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n    tag_59:\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2672:2676  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2628:2676  uint256 public constant DECIMAL_PRECISION = 1e18 */\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3823:3875  mapping(uint256 => PriceParams2) public priceParams2 */\n    tag_63:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":2715:2743  uint256 public positionCount */\n    tag_66:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3881:3935  mapping(uint256 => MarginParams1) public marginParams1 */\n    tag_70:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"ShockSpace/driverUtils/CSDUtilityPartial.sol\":3765:3817  mapping(uint256 => PriceParams1) public priceParams1 */\n    tag_75:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_81:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_83\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_87\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:704   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":422:424   */\n      0x40\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":401:408   */\n      dup6\n        /* \"#utility.yul\":397:420   */\n      sub\n        /* \"#utility.yul\":393:425   */\n      slt\n        /* \"#utility.yul\":390:392   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":438:439   */\n      0x00\n        /* \"#utility.yul\":435:436   */\n      dup1\n        /* \"#utility.yul\":428:440   */\n      revert\n        /* \"#utility.yul\":390:392   */\n    tag_90:\n        /* \"#utility.yul\":481:482   */\n      0x00\n        /* \"#utility.yul\":506:559   */\n      tag_91\n        /* \"#utility.yul\":551:558   */\n      dup6\n        /* \"#utility.yul\":542:548   */\n      dup3\n        /* \"#utility.yul\":531:540   */\n      dup7\n        /* \"#utility.yul\":527:549   */\n      add\n        /* \"#utility.yul\":506:559   */\n      tag_81\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":496:559   */\n      swap3\n      pop\n        /* \"#utility.yul\":452:569   */\n      pop\n        /* \"#utility.yul\":608:610   */\n      0x20\n        /* \"#utility.yul\":634:687   */\n      tag_92\n        /* \"#utility.yul\":679:686   */\n      dup6\n        /* \"#utility.yul\":670:676   */\n      dup3\n        /* \"#utility.yul\":659:668   */\n      dup7\n        /* \"#utility.yul\":655:677   */\n      add\n        /* \"#utility.yul\":634:687   */\n      tag_81\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":624:687   */\n      swap2\n      pop\n        /* \"#utility.yul\":579:697   */\n      pop\n        /* \"#utility.yul\":380:704   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":710:1117   */\n    tag_46:\n      0x00\n      dup1\n        /* \"#utility.yul\":835:837   */\n      0x40\n        /* \"#utility.yul\":823:832   */\n      dup4\n        /* \"#utility.yul\":814:821   */\n      dup6\n        /* \"#utility.yul\":810:833   */\n      sub\n        /* \"#utility.yul\":806:838   */\n      slt\n        /* \"#utility.yul\":803:805   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":851:852   */\n      0x00\n        /* \"#utility.yul\":848:849   */\n      dup1\n        /* \"#utility.yul\":841:853   */\n      revert\n        /* \"#utility.yul\":803:805   */\n    tag_94:\n        /* \"#utility.yul\":894:895   */\n      0x00\n        /* \"#utility.yul\":919:972   */\n      tag_95\n        /* \"#utility.yul\":964:971   */\n      dup6\n        /* \"#utility.yul\":955:961   */\n      dup3\n        /* \"#utility.yul\":944:953   */\n      dup7\n        /* \"#utility.yul\":940:962   */\n      add\n        /* \"#utility.yul\":919:972   */\n      tag_81\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":909:972   */\n      swap3\n      pop\n        /* \"#utility.yul\":865:982   */\n      pop\n        /* \"#utility.yul\":1021:1023   */\n      0x20\n        /* \"#utility.yul\":1047:1100   */\n      tag_96\n        /* \"#utility.yul\":1092:1099   */\n      dup6\n        /* \"#utility.yul\":1083:1089   */\n      dup3\n        /* \"#utility.yul\":1072:1081   */\n      dup7\n        /* \"#utility.yul\":1068:1090   */\n      add\n        /* \"#utility.yul\":1047:1100   */\n      tag_85\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1037:1100   */\n      swap2\n      pop\n        /* \"#utility.yul\":992:1110   */\n      pop\n        /* \"#utility.yul\":793:1117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1385   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":1231:1233   */\n      0x20\n        /* \"#utility.yul\":1219:1228   */\n      dup3\n        /* \"#utility.yul\":1210:1217   */\n      dup5\n        /* \"#utility.yul\":1206:1229   */\n      sub\n        /* \"#utility.yul\":1202:1234   */\n      slt\n        /* \"#utility.yul\":1199:1201   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1247:1248   */\n      0x00\n        /* \"#utility.yul\":1244:1245   */\n      dup1\n        /* \"#utility.yul\":1237:1249   */\n      revert\n        /* \"#utility.yul\":1199:1201   */\n    tag_98:\n        /* \"#utility.yul\":1290:1291   */\n      0x00\n        /* \"#utility.yul\":1315:1368   */\n      tag_99\n        /* \"#utility.yul\":1360:1367   */\n      dup5\n        /* \"#utility.yul\":1351:1357   */\n      dup3\n        /* \"#utility.yul\":1340:1349   */\n      dup6\n        /* \"#utility.yul\":1336:1358   */\n      add\n        /* \"#utility.yul\":1315:1368   */\n      tag_85\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1305:1368   */\n      swap2\n      pop\n        /* \"#utility.yul\":1261:1378   */\n      pop\n        /* \"#utility.yul\":1189:1385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1391:1509   */\n    tag_100:\n        /* \"#utility.yul\":1478:1502   */\n      tag_102\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1478:1502   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1473:1476   */\n      dup3\n        /* \"#utility.yul\":1466:1503   */\n      mstore\n        /* \"#utility.yul\":1456:1509   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1515:1624   */\n    tag_104:\n        /* \"#utility.yul\":1596:1617   */\n      tag_106\n        /* \"#utility.yul\":1611:1616   */\n      dup2\n        /* \"#utility.yul\":1596:1617   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1591:1594   */\n      dup3\n        /* \"#utility.yul\":1584:1618   */\n      mstore\n        /* \"#utility.yul\":1574:1624   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1630:1748   */\n    tag_108:\n        /* \"#utility.yul\":1717:1741   */\n      tag_110\n        /* \"#utility.yul\":1735:1740   */\n      dup2\n        /* \"#utility.yul\":1717:1741   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1712:1715   */\n      dup3\n        /* \"#utility.yul\":1705:1742   */\n      mstore\n        /* \"#utility.yul\":1695:1748   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:1866   */\n    tag_112:\n        /* \"#utility.yul\":1837:1859   */\n      tag_114\n        /* \"#utility.yul\":1853:1858   */\n      dup2\n        /* \"#utility.yul\":1837:1859   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1832:1835   */\n      dup3\n        /* \"#utility.yul\":1825:1860   */\n      mstore\n        /* \"#utility.yul\":1815:1866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1872:2094   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":2003:2005   */\n      0x20\n        /* \"#utility.yul\":1992:2001   */\n      dup3\n        /* \"#utility.yul\":1988:2006   */\n      add\n        /* \"#utility.yul\":1980:2006   */\n      swap1\n      pop\n        /* \"#utility.yul\":2016:2087   */\n      tag_117\n        /* \"#utility.yul\":2084:2085   */\n      0x00\n        /* \"#utility.yul\":2073:2082   */\n      dup4\n        /* \"#utility.yul\":2069:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2016:2087   */\n      tag_100\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1970:2094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2100:2412   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2226:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2262:2327   */\n      tag_119\n        /* \"#utility.yul\":2324:2325   */\n      0x00\n        /* \"#utility.yul\":2313:2322   */\n      dup4\n        /* \"#utility.yul\":2309:2326   */\n      add\n        /* \"#utility.yul\":2300:2306   */\n      dup6\n        /* \"#utility.yul\":2262:2327   */\n      tag_104\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2337:2405   */\n      tag_120\n        /* \"#utility.yul\":2401:2403   */\n      0x20\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2386:2404   */\n      add\n        /* \"#utility.yul\":2377:2383   */\n      dup5\n        /* \"#utility.yul\":2337:2405   */\n      tag_112\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2216:2412   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2418:2640   */\n    tag_43:\n      0x00\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup3\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2526:2552   */\n      swap1\n      pop\n        /* \"#utility.yul\":2562:2633   */\n      tag_122\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2619:2628   */\n      dup4\n        /* \"#utility.yul\":2615:2632   */\n      add\n        /* \"#utility.yul\":2606:2612   */\n      dup5\n        /* \"#utility.yul\":2562:2633   */\n      tag_108\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2516:2640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:3191   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":2857:2860   */\n      0x80\n        /* \"#utility.yul\":2846:2855   */\n      dup3\n        /* \"#utility.yul\":2842:2861   */\n      add\n        /* \"#utility.yul\":2834:2861   */\n      swap1\n      pop\n        /* \"#utility.yul\":2871:2942   */\n      tag_124\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2928:2937   */\n      dup4\n        /* \"#utility.yul\":2924:2941   */\n      add\n        /* \"#utility.yul\":2915:2921   */\n      dup8\n        /* \"#utility.yul\":2871:2942   */\n      tag_108\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2952:3024   */\n      tag_125\n        /* \"#utility.yul\":3020:3022   */\n      0x20\n        /* \"#utility.yul\":3009:3018   */\n      dup4\n        /* \"#utility.yul\":3005:3023   */\n      add\n        /* \"#utility.yul\":2996:3002   */\n      dup7\n        /* \"#utility.yul\":2952:3024   */\n      tag_100\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3034:3106   */\n      tag_126\n        /* \"#utility.yul\":3102:3104   */\n      0x40\n        /* \"#utility.yul\":3091:3100   */\n      dup4\n        /* \"#utility.yul\":3087:3105   */\n      add\n        /* \"#utility.yul\":3078:3084   */\n      dup6\n        /* \"#utility.yul\":3034:3106   */\n      tag_100\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3116:3184   */\n      tag_127\n        /* \"#utility.yul\":3180:3182   */\n      0x60\n        /* \"#utility.yul\":3169:3178   */\n      dup4\n        /* \"#utility.yul\":3165:3183   */\n      add\n        /* \"#utility.yul\":3156:3162   */\n      dup5\n        /* \"#utility.yul\":3116:3184   */\n      tag_112\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2824:3191   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3197:3529   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":3356:3358   */\n      0x40\n        /* \"#utility.yul\":3345:3354   */\n      dup3\n        /* \"#utility.yul\":3341:3359   */\n      add\n        /* \"#utility.yul\":3333:3359   */\n      swap1\n      pop\n        /* \"#utility.yul\":3369:3440   */\n      tag_129\n        /* \"#utility.yul\":3437:3438   */\n      0x00\n        /* \"#utility.yul\":3426:3435   */\n      dup4\n        /* \"#utility.yul\":3422:3439   */\n      add\n        /* \"#utility.yul\":3413:3419   */\n      dup6\n        /* \"#utility.yul\":3369:3440   */\n      tag_108\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3450:3522   */\n      tag_130\n        /* \"#utility.yul\":3518:3520   */\n      0x20\n        /* \"#utility.yul\":3507:3516   */\n      dup4\n        /* \"#utility.yul\":3503:3521   */\n      add\n        /* \"#utility.yul\":3494:3500   */\n      dup5\n        /* \"#utility.yul\":3450:3522   */\n      tag_108\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3323:3529   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3535:3977   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":3722:3724   */\n      0x60\n        /* \"#utility.yul\":3711:3720   */\n      dup3\n        /* \"#utility.yul\":3707:3725   */\n      add\n        /* \"#utility.yul\":3699:3725   */\n      swap1\n      pop\n        /* \"#utility.yul\":3735:3806   */\n      tag_132\n        /* \"#utility.yul\":3803:3804   */\n      0x00\n        /* \"#utility.yul\":3792:3801   */\n      dup4\n        /* \"#utility.yul\":3788:3805   */\n      add\n        /* \"#utility.yul\":3779:3785   */\n      dup7\n        /* \"#utility.yul\":3735:3806   */\n      tag_108\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3816:3888   */\n      tag_133\n        /* \"#utility.yul\":3884:3886   */\n      0x20\n        /* \"#utility.yul\":3873:3882   */\n      dup4\n        /* \"#utility.yul\":3869:3887   */\n      add\n        /* \"#utility.yul\":3860:3866   */\n      dup6\n        /* \"#utility.yul\":3816:3888   */\n      tag_108\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3898:3970   */\n      tag_134\n        /* \"#utility.yul\":3966:3968   */\n      0x40\n        /* \"#utility.yul\":3955:3964   */\n      dup4\n        /* \"#utility.yul\":3951:3969   */\n      add\n        /* \"#utility.yul\":3942:3948   */\n      dup5\n        /* \"#utility.yul\":3898:3970   */\n      tag_108\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3689:3977   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4536   */\n    tag_72:\n      0x00\n        /* \"#utility.yul\":4198:4201   */\n      0x80\n        /* \"#utility.yul\":4187:4196   */\n      dup3\n        /* \"#utility.yul\":4183:4202   */\n      add\n        /* \"#utility.yul\":4175:4202   */\n      swap1\n      pop\n        /* \"#utility.yul\":4212:4283   */\n      tag_136\n        /* \"#utility.yul\":4280:4281   */\n      0x00\n        /* \"#utility.yul\":4269:4278   */\n      dup4\n        /* \"#utility.yul\":4265:4282   */\n      add\n        /* \"#utility.yul\":4256:4262   */\n      dup8\n        /* \"#utility.yul\":4212:4283   */\n      tag_108\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4293:4365   */\n      tag_137\n        /* \"#utility.yul\":4361:4363   */\n      0x20\n        /* \"#utility.yul\":4350:4359   */\n      dup4\n        /* \"#utility.yul\":4346:4364   */\n      add\n        /* \"#utility.yul\":4337:4343   */\n      dup7\n        /* \"#utility.yul\":4293:4365   */\n      tag_108\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4375:4447   */\n      tag_138\n        /* \"#utility.yul\":4443:4445   */\n      0x40\n        /* \"#utility.yul\":4432:4441   */\n      dup4\n        /* \"#utility.yul\":4428:4446   */\n      add\n        /* \"#utility.yul\":4419:4425   */\n      dup6\n        /* \"#utility.yul\":4375:4447   */\n      tag_108\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4457:4529   */\n      tag_139\n        /* \"#utility.yul\":4525:4527   */\n      0x60\n        /* \"#utility.yul\":4514:4523   */\n      dup4\n        /* \"#utility.yul\":4510:4528   */\n      add\n        /* \"#utility.yul\":4501:4507   */\n      dup5\n        /* \"#utility.yul\":4457:4529   */\n      tag_108\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4165:4536   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4542:5198   */\n    tag_77:\n      0x00\n        /* \"#utility.yul\":4781:4784   */\n      0xa0\n        /* \"#utility.yul\":4770:4779   */\n      dup3\n        /* \"#utility.yul\":4766:4785   */\n      add\n        /* \"#utility.yul\":4758:4785   */\n      swap1\n      pop\n        /* \"#utility.yul\":4795:4866   */\n      tag_141\n        /* \"#utility.yul\":4863:4864   */\n      0x00\n        /* \"#utility.yul\":4852:4861   */\n      dup4\n        /* \"#utility.yul\":4848:4865   */\n      add\n        /* \"#utility.yul\":4839:4845   */\n      dup9\n        /* \"#utility.yul\":4795:4866   */\n      tag_108\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4876:4948   */\n      tag_142\n        /* \"#utility.yul\":4944:4946   */\n      0x20\n        /* \"#utility.yul\":4933:4942   */\n      dup4\n        /* \"#utility.yul\":4929:4947   */\n      add\n        /* \"#utility.yul\":4920:4926   */\n      dup8\n        /* \"#utility.yul\":4876:4948   */\n      tag_108\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4958:5030   */\n      tag_143\n        /* \"#utility.yul\":5026:5028   */\n      0x40\n        /* \"#utility.yul\":5015:5024   */\n      dup4\n        /* \"#utility.yul\":5011:5029   */\n      add\n        /* \"#utility.yul\":5002:5008   */\n      dup7\n        /* \"#utility.yul\":4958:5030   */\n      tag_108\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5040:5112   */\n      tag_144\n        /* \"#utility.yul\":5108:5110   */\n      0x60\n        /* \"#utility.yul\":5097:5106   */\n      dup4\n        /* \"#utility.yul\":5093:5111   */\n      add\n        /* \"#utility.yul\":5084:5090   */\n      dup6\n        /* \"#utility.yul\":5040:5112   */\n      tag_108\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5122:5191   */\n      tag_145\n        /* \"#utility.yul\":5186:5189   */\n      0x80\n        /* \"#utility.yul\":5175:5184   */\n      dup4\n        /* \"#utility.yul\":5171:5190   */\n      add\n        /* \"#utility.yul\":5162:5168   */\n      dup5\n        /* \"#utility.yul\":5122:5191   */\n      tag_112\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4748:5198   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5204:5300   */\n    tag_103:\n      0x00\n        /* \"#utility.yul\":5270:5294   */\n      tag_147\n        /* \"#utility.yul\":5288:5293   */\n      dup3\n        /* \"#utility.yul\":5270:5294   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5259:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":5249:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5396   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":5383:5388   */\n      dup2\n        /* \"#utility.yul\":5376:5389   */\n      iszero\n        /* \"#utility.yul\":5369:5390   */\n      iszero\n        /* \"#utility.yul\":5358:5390   */\n      swap1\n      pop\n        /* \"#utility.yul\":5348:5396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5402:5528   */\n    tag_148:\n      0x00\n        /* \"#utility.yul\":5479:5521   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5472:5477   */\n      dup3\n        /* \"#utility.yul\":5468:5522   */\n      and\n        /* \"#utility.yul\":5457:5522   */\n      swap1\n      pop\n        /* \"#utility.yul\":5447:5528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5611   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":5600:5605   */\n      dup2\n        /* \"#utility.yul\":5589:5605   */\n      swap1\n      pop\n        /* \"#utility.yul\":5579:5611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5617:5703   */\n    tag_115:\n      0x00\n        /* \"#utility.yul\":5692:5696   */\n      0xff\n        /* \"#utility.yul\":5685:5690   */\n      dup3\n        /* \"#utility.yul\":5681:5697   */\n      and\n        /* \"#utility.yul\":5670:5697   */\n      swap1\n      pop\n        /* \"#utility.yul\":5660:5703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5709:5831   */\n    tag_84:\n        /* \"#utility.yul\":5782:5806   */\n      tag_154\n        /* \"#utility.yul\":5800:5805   */\n      dup2\n        /* \"#utility.yul\":5782:5806   */\n      tag_103\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5775:5780   */\n      dup2\n        /* \"#utility.yul\":5772:5807   */\n      eq\n        /* \"#utility.yul\":5762:5764   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5821:5822   */\n      0x00\n        /* \"#utility.yul\":5818:5819   */\n      dup1\n        /* \"#utility.yul\":5811:5823   */\n      revert\n        /* \"#utility.yul\":5762:5764   */\n    tag_155:\n        /* \"#utility.yul\":5752:5831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5837:5959   */\n    tag_88:\n        /* \"#utility.yul\":5910:5934   */\n      tag_157\n        /* \"#utility.yul\":5928:5933   */\n      dup2\n        /* \"#utility.yul\":5910:5934   */\n      tag_111\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5903:5908   */\n      dup2\n        /* \"#utility.yul\":5900:5935   */\n      eq\n        /* \"#utility.yul\":5890:5892   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5949:5950   */\n      0x00\n        /* \"#utility.yul\":5946:5947   */\n      dup1\n        /* \"#utility.yul\":5939:5951   */\n      revert\n        /* \"#utility.yul\":5890:5892   */\n    tag_158:\n        /* \"#utility.yul\":5880:5959   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085d2cfc7599d04a4c6765120000da1c1eee1fa5c2eac60df8aa17c769770d76b64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506108d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806388e53ec81161008c578063c22127a911610066578063c22127a914610267578063e7702d0514610297578063f86bcb9b146102b5578063fe143615146102e8576100cf565b806388e53ec8146101e85780638eff352114610219578063a20baee614610249576100cf565b80630cd6a4bc146100d45780631f037096146101055780632235410d14610138578063386136901461016a57806352289738146101885780637bc9ec23146101b8575b600080fd5b6100ee60048036038101906100e9919061061f565b61031c565b6040516100fc92919061069f565b60405180910390f35b61011f600480360381019061011a919061061f565b61035a565b60405161012f94939291906106e3565b60405180910390f35b610152600480360381019061014d919061061f565b6103d7565b60405161016193929190610751565b60405180910390f35b610172610401565b60405161017f9190610684565b60405180910390f35b6101a2600480360381019061019d91906105a7565b610425565b6040516101af91906106c8565b60405180910390f35b6101d260048036038101906101cd91906105e3565b61044a565b6040516101df9190610684565b60405180910390f35b61020260048036038101906101fd919061061f565b610498565b604051610210929190610728565b60405180910390f35b610233600480360381019061022e919061061f565b6104bc565b60405161024091906106c8565b60405180910390f35b6102516104da565b60405161025e91906106c8565b60405180910390f35b610281600480360381019061027c919061061f565b6104e6565b60405161028e91906106c8565b60405180910390f35b61029f610504565b6040516102ac91906106c8565b60405180910390f35b6102cf60048036038101906102ca919061061f565b61050a565b6040516102df9493929190610788565b60405180910390f35b61030260048036038101906102fd919061061f565b61053a565b6040516103139594939291906107cd565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905084565b60086020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020818154811061046657600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090508060000154908060010154905082565b60076020528060005260406000206000915090508060000154905081565b670de0b6b3a764000081565b60056020528060005260406000206000915090508060000154905081565b60015481565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b60046020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60008135905061058c81610875565b92915050565b6000813590506105a18161088c565b92915050565b600080604083850312156105ba57600080fd5b60006105c88582860161057d565b92505060206105d98582860161057d565b9150509250929050565b600080604083850312156105f657600080fd5b60006106048582860161057d565b925050602061061585828601610592565b9150509250929050565b60006020828403121561063157600080fd5b600061063f84828501610592565b91505092915050565b61065181610820565b82525050565b61066081610832565b82525050565b61066f8161085e565b82525050565b61067e81610868565b82525050565b60006020820190506106996000830184610648565b92915050565b60006040820190506106b46000830185610657565b6106c16020830184610675565b9392505050565b60006020820190506106dd6000830184610666565b92915050565b60006080820190506106f86000830187610666565b6107056020830186610648565b6107126040830185610648565b61071f6060830184610675565b95945050505050565b600060408201905061073d6000830185610666565b61074a6020830184610666565b9392505050565b60006060820190506107666000830186610666565b6107736020830185610666565b6107806040830184610666565b949350505050565b600060808201905061079d6000830187610666565b6107aa6020830186610666565b6107b76040830185610666565b6107c46060830184610666565b95945050505050565b600060a0820190506107e26000830188610666565b6107ef6020830187610666565b6107fc6040830186610666565b6108096060830185610666565b6108166080830184610675565b9695505050505050565b600061082b8261083e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b61087e81610820565b811461088957600080fd5b50565b6108958161085e565b81146108a057600080fd5b5056fea264697066735822122085d2cfc7599d04a4c6765120000da1c1eee1fa5c2eac60df8aa17c769770d76b64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88E53EC8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC22127A9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC22127A9 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xE7702D05 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF86BCB9B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xFE143615 EQ PUSH2 0x2E8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x88E53EC8 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8EFF3521 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA20BAEE6 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xCD6A4BC EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1F037096 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2235410D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x38613690 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x52289738 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x7BC9EC23 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP3 SWAP2 SWAP1 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP3 SWAP2 SWAP1 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58C DUP2 PUSH2 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A1 DUP2 PUSH2 0x88C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5D9 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x604 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x615 DUP6 DUP3 DUP7 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x63F DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x66F DUP2 PUSH2 0x85E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x67E DUP2 PUSH2 0x868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x6C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6F8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x705 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x712 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x71F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x73D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x74A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x766 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x773 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x780 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x79D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7C4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7E2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7EF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7FC PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x809 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x816 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0x820 JUMP JUMPDEST DUP2 EQ PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD2 0xCF 0xC7 MSIZE SWAP14 DIV LOG4 0xC6 PUSH23 0x5120000DA1C1EEE1FA5C2EAC60DF8AA17C769770D76B64 PUSH20 0x6F6C634300080100330000000000000000000000 ",
							"sourceMap": "2562:2858:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5962:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "7:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:10",
														"type": ""
													}
												],
												"src": "152:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:324:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "438:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "428:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "428:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "428:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:10"
															},
															"nodeType": "YulIf",
															"src": "390:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "452:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "467:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "481:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "471:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "496:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "531:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "542:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "527:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "527:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "551:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "506:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "496:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "579:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "594:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "598:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "624:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "659:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "679:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "634:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "624:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "342:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "353:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "365:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "373:6:10",
														"type": ""
													}
												],
												"src": "297:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "793:324:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "839:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "848:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "851:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "841:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "841:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "814:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "823:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "810:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "835:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "806:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:10"
															},
															"nodeType": "YulIf",
															"src": "803:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "865:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "880:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "894:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "884:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "909:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "944:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "955:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "940:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "940:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "964:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "919:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "919:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "909:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "992:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1007:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1021:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1011:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1037:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1072:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1083:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1068:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1068:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1092:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1047:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1047:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1037:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "755:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "766:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "778:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "786:6:10",
														"type": ""
													}
												],
												"src": "710:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1189:196:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1235:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1244:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1247:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1237:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1237:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1210:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1219:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:32:10"
															},
															"nodeType": "YulIf",
															"src": "1199:2:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1261:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1276:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1280:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1305:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1340:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1351:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1336:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1336:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1360:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1315:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1305:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1159:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1170:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1182:6:10",
														"type": ""
													}
												],
												"src": "1123:262:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1473:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1496:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1478:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1478:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1444:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1451:3:10",
														"type": ""
													}
												],
												"src": "1391:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1574:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1591:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1611:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1596:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1562:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1569:3:10",
														"type": ""
													}
												],
												"src": "1515:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1712:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1735:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1717:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1717:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1705:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1683:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1690:3:10",
														"type": ""
													}
												],
												"src": "1630:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1832:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1853:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1837:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1825:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1803:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1810:3:10",
														"type": ""
													}
												],
												"src": "1754:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1980:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1992:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2003:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1988:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1980:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2073:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2084:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2069:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2016:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1942:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1954:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1965:4:10",
														"type": ""
													}
												],
												"src": "1872:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2216:196:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2226:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2234:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2300:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2324:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2309:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2262:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2262:65:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2401:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2337:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2337:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint8__to_t_bool_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2180:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2192:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2200:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2211:4:10",
														"type": ""
													}
												],
												"src": "2100:312:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2516:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2526:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2538:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2549:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2534:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2526:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2606:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2630:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2615:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2562:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2562:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2511:4:10",
														"type": ""
													}
												],
												"src": "2418:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:367:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2834:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2846:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2857:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2834:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2915:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2928:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2939:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2924:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2871:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2871:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3020:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2952:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2952:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3102:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3087:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3034:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3034:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3180:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3116:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:68:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint8__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2784:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2792:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2800:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2808:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2819:4:10",
														"type": ""
													}
												],
												"src": "2646:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3323:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3333:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3345:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3333:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3413:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3426:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3437:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3422:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3369:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3369:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3494:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3507:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3518:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3450:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3450:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3287:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3299:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3307:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3318:4:10",
														"type": ""
													}
												],
												"src": "3197:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3689:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3699:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3711:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3722:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3699:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3779:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3792:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3803:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3735:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3860:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3873:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3884:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3869:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3816:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3816:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3942:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3955:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3966:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3951:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3898:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3898:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3645:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3657:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3665:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3673:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3684:4:10",
														"type": ""
													}
												],
												"src": "3535:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4165:371:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4175:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4187:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4198:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4183:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4175:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4256:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4280:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4212:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4212:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4337:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4361:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4346:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4293:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4293:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4419:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4443:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4428:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4375:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4375:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4501:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4514:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4525:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4457:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4457:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4113:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4125:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4133:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4141:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4149:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4160:4:10",
														"type": ""
													}
												],
												"src": "3983:553:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4748:450:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4758:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4770:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4766:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4758:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4839:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4852:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4863:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4848:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4795:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4795:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4920:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4933:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4944:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4876:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4876:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5002:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4958:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4958:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5084:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5097:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5108:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5093:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5040:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5040:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5162:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5175:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5186:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5171:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5122:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5122:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4688:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4700:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4708:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4716:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4724:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4732:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4743:4:10",
														"type": ""
													}
												],
												"src": "4542:656:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5249:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5259:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5288:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5270:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5259:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5231:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5241:7:10",
														"type": ""
													}
												],
												"src": "5204:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5348:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5358:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5383:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5376:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5376:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5358:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5330:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5340:7:10",
														"type": ""
													}
												],
												"src": "5306:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5447:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5457:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5472:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5479:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5457:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5429:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5439:7:10",
														"type": ""
													}
												],
												"src": "5402:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5579:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5589:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5600:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5589:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5561:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5571:7:10",
														"type": ""
													}
												],
												"src": "5534:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5660:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5670:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5685:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5681:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5681:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5670:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5642:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5652:7:10",
														"type": ""
													}
												],
												"src": "5617:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5752:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5809:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5818:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5821:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5811:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5811:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5811:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5775:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5800:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5782:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5782:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5772:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5772:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:43:10"
															},
															"nodeType": "YulIf",
															"src": "5762:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5745:5:10",
														"type": ""
													}
												],
												"src": "5709:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5880:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5937:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5946:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5949:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5939:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5939:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5939:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5903:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5928:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5910:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5910:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5900:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5893:43:10"
															},
															"nodeType": "YulIf",
															"src": "5890:2:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5873:5:10",
														"type": ""
													}
												],
												"src": "5837:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_uint8__to_t_bool_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint8__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806388e53ec81161008c578063c22127a911610066578063c22127a914610267578063e7702d0514610297578063f86bcb9b146102b5578063fe143615146102e8576100cf565b806388e53ec8146101e85780638eff352114610219578063a20baee614610249576100cf565b80630cd6a4bc146100d45780631f037096146101055780632235410d14610138578063386136901461016a57806352289738146101885780637bc9ec23146101b8575b600080fd5b6100ee60048036038101906100e9919061061f565b61031c565b6040516100fc92919061069f565b60405180910390f35b61011f600480360381019061011a919061061f565b61035a565b60405161012f94939291906106e3565b60405180910390f35b610152600480360381019061014d919061061f565b6103d7565b60405161016193929190610751565b60405180910390f35b610172610401565b60405161017f9190610684565b60405180910390f35b6101a2600480360381019061019d91906105a7565b610425565b6040516101af91906106c8565b60405180910390f35b6101d260048036038101906101cd91906105e3565b61044a565b6040516101df9190610684565b60405180910390f35b61020260048036038101906101fd919061061f565b610498565b604051610210929190610728565b60405180910390f35b610233600480360381019061022e919061061f565b6104bc565b60405161024091906106c8565b60405180910390f35b6102516104da565b60405161025e91906106c8565b60405180910390f35b610281600480360381019061027c919061061f565b6104e6565b60405161028e91906106c8565b60405180910390f35b61029f610504565b6040516102ac91906106c8565b60405180910390f35b6102cf60048036038101906102ca919061061f565b61050a565b6040516102df9493929190610788565b60405180910390f35b61030260048036038101906102fd919061061f565b61053a565b6040516103139594939291906107cd565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16905084565b60086020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020818154811061046657600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090508060000154908060010154905082565b60076020528060005260406000206000915090508060000154905081565b670de0b6b3a764000081565b60056020528060005260406000206000915090508060000154905081565b60015481565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b60046020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60008135905061058c81610875565b92915050565b6000813590506105a18161088c565b92915050565b600080604083850312156105ba57600080fd5b60006105c88582860161057d565b92505060206105d98582860161057d565b9150509250929050565b600080604083850312156105f657600080fd5b60006106048582860161057d565b925050602061061585828601610592565b9150509250929050565b60006020828403121561063157600080fd5b600061063f84828501610592565b91505092915050565b61065181610820565b82525050565b61066081610832565b82525050565b61066f8161085e565b82525050565b61067e81610868565b82525050565b60006020820190506106996000830184610648565b92915050565b60006040820190506106b46000830185610657565b6106c16020830184610675565b9392505050565b60006020820190506106dd6000830184610666565b92915050565b60006080820190506106f86000830187610666565b6107056020830186610648565b6107126040830185610648565b61071f6060830184610675565b95945050505050565b600060408201905061073d6000830185610666565b61074a6020830184610666565b9392505050565b60006060820190506107666000830186610666565b6107736020830185610666565b6107806040830184610666565b949350505050565b600060808201905061079d6000830187610666565b6107aa6020830186610666565b6107b76040830185610666565b6107c46060830184610666565b95945050505050565b600060a0820190506107e26000830188610666565b6107ef6020830187610666565b6107fc6040830186610666565b6108096060830185610666565b6108166080830184610675565b9695505050505050565b600061082b8261083e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b61087e81610820565b811461088957600080fd5b50565b6108958161085e565b81146108a057600080fd5b5056fea264697066735822122085d2cfc7599d04a4c6765120000da1c1eee1fa5c2eac60df8aa17c769770d76b64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88E53EC8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC22127A9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC22127A9 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xE7702D05 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF86BCB9B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xFE143615 EQ PUSH2 0x2E8 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x88E53EC8 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8EFF3521 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA20BAEE6 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xCD6A4BC EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1F037096 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2235410D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x38613690 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x52289738 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x7BC9EC23 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP3 SWAP2 SWAP1 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP3 SWAP2 SWAP1 PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58C DUP2 PUSH2 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A1 DUP2 PUSH2 0x88C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C8 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5D9 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x604 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x615 DUP6 DUP3 DUP7 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x63F DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x66F DUP2 PUSH2 0x85E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x67E DUP2 PUSH2 0x868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x6C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6F8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x705 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x712 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x71F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x73D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x74A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x766 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x773 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x780 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x79D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7C4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7E2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7EF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7FC PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x809 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x816 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0x820 JUMP JUMPDEST DUP2 EQ PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD2 0xCF 0xC7 MSIZE SWAP14 DIV LOG4 0xC6 PUSH23 0x5120000DA1C1EEE1FA5C2EAC60DF8AA17C769770D76B64 PUSH20 0x6F6C634300080100330000000000000000000000 ",
							"sourceMap": "2562:2858:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3645;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3995:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2682:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4108:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4185:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3941:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2628;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2715:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3881:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3765:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3705:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3645:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3995:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2682:27::-;;;;;;;;;;;;:::o;4108:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4185:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4049:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3941:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;2628:::-;2672:4;2628:48;:::o;3823:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;2715:28::-;;;;:::o;3881:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3765:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:10:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:407::-;;;422:2;410:9;401:7;397:23;393:32;390:2;;;438:1;435;428:12;390:2;481:1;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;452:117;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;380:324;;;;;:::o;710:407::-;;;835:2;823:9;814:7;810:23;806:32;803:2;;;851:1;848;841:12;803:2;894:1;919:53;964:7;955:6;944:9;940:22;919:53;:::i;:::-;909:63;;865:117;1021:2;1047:53;1092:7;1083:6;1072:9;1068:22;1047:53;:::i;:::-;1037:63;;992:118;793:324;;;;;:::o;1123:262::-;;1231:2;1219:9;1210:7;1206:23;1202:32;1199:2;;;1247:1;1244;1237:12;1199:2;1290:1;1315:53;1360:7;1351:6;1340:9;1336:22;1315:53;:::i;:::-;1305:63;;1261:117;1189:196;;;;:::o;1391:118::-;1478:24;1496:5;1478:24;:::i;:::-;1473:3;1466:37;1456:53;;:::o;1515:109::-;1596:21;1611:5;1596:21;:::i;:::-;1591:3;1584:34;1574:50;;:::o;1630:118::-;1717:24;1735:5;1717:24;:::i;:::-;1712:3;1705:37;1695:53;;:::o;1754:112::-;1837:22;1853:5;1837:22;:::i;:::-;1832:3;1825:35;1815:51;;:::o;1872:222::-;;2003:2;1992:9;1988:18;1980:26;;2016:71;2084:1;2073:9;2069:17;2060:6;2016:71;:::i;:::-;1970:124;;;;:::o;2100:312::-;;2249:2;2238:9;2234:18;2226:26;;2262:65;2324:1;2313:9;2309:17;2300:6;2262:65;:::i;:::-;2337:68;2401:2;2390:9;2386:18;2377:6;2337:68;:::i;:::-;2216:196;;;;;:::o;2418:222::-;;2549:2;2538:9;2534:18;2526:26;;2562:71;2630:1;2619:9;2615:17;2606:6;2562:71;:::i;:::-;2516:124;;;;:::o;2646:545::-;;2857:3;2846:9;2842:19;2834:27;;2871:71;2939:1;2928:9;2924:17;2915:6;2871:71;:::i;:::-;2952:72;3020:2;3009:9;3005:18;2996:6;2952:72;:::i;:::-;3034;3102:2;3091:9;3087:18;3078:6;3034:72;:::i;:::-;3116:68;3180:2;3169:9;3165:18;3156:6;3116:68;:::i;:::-;2824:367;;;;;;;:::o;3197:332::-;;3356:2;3345:9;3341:18;3333:26;;3369:71;3437:1;3426:9;3422:17;3413:6;3369:71;:::i;:::-;3450:72;3518:2;3507:9;3503:18;3494:6;3450:72;:::i;:::-;3323:206;;;;;:::o;3535:442::-;;3722:2;3711:9;3707:18;3699:26;;3735:71;3803:1;3792:9;3788:17;3779:6;3735:71;:::i;:::-;3816:72;3884:2;3873:9;3869:18;3860:6;3816:72;:::i;:::-;3898;3966:2;3955:9;3951:18;3942:6;3898:72;:::i;:::-;3689:288;;;;;;:::o;3983:553::-;;4198:3;4187:9;4183:19;4175:27;;4212:71;4280:1;4269:9;4265:17;4256:6;4212:71;:::i;:::-;4293:72;4361:2;4350:9;4346:18;4337:6;4293:72;:::i;:::-;4375;4443:2;4432:9;4428:18;4419:6;4375:72;:::i;:::-;4457;4525:2;4514:9;4510:18;4501:6;4457:72;:::i;:::-;4165:371;;;;;;;:::o;4542:656::-;;4781:3;4770:9;4766:19;4758:27;;4795:71;4863:1;4852:9;4848:17;4839:6;4795:71;:::i;:::-;4876:72;4944:2;4933:9;4929:18;4920:6;4876:72;:::i;:::-;4958;5026:2;5015:9;5011:18;5002:6;4958:72;:::i;:::-;5040;5108:2;5097:9;5093:18;5084:6;5040:72;:::i;:::-;5122:69;5186:3;5175:9;5171:19;5162:6;5122:69;:::i;:::-;4748:450;;;;;;;;:::o;5204:96::-;;5270:24;5288:5;5270:24;:::i;:::-;5259:35;;5249:51;;;:::o;5306:90::-;;5383:5;5376:13;5369:21;5358:32;;5348:48;;;:::o;5402:126::-;;5479:42;5472:5;5468:54;5457:65;;5447:81;;;:::o;5534:77::-;;5600:5;5589:16;;5579:32;;;:::o;5617:86::-;;5692:4;5685:5;5681:16;5670:27;;5660:43;;;:::o;5709:122::-;5782:24;5800:5;5782:24;:::i;:::-;5775:5;5772:35;5762:2;;5821:1;5818;5811:12;5762:2;5752:79;:::o;5837:122::-;5910:24;5928:5;5910:24;:::i;:::-;5903:5;5900:35;5890:2;;5949:1;5946;5939:12;5890:2;5880:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "453000",
								"executionCost": "486",
								"totalCost": "453486"
							},
							"external": {
								"DECIMAL_PRECISION()": "396",
								"agentAddress()": "1278",
								"exitParams(uint256)": "infinite",
								"makerMarginTokens(address,uint256)": "infinite",
								"makerTokenMargin(address,address)": "infinite",
								"margin2(uint256)": "infinite",
								"marginParams1(uint256)": "infinite",
								"openInterest(uint256)": "infinite",
								"positionCore1(uint256)": "infinite",
								"positionCore2(uint256)": "2526",
								"positionCount()": "1173",
								"priceParams1(uint256)": "infinite",
								"priceParams2(uint256)": "infinite"
							},
							"internal": {
								"_removeToken(address,address)": "infinite",
								"parseEntryPrice(uint256,uint256,address)": "infinite",
								"transferMargin(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2562,
									"end": 5420,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2562,
									"end": 5420,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085d2cfc7599d04a4c6765120000da1c1eee1fa5c2eac60df8aa17c769770d76b64736f6c63430008010033",
									".code": [
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "88E53EC8"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "C22127A9"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "C22127A9"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "E7702D05"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "F86BCB9B"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "FE143615"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "88E53EC8"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "8EFF3521"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "A20BAEE6"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "CD6A4BC"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "1F037096"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "2235410D"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "38613690"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "52289738"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "7BC9EC23"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 5420,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3759,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3699,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4043,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4179,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4239,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2676,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3875,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2743,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 297,
											"end": 704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 704,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 401,
											"end": 408,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 397,
											"end": 420,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 393,
											"end": 425,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 390,
											"end": 392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 438,
											"end": 439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 428,
											"end": 440,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 390,
											"end": 392,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 390,
											"end": 392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 551,
											"end": 558,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 542,
											"end": 548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 531,
											"end": 540,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 527,
											"end": 549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 506,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 506,
											"end": 559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 496,
											"end": 559,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 496,
											"end": 559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 452,
											"end": 569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 679,
											"end": 686,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 655,
											"end": 677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 634,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 634,
											"end": 687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 624,
											"end": 687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 624,
											"end": 687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 579,
											"end": 697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 380,
											"end": 704,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 1117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 835,
											"end": 837,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 814,
											"end": 821,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 810,
											"end": 833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 806,
											"end": 838,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 851,
											"end": 852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 853,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 803,
											"end": 805,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 894,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 964,
											"end": 971,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 944,
											"end": 953,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 940,
											"end": 962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 919,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 919,
											"end": 972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 909,
											"end": 972,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 909,
											"end": 972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1092,
											"end": 1099,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1081,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1047,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 793,
											"end": 1117,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1234,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1336,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1315,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1385,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1478,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1509,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1515,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1611,
											"end": 1616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1596,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1618,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1624,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1748,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1630,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1735,
											"end": 1740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1717,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1748,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1754,
											"end": 1866,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1754,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1853,
											"end": 1858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1837,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1866,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 2094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2005,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2016,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2094,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2401,
											"end": 2403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2337,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2412,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2615,
											"end": 2632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2562,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2640,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 3191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2860,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2871,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2952,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3180,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3116,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 3191,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3358,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3369,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3450,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3529,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3735,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3816,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3942,
											"end": 3948,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3898,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3977,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4187,
											"end": 4196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4212,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4343,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4293,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4443,
											"end": 4445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4425,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4525,
											"end": 4527,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4507,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4457,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4536,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4542,
											"end": 5198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4784,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4863,
											"end": 4864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4861,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4795,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4944,
											"end": 4946,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4942,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 4947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4926,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4876,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4958,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5097,
											"end": 5106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5040,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5186,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5168,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5122,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 5198,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5288,
											"end": 5293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5270,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5300,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5390,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5402,
											"end": 5528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5521,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5472,
											"end": 5477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5522,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5528,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5617,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5696,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5685,
											"end": 5690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5697,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5660,
											"end": 5703,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5709,
											"end": 5831,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5709,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5800,
											"end": 5805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5782,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5775,
											"end": 5780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5807,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5823,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5762,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5831,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5837,
											"end": 5959,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 5837,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5935,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5946,
											"end": 5947,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5939,
											"end": 5951,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5959,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DECIMAL_PRECISION()": "a20baee6",
							"agentAddress()": "38613690",
							"exitParams(uint256)": "2235410d",
							"makerMarginTokens(address,uint256)": "7bc9ec23",
							"makerTokenMargin(address,address)": "52289738",
							"margin2(uint256)": "8eff3521",
							"marginParams1(uint256)": "f86bcb9b",
							"openInterest(uint256)": "88e53ec8",
							"positionCore1(uint256)": "1f037096",
							"positionCore2(uint256)": "0cd6a4bc",
							"positionCount()": "e7702d05",
							"priceParams1(uint256)": "fe143615",
							"priceParams2(uint256)": "c22127a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DECIMAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exitParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stopLossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"makerMarginTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"makerTokenMargin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"margin2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialLoan\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marginParams1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxedMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"excessMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionCore1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"listingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"positionType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionCore2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status1\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"status2\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceParams1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAtEntry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"leverage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceParams2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":\"CSDUtilityPartial\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":{\"keccak256\":\"0x0b85fa87b21ef193f955823092b2be587acb2bfe644b859c10ed3f3a30e590fc\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://17fc79e27ef9eeb6a47b0746ec7807ba331c0abfe7720a0d086e2d364827ebb6\",\"dweb:/ipfs/QmZ3aH4rSZ36UjtGWpLE8TQ3riX7gKBPc8tdVfJ25YA8BG\"]},\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1641,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "agentAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1643,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "positionCount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1700,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "positionCore1",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(PositionCore1)1652_storage)"
							},
							{
								"astId": 1705,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "positionCore2",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(PositionCore2)1657_storage)"
							},
							{
								"astId": 1710,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "priceParams1",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(PriceParams1)1668_storage)"
							},
							{
								"astId": 1715,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "priceParams2",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(PriceParams2)1671_storage)"
							},
							{
								"astId": 1720,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "marginParams1",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(MarginParams1)1680_storage)"
							},
							{
								"astId": 1725,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "margin2",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(MarginParams2)1683_storage)"
							},
							{
								"astId": 1730,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "exitParams",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(ExitParams)1690_storage)"
							},
							{
								"astId": 1735,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "openInterest",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(OpenInterest)1695_storage)"
							},
							{
								"astId": 1741,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "makerTokenMargin",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1746,
								"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
								"label": "makerMarginTokens",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(ExitParams)1690_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.ExitParams)",
								"numberOfBytes": "32",
								"value": "t_struct(ExitParams)1690_storage"
							},
							"t_mapping(t_uint256,t_struct(MarginParams1)1680_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1)",
								"numberOfBytes": "32",
								"value": "t_struct(MarginParams1)1680_storage"
							},
							"t_mapping(t_uint256,t_struct(MarginParams2)1683_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.MarginParams2)",
								"numberOfBytes": "32",
								"value": "t_struct(MarginParams2)1683_storage"
							},
							"t_mapping(t_uint256,t_struct(OpenInterest)1695_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.OpenInterest)",
								"numberOfBytes": "32",
								"value": "t_struct(OpenInterest)1695_storage"
							},
							"t_mapping(t_uint256,t_struct(PositionCore1)1652_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1)",
								"numberOfBytes": "32",
								"value": "t_struct(PositionCore1)1652_storage"
							},
							"t_mapping(t_uint256,t_struct(PositionCore2)1657_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PositionCore2)",
								"numberOfBytes": "32",
								"value": "t_struct(PositionCore2)1657_storage"
							},
							"t_mapping(t_uint256,t_struct(PriceParams1)1668_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceParams1)1668_storage"
							},
							"t_mapping(t_uint256,t_struct(PriceParams2)1671_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CSDUtilityPartial.PriceParams2)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceParams2)1671_storage"
							},
							"t_struct(ExitParams)1690_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.ExitParams",
								"members": [
									{
										"astId": 1685,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "stopLossPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1687,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "takeProfitPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1689,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "exitPrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(MarginParams1)1680_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.MarginParams1",
								"members": [
									{
										"astId": 1673,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "initialMargin",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1675,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "taxedMargin",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1677,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "excessMargin",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1679,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "fee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(MarginParams2)1683_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.MarginParams2",
								"members": [
									{
										"astId": 1682,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "initialLoan",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(OpenInterest)1695_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.OpenInterest",
								"members": [
									{
										"astId": 1692,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "leverageAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1694,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PositionCore1)1652_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PositionCore1",
								"members": [
									{
										"astId": 1645,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "positionId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1647,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "listingAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1649,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "makerAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1651,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "positionType",
										"offset": 20,
										"slot": "2",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(PositionCore2)1657_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PositionCore2",
								"members": [
									{
										"astId": 1654,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "status1",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1656,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "status2",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(PriceParams1)1668_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PriceParams1",
								"members": [
									{
										"astId": 1659,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "minEntryPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1661,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "maxEntryPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1663,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "minPrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1665,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "priceAtEntry",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1667,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "leverage",
										"offset": 0,
										"slot": "4",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PriceParams2)1671_storage": {
								"encoding": "inplace",
								"label": "struct CSDUtilityPartial.PriceParams2",
								"members": [
									{
										"astId": 1670,
										"contract": "ShockSpace/driverUtils/CSDUtilityPartial.sol:CSDUtilityPartial",
										"label": "liquidationPrice",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISSAgent": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getListing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getListing(address,address)": "b369f6ad"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":\"ISSAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":{\"keccak256\":\"0x0b85fa87b21ef193f955823092b2be587acb2bfe644b859c10ed3f3a30e590fc\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://17fc79e27ef9eeb6a47b0746ec7807ba331c0abfe7720a0d086e2d364827ebb6\",\"dweb:/ipfs/QmZ3aH4rSZ36UjtGWpLE8TQ3riX7gKBPc8tdVfJ25YA8BG\"]},\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISSLiquidityTemplate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isX",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "addFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityDetailsView",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xLiquid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yLiquid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xFees",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yFees",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addFees(address,bool,uint256)": "dbaf307d",
							"liquidityDetailsView()": "a0d41b88"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isX\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"addFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityDetailsView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xLiquid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yLiquid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yFees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":\"ISSLiquidityTemplate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":{\"keccak256\":\"0x0b85fa87b21ef193f955823092b2be587acb2bfe644b859c10ed3f3a30e590fc\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://17fc79e27ef9eeb6a47b0746ec7807ba331c0abfe7720a0d086e2d364827ebb6\",\"dweb:/ipfs/QmZ3aH4rSZ36UjtGWpLE8TQ3riX7gKBPc8tdVfJ25YA8BG\"]},\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISSListing": {
					"abi": [
						{
							"inputs": [],
							"name": "decimalsA",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimalsB",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityAddressView",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "prices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payoutType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "required",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSListing.PayoutUpdate[]",
									"name": "updates",
									"type": "tuple[]"
								}
							],
							"name": "ssUpdate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "updateType",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										}
									],
									"internalType": "struct ISSListing.UpdateType[]",
									"name": "updates",
									"type": "tuple[]"
								}
							],
							"name": "update",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "volumeBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yBalance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimalsA()": "50894e9f",
							"decimalsB()": "57cbf16c",
							"liquidityAddressView(address)": "c546ac00",
							"prices(address)": "cfed246b",
							"ssUpdate(address,(uint8,address,uint256)[])": "88413c17",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"update(address,(uint8,uint256,uint256,address,address)[])": "296dc7d9",
							"volumeBalances(address)": "9205b4cd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimalsA\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalsB\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityAddressView\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payoutType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSListing.PayoutUpdate[]\",\"name\":\"updates\",\"type\":\"tuple[]\"}],\"name\":\"ssUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"updateType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ISSListing.UpdateType[]\",\"name\":\"updates\",\"type\":\"tuple[]\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"volumeBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":\"ISSListing\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/driverUtils/CSDUtilityPartial.sol\":{\"keccak256\":\"0x0b85fa87b21ef193f955823092b2be587acb2bfe644b859c10ed3f3a30e590fc\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://17fc79e27ef9eeb6a47b0746ec7807ba331c0abfe7720a0d086e2d364827ebb6\",\"dweb:/ipfs/QmZ3aH4rSZ36UjtGWpLE8TQ3riX7gKBPc8tdVfJ25YA8BG\"]},\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/imports/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/imports/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204048c8e64fe949082a16a98484f181cff2b7b34c8cc566152e525a690efa095964736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204048c8e64fe949082a16a98484f181cff2b7b34c8cc566152e525a690efa095964736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x48 0xC8 0xE6 0x4F 0xE9 0x49 ADDMOD 0x2A AND 0xA9 DUP5 DUP5 CALL DUP2 0xCF CALLCODE 0xB7 0xB3 0x4C DUP13 0xC5 PUSH7 0x152E525A690EFA MULMOD MSIZE PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "194:9169:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204048c8e64fe949082a16a98484f181cff2b7b34c8cc566152e525a690efa095964736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x48 0xC8 0xE6 0x4F 0xE9 0x49 ADDMOD 0x2A AND 0xA9 DUP5 DUP5 CALL DUP2 0xCF CALLCODE 0xB7 0xB3 0x4C DUP13 0xC5 PUSH7 0x152E525A690EFA MULMOD MSIZE PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "194:9169:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204048c8e64fe949082a16a98484f181cff2b7b34c8cc566152e525a690efa095964736f6c63430008010033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2337,
								"contract": "ShockSpace/imports/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2453,
								"contract": "ShockSpace/imports/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/imports/SafeERC20.sol\":675:6886  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/imports/SafeERC20.sol\":675:6886  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203ea1f66ea8b32c3fe44ca0e20d852c31727a8c197eb0ae2bd19d59a24fed087664736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ea1f66ea8b32c3fe44ca0e20d852c31727a8c197eb0ae2bd19d59a24fed087664736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY LOG1 0xF6 PUSH15 0xA8B32C3FE44CA0E20D852C31727A8C NOT PUSH31 0xB0AE2BD19D59A24FED087664736F6C63430008010033000000000000000000 ",
							"sourceMap": "675:6211:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ea1f66ea8b32c3fe44ca0e20d852c31727a8c197eb0ae2bd19d59a24fed087664736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY LOG1 0xF6 PUSH15 0xA8B32C3FE44CA0E20D852C31727A8C NOT PUSH31 0xB0AE2BD19D59A24FED087664736F6C63430008010033000000000000000000 ",
							"sourceMap": "675:6211:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ea1f66ea8b32c3fe44ca0e20d852c31727a8c197eb0ae2bd19d59a24fed087664736f6c63430008010033",
									".code": [
										{
											"begin": 675,
											"end": 6886,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> ShockSpace/imports/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7863,
					"file": "ShockSpace/imports/Address.sol",
					"start": 7851
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> ShockSpace/imports/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8678,
					"file": "ShockSpace/imports/Address.sol",
					"start": 8666
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> ShockSpace/driverUtils/CSDPositionPartial.sol:187:9:\n    |\n187 |         uint256 positionId,\n    |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8971,
					"file": "ShockSpace/driverUtils/CSDPositionPartial.sol",
					"start": 8953
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/driverUtils/CSDPositionPartial.sol:197:10:\n    |\n197 |         (uint256 currentPrice, uint256 minPrice, uint256 maxPrice,) = parseEntryPrice(minEntryPrice, maxEntryPrice, listingAddress);\n    |          ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9326,
					"file": "ShockSpace/driverUtils/CSDPositionPartial.sol",
					"start": 9306
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/driverUtils/CSDPositionPartial.sol:197:50:\n    |\n197 |         (uint256 currentPrice, uint256 minPrice, uint256 maxPrice,) = parseEntryPrice(minEntryPrice, maxEntryPrice, listingAddress);\n    |                                                  ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9362,
					"file": "ShockSpace/driverUtils/CSDPositionPartial.sol",
					"start": 9346
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> ShockSpace/driverUtils/CSDPositionPartial.sol:218:9:\n    |\n218 |         uint256 positionId,\n    |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10167,
					"file": "ShockSpace/driverUtils/CSDPositionPartial.sol",
					"start": 10149
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/driverUtils/CSDPositionPartial.sol:228:10:\n    |\n228 |         (uint256 currentPrice, uint256 minPrice, uint256 maxPrice,) = parseEntryPrice(minEntryPrice, maxEntryPrice, listingAddress);\n    |          ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10522,
					"file": "ShockSpace/driverUtils/CSDPositionPartial.sol",
					"start": 10502
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/driverUtils/CSDPositionPartial.sol:228:50:\n    |\n228 |         (uint256 currentPrice, uint256 minPrice, uint256 maxPrice,) = parseEntryPrice(minEntryPrice, maxEntryPrice, listingAddress);\n    |                                                  ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10558,
					"file": "ShockSpace/driverUtils/CSDPositionPartial.sol",
					"start": 10542
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ShockSpace/driverUtils/CSDExecutionPartial.sol:26:9:\n   |\n26 |         address listingAddress,\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 917,
					"file": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"start": 895
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ShockSpace/driverUtils/CSDExecutionPartial.sol:28:9:\n   |\n28 |         uint256 minPrice,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 971,
					"file": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"start": 955
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ShockSpace/driverUtils/CSDExecutionPartial.sol:29:9:\n   |\n29 |         uint256 maxPrice,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 997,
					"file": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"start": 981
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ShockSpace/driverUtils/CSDExecutionPartial.sol:47:9:\n   |\n47 |         address listingAddress,\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1758,
					"file": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"start": 1736
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ShockSpace/driverUtils/CSDExecutionPartial.sol:49:9:\n   |\n49 |         uint256 minPrice,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1812,
					"file": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"start": 1796
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ShockSpace/driverUtils/CSDExecutionPartial.sol:50:9:\n   |\n50 |         uint256 maxPrice,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1838,
					"file": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"start": 1822
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ShockSpace/driverUtils/CSDExecutionPartial.sol:66:9:\n   |\n66 |         uint256 positionId,\n   |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2554,
					"file": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"start": 2536
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> ShockSpace/driverUtils/CSDExecutionPartial.sol:65:5:\n   |\n65 |     function _shouldClosePosition(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3235,
					"file": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"start": 2497
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ShockSpace/driverUtils/CSDExecutionPartial.sol": {
				"ast": {
					"absolutePath": "ShockSpace/driverUtils/CSDExecutionPartial.sol",
					"exportedSymbols": {
						"Address": [
							2213
						],
						"CSDExecutionPartial": [
							467
						],
						"CSDPositionPartial": [
							1505
						],
						"CSDUtilityPartial": [
							1883
						],
						"Context": [
							2235
						],
						"IERC20": [
							2293
						],
						"IERC20Permit": [
							2329
						],
						"ISSAgent": [
							1632
						],
						"ISSLiquidityTemplate": [
							1622
						],
						"ISSListing": [
							1590
						],
						"Ownable": [
							2442
						],
						"ReentrancyGuard": [
							2507
						],
						"SafeERC20": [
							2883
						]
					},
					"id": 468,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "581:22:0"
						},
						{
							"absolutePath": "ShockSpace/driverUtils/CSDPositionPartial.sol",
							"file": "./CSDPositionPartial.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 1506,
							"src": "605:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "CSDPositionPartial",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1505,
										"src": "673:18:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "673:18:0"
								}
							],
							"contractDependencies": [
								1505,
								1883
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 467,
							"linearizedBaseContracts": [
								467,
								1505,
								1883
							],
							"name": "CSDExecutionPartial",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "720:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 7,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "738:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "738:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 11,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "760:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CSDExecutionPartial_$467",
																			"typeString": "contract CSDExecutionPartial"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CSDExecutionPartial_$467",
																			"typeString": "contract CSDExecutionPartial"
																		}
																	],
																	"id": 10,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "752:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 9,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "752:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "752:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "738:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920447269766572",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "767:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcd22ae680aaf23789012dd0901898538770b213c39647d4bc2c818fc404a32e",
																"typeString": "literal_string \"Only Driver\""
															},
															"value": "Only Driver"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcd22ae680aaf23789012dd0901898538770b213c39647d4bc2c818fc404a32e",
																"typeString": "literal_string \"Only Driver\""
															}
														],
														"id": 6,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "730:51:0"
											},
											{
												"id": 17,
												"nodeType": "PlaceholderStatement",
												"src": "791:1:0"
											}
										]
									},
									"id": 19,
									"name": "onlyDriver",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:2:0"
									},
									"src": "698:101:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1054:584:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 39,
																"name": "positionType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1072:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1088:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1072:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706f736974696f6e2074797065",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1091:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e62554a47ad890312d28dcd68824e1f5efea60122ac15db8824e00f7d2b9da7",
																"typeString": "literal_string \"Invalid position type\""
															},
															"value": "Invalid position type"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e62554a47ad890312d28dcd68824e1f5efea60122ac15db8824e00f7d2b9da7",
																"typeString": "literal_string \"Invalid position type\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1064:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "1064:51:0"
											},
											{
												"assignments": [
													47
												],
												"declarations": [
													{
														"constant": false,
														"id": 47,
														"mutability": "mutable",
														"name": "price1",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "1125:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
															"typeString": "struct CSDUtilityPartial.PriceParams1"
														},
														"typeName": {
															"id": 46,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 45,
																"name": "PriceParams1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1668,
																"src": "1125:12:0"
															},
															"referencedDeclaration": 1668,
															"src": "1125:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																"typeString": "struct CSDUtilityPartial.PriceParams1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"baseExpression": {
														"id": 48,
														"name": "priceParams1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "1155:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams1_$1668_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1 storage ref)"
														}
													},
													"id": 50,
													"indexExpression": {
														"id": 49,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1168:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1155:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceParams1_$1668_storage",
														"typeString": "struct CSDUtilityPartial.PriceParams1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1125:54:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 52,
														"name": "positionType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1194:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1194:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "1378:160:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 76,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 74,
																				"name": "newStopLossPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "1400:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1420:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1400:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 84,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 79,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 77,
																							"name": "newStopLossPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 23,
																							"src": "1426:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"id": 78,
																							"name": "currentPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 33,
																							"src": "1446:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1426:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 83,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 80,
																							"name": "newStopLossPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 23,
																							"src": "1462:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 81,
																								"name": "price1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 47,
																								"src": "1481:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																									"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																								}
																							},
																							"id": 82,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "maxEntryPrice",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1661,
																							"src": "1481:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1462:39:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "1426:75:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 85,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1425:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1400:102:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420534c20666f722073686f7274",
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1504:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21139003bee35756ca1a780fe75d08b06f4b16ae7fb7085dfee718720c484d62",
																			"typeString": "literal_string \"Invalid SL for short\""
																		},
																		"value": "Invalid SL for short"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21139003bee35756ca1a780fe75d08b06f4b16ae7fb7085dfee718720c484d62",
																			"typeString": "literal_string \"Invalid SL for short\""
																		}
																	],
																	"id": 73,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1392:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1392:135:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "1392:135:0"
														}
													]
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "1190:348:0",
												"trueBody": {
													"id": 72,
													"nodeType": "Block",
													"src": "1213:159:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 58,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 56,
																				"name": "newStopLossPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 23,
																				"src": "1235:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 57,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1255:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1235:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 66,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 61,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 59,
																							"name": "newStopLossPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 23,
																							"src": "1261:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"id": 60,
																							"name": "currentPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 33,
																							"src": "1281:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1261:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 65,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 62,
																							"name": "newStopLossPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 23,
																							"src": "1297:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"expression": {
																								"id": 63,
																								"name": "price1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 47,
																								"src": "1316:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																									"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																								}
																							},
																							"id": 64,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "minEntryPrice",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1659,
																							"src": "1316:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1297:39:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "1261:75:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 67,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1260:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1235:102:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420534c20666f72206c6f6e67",
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1339:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c48fa6c172de326d7278ea0037c16d6817a51f7c3dd4c516f1793688760ec217",
																			"typeString": "literal_string \"Invalid SL for long\""
																		},
																		"value": "Invalid SL for long"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c48fa6c172de326d7278ea0037c16d6817a51f7c3dd4c516f1793688760ec217",
																			"typeString": "literal_string \"Invalid SL for long\""
																		}
																	],
																	"id": 55,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1227:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1227:134:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 71,
															"nodeType": "ExpressionStatement",
															"src": "1227:134:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 93,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1562:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 94,
															"name": "newStopLossPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1574:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 95,
																	"name": "exitParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "1592:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExitParams_$1690_storage_$",
																		"typeString": "mapping(uint256 => struct CSDUtilityPartial.ExitParams storage ref)"
																	}
																},
																"id": 97,
																"indexExpression": {
																	"id": 96,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1603:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1592:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExitParams_$1690_storage",
																	"typeString": "struct CSDUtilityPartial.ExitParams storage ref"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "takeProfitPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1687,
															"src": "1592:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 92,
														"name": "setExitParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "1548:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1548:83:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 36,
											"modifierName": {
												"id": 35,
												"name": "onlyDriver",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1043:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1043:10:0"
										}
									],
									"name": "_updateSL",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "833:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "newStopLossPrice",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "861:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "895:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "positionType",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "927:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 26,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "927:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "minPrice",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "955:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "maxPrice",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "981:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "currentPrice",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1007:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:210:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:0:0"
									},
									"scope": 467,
									"src": "805:833:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "1895:596:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "positionType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1913:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1929:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1913:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706f736974696f6e2074797065",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1932:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e62554a47ad890312d28dcd68824e1f5efea60122ac15db8824e00f7d2b9da7",
																"typeString": "literal_string \"Invalid position type\""
															},
															"value": "Invalid position type"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e62554a47ad890312d28dcd68824e1f5efea60122ac15db8824e00f7d2b9da7",
																"typeString": "literal_string \"Invalid position type\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1905:51:0"
											},
											{
												"assignments": [
													130
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"mutability": "mutable",
														"name": "price1",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "1966:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
															"typeString": "struct CSDUtilityPartial.PriceParams1"
														},
														"typeName": {
															"id": 129,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 128,
																"name": "PriceParams1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1668,
																"src": "1966:12:0"
															},
															"referencedDeclaration": 1668,
															"src": "1966:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																"typeString": "struct CSDUtilityPartial.PriceParams1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 134,
												"initialValue": {
													"baseExpression": {
														"id": 131,
														"name": "priceParams1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "1996:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams1_$1668_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1 storage ref)"
														}
													},
													"id": 133,
													"indexExpression": {
														"id": 132,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "2009:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1996:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceParams1_$1668_storage",
														"typeString": "struct CSDUtilityPartial.PriceParams1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1966:54:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 135,
														"name": "positionType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2035:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2051:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2035:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 173,
													"nodeType": "Block",
													"src": "2225:166:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 157,
																				"name": "newTakeProfitPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 106,
																				"src": "2247:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2269:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2247:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 167,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 162,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 160,
																							"name": "newTakeProfitPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 106,
																							"src": "2275:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"id": 161,
																							"name": "currentPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 116,
																							"src": "2297:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2275:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 163,
																							"name": "newTakeProfitPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 106,
																							"src": "2313:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"expression": {
																								"id": 164,
																								"name": "price1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 130,
																								"src": "2334:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																									"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																								}
																							},
																							"id": 165,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "minEntryPrice",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1659,
																							"src": "2334:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2313:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2275:79:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 168,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2274:81:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2247:108:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420545020666f722073686f7274",
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2357:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cdb0f09297dda77c2de5bedd1503ac369cc3a6fc2d2620b248e8315b12723d84",
																			"typeString": "literal_string \"Invalid TP for short\""
																		},
																		"value": "Invalid TP for short"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_cdb0f09297dda77c2de5bedd1503ac369cc3a6fc2d2620b248e8315b12723d84",
																			"typeString": "literal_string \"Invalid TP for short\""
																		}
																	],
																	"id": 156,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2239:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2239:141:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 172,
															"nodeType": "ExpressionStatement",
															"src": "2239:141:0"
														}
													]
												},
												"id": 174,
												"nodeType": "IfStatement",
												"src": "2031:360:0",
												"trueBody": {
													"id": 155,
													"nodeType": "Block",
													"src": "2054:165:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 139,
																				"name": "newTakeProfitPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 106,
																				"src": "2076:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2098:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2076:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 144,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 142,
																							"name": "newTakeProfitPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 106,
																							"src": "2104:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"id": 143,
																							"name": "currentPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 116,
																							"src": "2126:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2104:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 148,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 145,
																							"name": "newTakeProfitPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 106,
																							"src": "2142:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 146,
																								"name": "price1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 130,
																								"src": "2163:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																									"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																								}
																							},
																							"id": 147,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "maxEntryPrice",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1661,
																							"src": "2163:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2142:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2104:79:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 150,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2103:81:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2076:108:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420545020666f72206c6f6e67",
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2186:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1d1fad74fe0dc897cab4ec97d57dfae151c794472a3bf97f41801115ba5132a0",
																			"typeString": "literal_string \"Invalid TP for long\""
																		},
																		"value": "Invalid TP for long"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1d1fad74fe0dc897cab4ec97d57dfae151c794472a3bf97f41801115ba5132a0",
																			"typeString": "literal_string \"Invalid TP for long\""
																		}
																	],
																	"id": 138,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2068:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2068:140:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 154,
															"nodeType": "ExpressionStatement",
															"src": "2068:140:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 177,
																	"name": "exitParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "2427:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExitParams_$1690_storage_$",
																		"typeString": "mapping(uint256 => struct CSDUtilityPartial.ExitParams storage ref)"
																	}
																},
																"id": 179,
																"indexExpression": {
																	"id": 178,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "2438:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2427:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExitParams_$1690_storage",
																	"typeString": "struct CSDUtilityPartial.ExitParams storage ref"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stopLossPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1685,
															"src": "2427:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 181,
															"name": "newTakeProfitPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2465:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 175,
														"name": "setExitParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "2401:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "2401:83:0"
											}
										]
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 119,
											"modifierName": {
												"id": 118,
												"name": "onlyDriver",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1884:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1884:10:0"
										}
									],
									"name": "_updateTP",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1672:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "newTakeProfitPrice",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1700:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1736:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "positionType",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1768:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 109,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1768:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "minPrice",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1796:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "maxPrice",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1822:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "currentPrice",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1848:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:212:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1895:0:0"
									},
									"scope": 467,
									"src": "1644:847:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2746:489:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 202,
														"name": "positionType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2760:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2776:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2760:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 252,
													"nodeType": "Block",
													"src": "3007:222:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 229,
																						"name": "stopLossPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 193,
																						"src": "3029:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 230,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3046:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "3029:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 234,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 232,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 191,
																						"src": "3051:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 233,
																						"name": "stopLossPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 193,
																						"src": "3067:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3051:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "3029:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 236,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3028:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 237,
																						"name": "takeProfitPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 195,
																						"src": "3105:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3124:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "3105:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 240,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 191,
																						"src": "3129:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 241,
																						"name": "takeProfitPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 195,
																						"src": "3145:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3129:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "3105:55:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 244,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3104:57:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3028:133:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 246,
																				"name": "currentPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "3185:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 247,
																				"name": "liquidationPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 197,
																				"src": "3201:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3185:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 249,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3184:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3028:190:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 201,
															"id": 251,
															"nodeType": "Return",
															"src": "3021:197:0"
														}
													]
												},
												"id": 253,
												"nodeType": "IfStatement",
												"src": "2756:473:0",
												"trueBody": {
													"id": 228,
													"nodeType": "Block",
													"src": "2779:222:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 207,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 205,
																						"name": "stopLossPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 193,
																						"src": "2801:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 206,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2818:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "2801:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 210,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 208,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 191,
																						"src": "2823:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 209,
																						"name": "stopLossPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 193,
																						"src": "2839:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2823:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "2801:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 212,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2800:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 215,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 213,
																						"name": "takeProfitPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 195,
																						"src": "2877:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 214,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2896:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "2877:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 216,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 191,
																						"src": "2901:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 217,
																						"name": "takeProfitPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 195,
																						"src": "2917:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2901:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "2877:55:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 220,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2876:57:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2800:133:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 222,
																				"name": "currentPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "2957:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 223,
																				"name": "liquidationPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 197,
																				"src": "2973:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2957:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 225,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2956:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2800:190:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 201,
															"id": 227,
															"nodeType": "Return",
															"src": "2793:197:0"
														}
													]
												}
											}
										]
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_shouldClosePosition",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2536:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "positionType",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2564:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 188,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2564:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "currentPrice",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2592:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "stopLossPrice",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2622:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "takeProfitPrice",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2653:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "liquidationPrice",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2686:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:190:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2740:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:6:0"
									},
									"scope": 467,
									"src": "2497:738:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "3332:1805:0",
										"statements": [
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "gasLimit",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "3342:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 266,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967289,
														"src": "3361:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3361:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3342:28:0"
											},
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "currentPrice",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "3380:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "3437:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 272,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "3414:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 271,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "3403:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3403:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "prices",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "3403:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3403:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3380:72:0"
											},
											{
												"assignments": [
													279
												],
												"declarations": [
													{
														"constant": false,
														"id": 279,
														"mutability": "mutable",
														"name": "processed",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "3462:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3462:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"hexValue": "30",
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3462:21:0"
											},
											{
												"body": {
													"id": 429,
													"nodeType": "Block",
													"src": "3567:1564:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 296,
																	"name": "gasLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "3585:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3530303030",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3596:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50000_by_1",
																		"typeString": "int_const 50000"
																	},
																	"value": "50000"
																},
																"src": "3585:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 300,
															"nodeType": "IfStatement",
															"src": "3581:27:0",
															"trueBody": {
																"id": 299,
																"nodeType": "Break",
																"src": "3603:5:0"
															}
														},
														{
															"assignments": [
																302
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 302,
																	"mutability": "mutable",
																	"name": "positionId",
																	"nodeType": "VariableDeclaration",
																	"scope": 429,
																	"src": "3646:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 301,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3646:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 306,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 303,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "3667:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3671:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3667:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3646:26:0"
														},
														{
															"assignments": [
																309
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 309,
																	"mutability": "mutable",
																	"name": "core1",
																	"nodeType": "VariableDeclaration",
																	"scope": 429,
																	"src": "3714:27:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																		"typeString": "struct CSDUtilityPartial.PositionCore1"
																	},
																	"typeName": {
																		"id": 308,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 307,
																			"name": "PositionCore1",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1652,
																			"src": "3714:13:0"
																		},
																		"referencedDeclaration": 1652,
																		"src": "3714:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																			"typeString": "struct CSDUtilityPartial.PositionCore1"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 313,
															"initialValue": {
																"baseExpression": {
																	"id": 310,
																	"name": "positionCore1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1700,
																	"src": "3744:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore1_$1652_storage_$",
																		"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1 storage ref)"
																	}
																},
																"id": 312,
																"indexExpression": {
																	"id": 311,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3758:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3744:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionCore1_$1652_storage",
																	"typeString": "struct CSDUtilityPartial.PositionCore1 storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3714:55:0"
														},
														{
															"assignments": [
																316
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 316,
																	"mutability": "mutable",
																	"name": "core2",
																	"nodeType": "VariableDeclaration",
																	"scope": 429,
																	"src": "3783:27:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionCore2_$1657_storage_ptr",
																		"typeString": "struct CSDUtilityPartial.PositionCore2"
																	},
																	"typeName": {
																		"id": 315,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 314,
																			"name": "PositionCore2",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1657,
																			"src": "3783:13:0"
																		},
																		"referencedDeclaration": 1657,
																		"src": "3783:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PositionCore2_$1657_storage_ptr",
																			"typeString": "struct CSDUtilityPartial.PositionCore2"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 320,
															"initialValue": {
																"baseExpression": {
																	"id": 317,
																	"name": "positionCore2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "3813:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore2_$1657_storage_$",
																		"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore2 storage ref)"
																	}
																},
																"id": 319,
																"indexExpression": {
																	"id": 318,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3827:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3813:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionCore2_$1657_storage",
																	"typeString": "struct CSDUtilityPartial.PositionCore2 storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3783:55:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 321,
																			"name": "core1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "3856:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																				"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
																			}
																		},
																		"id": 322,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "listingAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1647,
																		"src": "3856:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 323,
																		"name": "listingAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "3880:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3856:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 325,
																			"name": "core2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 316,
																			"src": "3898:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PositionCore2_$1657_storage_ptr",
																				"typeString": "struct CSDUtilityPartial.PositionCore2 storage pointer"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "status2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1656,
																		"src": "3898:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3915:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3898:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3856:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 331,
															"nodeType": "IfStatement",
															"src": "3852:74:0",
															"trueBody": {
																"id": 330,
																"nodeType": "Continue",
																"src": "3918:8:0"
															}
														},
														{
															"assignments": [
																334
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 334,
																	"mutability": "mutable",
																	"name": "price1",
																	"nodeType": "VariableDeclaration",
																	"scope": 429,
																	"src": "3941:27:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																		"typeString": "struct CSDUtilityPartial.PriceParams1"
																	},
																	"typeName": {
																		"id": 333,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 332,
																			"name": "PriceParams1",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1668,
																			"src": "3941:12:0"
																		},
																		"referencedDeclaration": 1668,
																		"src": "3941:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																			"typeString": "struct CSDUtilityPartial.PriceParams1"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 338,
															"initialValue": {
																"baseExpression": {
																	"id": 335,
																	"name": "priceParams1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "3971:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams1_$1668_storage_$",
																		"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1 storage ref)"
																	}
																},
																"id": 337,
																"indexExpression": {
																	"id": 336,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "3984:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3971:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceParams1_$1668_storage",
																	"typeString": "struct CSDUtilityPartial.PriceParams1 storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3941:54:0"
														},
														{
															"assignments": [
																341
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 341,
																	"mutability": "mutable",
																	"name": "price2",
																	"nodeType": "VariableDeclaration",
																	"scope": 429,
																	"src": "4009:27:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PriceParams2_$1671_storage_ptr",
																		"typeString": "struct CSDUtilityPartial.PriceParams2"
																	},
																	"typeName": {
																		"id": 340,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 339,
																			"name": "PriceParams2",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1671,
																			"src": "4009:12:0"
																		},
																		"referencedDeclaration": 1671,
																		"src": "4009:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PriceParams2_$1671_storage_ptr",
																			"typeString": "struct CSDUtilityPartial.PriceParams2"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 345,
															"initialValue": {
																"baseExpression": {
																	"id": 342,
																	"name": "priceParams2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "4039:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams2_$1671_storage_$",
																		"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams2 storage ref)"
																	}
																},
																"id": 344,
																"indexExpression": {
																	"id": 343,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "4052:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4039:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceParams2_$1671_storage",
																	"typeString": "struct CSDUtilityPartial.PriceParams2 storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4009:54:0"
														},
														{
															"assignments": [
																348
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 348,
																	"mutability": "mutable",
																	"name": "exit",
																	"nodeType": "VariableDeclaration",
																	"scope": 429,
																	"src": "4077:23:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
																		"typeString": "struct CSDUtilityPartial.ExitParams"
																	},
																	"typeName": {
																		"id": 347,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 346,
																			"name": "ExitParams",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1690,
																			"src": "4077:10:0"
																		},
																		"referencedDeclaration": 1690,
																		"src": "4077:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
																			"typeString": "struct CSDUtilityPartial.ExitParams"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 352,
															"initialValue": {
																"baseExpression": {
																	"id": 349,
																	"name": "exitParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "4103:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExitParams_$1690_storage_$",
																		"typeString": "mapping(uint256 => struct CSDUtilityPartial.ExitParams storage ref)"
																	}
																},
																"id": 351,
																"indexExpression": {
																	"id": 350,
																	"name": "positionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "4114:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4103:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExitParams_$1690_storage",
																	"typeString": "struct CSDUtilityPartial.ExitParams storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4077:48:0"
														},
														{
															"condition": {
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4193:14:0",
																"subExpression": {
																	"expression": {
																		"id": 353,
																		"name": "core2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "4194:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PositionCore2_$1657_storage_ptr",
																			"typeString": "struct CSDUtilityPartial.PositionCore2 storage pointer"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "status1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1654,
																	"src": "4194:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 393,
															"nodeType": "IfStatement",
															"src": "4189:356:0",
															"trueBody": {
																"id": 392,
																"nodeType": "Block",
																"src": "4209:336:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 356,
																						"name": "price1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 334,
																						"src": "4231:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																							"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																						}
																					},
																					"id": 357,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "priceAtEntry",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1665,
																					"src": "4231:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"expression": {
																						"id": 358,
																						"name": "price1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 334,
																						"src": "4253:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																							"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																						}
																					},
																					"id": 359,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "minEntryPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1659,
																					"src": "4253:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4231:42:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 361,
																					"name": "currentPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "4277:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"expression": {
																						"id": 362,
																						"name": "price1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 334,
																						"src": "4293:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																							"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																						}
																					},
																					"id": 363,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "minEntryPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1659,
																					"src": "4293:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4277:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "4231:82:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 377,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 373,
																							"name": "price1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 334,
																							"src": "4386:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																								"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																							}
																						},
																						"id": 374,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "priceAtEntry",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1665,
																						"src": "4386:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 375,
																							"name": "price1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 334,
																							"src": "4408:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																								"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																							}
																						},
																						"id": 376,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "maxEntryPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1661,
																						"src": "4408:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4386:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 378,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "4432:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 379,
																							"name": "price1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 334,
																							"src": "4448:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																								"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																							}
																						},
																						"id": 380,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "maxEntryPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1661,
																						"src": "4448:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4432:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "4386:82:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 390,
																			"nodeType": "IfStatement",
																			"src": "4382:149:0",
																			"trueBody": {
																				"id": 389,
																				"nodeType": "Block",
																				"src": "4470:61:0",
																				"statements": [
																					{
																						"expression": {
																							"id": 387,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"id": 383,
																									"name": "core2",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 316,
																									"src": "4492:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PositionCore2_$1657_storage_ptr",
																										"typeString": "struct CSDUtilityPartial.PositionCore2 storage pointer"
																									}
																								},
																								"id": 385,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberName": "status1",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1654,
																								"src": "4492:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "74727565",
																								"id": 386,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "bool",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4508:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								"value": "true"
																							},
																							"src": "4492:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"id": 388,
																						"nodeType": "ExpressionStatement",
																						"src": "4492:20:0"
																					}
																				]
																			}
																		},
																		"id": 391,
																		"nodeType": "IfStatement",
																		"src": "4227:304:0",
																		"trueBody": {
																			"id": 372,
																			"nodeType": "Block",
																			"src": "4315:61:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 370,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 366,
																								"name": "core2",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 316,
																								"src": "4337:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PositionCore2_$1657_storage_ptr",
																									"typeString": "struct CSDUtilityPartial.PositionCore2 storage pointer"
																								}
																							},
																							"id": 368,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "status1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1654,
																							"src": "4337:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 369,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4353:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "4337:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 371,
																					"nodeType": "ExpressionStatement",
																					"src": "4337:20:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"expression": {
																	"id": 394,
																	"name": "core2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "4602:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionCore2_$1657_storage_ptr",
																		"typeString": "struct CSDUtilityPartial.PositionCore2 storage pointer"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "status1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1654,
																"src": "4602:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 420,
															"nodeType": "IfStatement",
															"src": "4598:463:0",
															"trueBody": {
																"id": 419,
																"nodeType": "Block",
																"src": "4617:444:0",
																"statements": [
																	{
																		"assignments": [
																			397
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 397,
																				"mutability": "mutable",
																				"name": "shouldClose",
																				"nodeType": "VariableDeclaration",
																				"scope": 419,
																				"src": "4635:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 396,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "4635:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 410,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 399,
																					"name": "positionId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "4696:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 400,
																						"name": "core1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 309,
																						"src": "4728:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																							"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
																						}
																					},
																					"id": 401,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "positionType",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1651,
																					"src": "4728:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				{
																					"id": 402,
																					"name": "currentPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "4768:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 403,
																						"name": "exit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 348,
																						"src": "4802:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
																							"typeString": "struct CSDUtilityPartial.ExitParams storage pointer"
																						}
																					},
																					"id": 404,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stopLossPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1685,
																					"src": "4802:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 405,
																						"name": "exit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 348,
																						"src": "4842:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
																							"typeString": "struct CSDUtilityPartial.ExitParams storage pointer"
																						}
																					},
																					"id": 406,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "takeProfitPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1687,
																					"src": "4842:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 407,
																						"name": "price2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 341,
																						"src": "4884:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PriceParams2_$1671_storage_ptr",
																							"typeString": "struct CSDUtilityPartial.PriceParams2 storage pointer"
																						}
																					},
																					"id": 408,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidationPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1670,
																					"src": "4884:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 398,
																				"name": "_shouldClosePosition",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 255,
																				"src": "4654:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (uint256,uint8,uint256,uint256,uint256,uint256) view returns (bool)"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4654:271:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4635:290:0"
																	},
																	{
																		"condition": {
																			"id": 411,
																			"name": "shouldClose",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "4947:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 418,
																		"nodeType": "IfStatement",
																		"src": "4943:104:0",
																		"trueBody": {
																			"id": 417,
																			"nodeType": "Block",
																			"src": "4960:87:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 413,
																								"name": "positionId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 302,
																								"src": "5001:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 414,
																								"name": "listingAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 257,
																								"src": "5013:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 412,
																							"name": "executeCloseAction",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 466,
																							"src": "4982:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
																								"typeString": "function (uint256,address)"
																							}
																						},
																						"id": 415,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4982:46:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 416,
																					"nodeType": "ExpressionStatement",
																					"src": "4982:46:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5075:11:0",
																"subExpression": {
																	"id": 421,
																	"name": "processed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "5075:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 423,
															"nodeType": "ExpressionStatement",
															"src": "5075:11:0"
														},
														{
															"expression": {
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 424,
																	"name": "gasLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5100:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 425,
																		"name": "gasleft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967289,
																		"src": "5111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5111:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5100:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 428,
															"nodeType": "ExpressionStatement",
															"src": "5100:20:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 286,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "3514:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 287,
															"name": "positionCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "3518:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3514:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 289,
															"name": "processed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "3535:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 290,
															"name": "maxIterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3547:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3535:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3514:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"initializationExpression": {
													"assignments": [
														283
													],
													"declarations": [
														{
															"constant": false,
															"id": 283,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 430,
															"src": "3499:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 282,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3499:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 285,
													"initialValue": {
														"hexValue": "30",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3499:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3562:3:0",
														"subExpression": {
															"id": 293,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "3562:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 295,
													"nodeType": "ExpressionStatement",
													"src": "3562:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3494:1637:0"
											}
										]
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 262,
											"modifierName": {
												"id": 261,
												"name": "onlyDriver",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "3321:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3321:10:0"
										}
									],
									"name": "forceExecution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3265:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "maxIterations",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3289:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:47:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3332:0:0"
									},
									"scope": 467,
									"src": "3241:1896:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "5235:249:0",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "core1",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "5245:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
															"typeString": "struct CSDUtilityPartial.PositionCore1"
														},
														"typeName": {
															"id": 442,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 441,
																"name": "PositionCore1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1652,
																"src": "5245:13:0"
															},
															"referencedDeclaration": 1652,
															"src": "5245:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																"typeString": "struct CSDUtilityPartial.PositionCore1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"baseExpression": {
														"id": 444,
														"name": "positionCore1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "5275:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore1_$1652_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1 storage ref)"
														}
													},
													"id": 446,
													"indexExpression": {
														"id": 445,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "5289:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5275:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PositionCore1_$1652_storage",
														"typeString": "struct CSDUtilityPartial.PositionCore1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5245:55:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 448,
															"name": "core1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "5314:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "positionType",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1651,
														"src": "5314:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5336:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5314:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 463,
													"nodeType": "Block",
													"src": "5411:67:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 459,
																		"name": "positionId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "5440:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 460,
																		"name": "listingAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "5452:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 458,
																	"name": "prepCloseShort",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "5425:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (uint256,address) returns (uint256)"
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5425:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5425:42:0"
														}
													]
												},
												"id": 464,
												"nodeType": "IfStatement",
												"src": "5310:168:0",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "5339:66:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 453,
																		"name": "positionId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "5367:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 454,
																		"name": "listingAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "5379:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 452,
																	"name": "prepCloseLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "5353:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (uint256,address) returns (uint256)"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5353:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 456,
															"nodeType": "ExpressionStatement",
															"src": "5353:41:0"
														}
													]
												}
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 439,
											"modifierName": {
												"id": 438,
												"name": "onlyDriver",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "5224:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:10:0"
										}
									],
									"name": "executeCloseAction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5171:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "5191:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5170:44:0"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5235:0:0"
									},
									"scope": 467,
									"src": "5143:341:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 468,
							"src": "641:4845:0"
						}
					],
					"src": "581:4905:0"
				},
				"id": 0
			},
			"ShockSpace/driverUtils/CSDPositionPartial.sol": {
				"ast": {
					"absolutePath": "ShockSpace/driverUtils/CSDPositionPartial.sol",
					"exportedSymbols": {
						"Address": [
							2213
						],
						"CSDPositionPartial": [
							1505
						],
						"CSDUtilityPartial": [
							1883
						],
						"Context": [
							2235
						],
						"IERC20": [
							2293
						],
						"IERC20Permit": [
							2329
						],
						"ISSAgent": [
							1632
						],
						"ISSLiquidityTemplate": [
							1622
						],
						"ISSListing": [
							1590
						],
						"Ownable": [
							2442
						],
						"ReentrancyGuard": [
							2507
						],
						"SafeERC20": [
							2883
						]
					},
					"id": 1506,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 469,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "2429:22:1"
						},
						{
							"absolutePath": "ShockSpace/driverUtils/CSDUtilityPartial.sol",
							"file": "./CSDUtilityPartial.sol",
							"id": 470,
							"nodeType": "ImportDirective",
							"scope": 1506,
							"sourceUnit": 1884,
							"src": "2453:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 471,
										"name": "CSDUtilityPartial",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1883,
										"src": "2519:17:1"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "2519:17:1"
								}
							],
							"contractDependencies": [
								1883
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1505,
							"linearizedBaseContracts": [
								1505,
								1883
							],
							"name": "CSDPositionPartial",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CSDPositionPartial.PrepPosition",
									"id": 483,
									"members": [
										{
											"constant": false,
											"id": 474,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 483,
											"src": "2573:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 473,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2573:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 476,
											"mutability": "mutable",
											"name": "taxedMargin",
											"nodeType": "VariableDeclaration",
											"scope": 483,
											"src": "2594:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 475,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 478,
											"mutability": "mutable",
											"name": "leverageAmount",
											"nodeType": "VariableDeclaration",
											"scope": 483,
											"src": "2623:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 477,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2623:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 480,
											"mutability": "mutable",
											"name": "initialLoan",
											"nodeType": "VariableDeclaration",
											"scope": 483,
											"src": "2655:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 479,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2655:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 482,
											"mutability": "mutable",
											"name": "liquidationPrice",
											"nodeType": "VariableDeclaration",
											"scope": 483,
											"src": "2684:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 481,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2684:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PrepPosition",
									"nodeType": "StructDefinition",
									"scope": 1505,
									"src": "2543:172:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2812:150:1",
										"statements": [
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "feePercent",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "2822:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 492,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 496,
																"name": "leverage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "2851:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2843:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 494,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2843:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2843:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2863:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2843:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2822:42:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 501,
																			"name": "initialMargin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "2882:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 502,
																			"name": "feePercent",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 493,
																			"src": "2898:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2882:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 504,
																		"name": "DECIMAL_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "2911:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2882:46:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 506,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2881:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2932:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2881:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 509,
														"name": "DECIMAL_PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "2938:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2881:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 511,
												"nodeType": "Return",
												"src": "2874:81:1"
											}
										]
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "initialMargin",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2741:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "leverage",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2764:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 486,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2764:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:39:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2803:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2802:9:1"
									},
									"scope": 1505,
									"src": "2721:241:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "3118:378:1",
										"statements": [
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "liquidityAddr",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "3128:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 524,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3128:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"arguments": [
														{
															"id": 530,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "3200:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 527,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "3163:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 526,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "3152:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3152:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityAddressView",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1533,
														"src": "3152:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
															"typeString": "function (address) view external returns (address)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3152:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3128:87:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "liquidityAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "3233:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3258:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3250:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 535,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3250:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3250:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3233:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c69717569646974792061646472657373",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3262:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53deed9321a515608dd9891da907f8c3d19397c5c7070838858618ddc8d4ab38",
																"typeString": "literal_string \"Invalid liquidity address\""
															},
															"value": "Invalid liquidity address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53deed9321a515608dd9891da907f8c3d19397c5c7070838858618ddc8d4ab38",
																"typeString": "literal_string \"Invalid liquidity address\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3225:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "3225:65:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "3304:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3310:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3304:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "3300:190:1",
												"trueBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "3313:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 547,
																		"name": "liquidityAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "3342:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 548,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "3357:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 549,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3364:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 546,
																	"name": "transferMargin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3327:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3327:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "3327:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 558,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3434:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CSDPositionPartial_$1505",
																					"typeString": "contract CSDPositionPartial"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CSDPositionPartial_$1505",
																					"typeString": "contract CSDPositionPartial"
																				}
																			],
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3426:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 556,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3426:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3426:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 560,
																				"name": "positionType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 521,
																				"src": "3441:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3457:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3441:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "66616c7365",
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3468:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3441:32:1",
																		"trueExpression": {
																			"hexValue": "74727565",
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3461:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"id": 566,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3475:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 553,
																				"name": "liquidityAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "3403:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 552,
																			"name": "ISSLiquidityTemplate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "3382:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISSLiquidityTemplate_$1622_$",
																				"typeString": "type(contract ISSLiquidityTemplate)"
																			}
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3382:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSLiquidityTemplate_$1622",
																			"typeString": "contract ISSLiquidityTemplate"
																		}
																	},
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "addFees",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1610,
																	"src": "3382:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (address,bool,uint256) external"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3382:97:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 568,
															"nodeType": "ExpressionStatement",
															"src": "3382:97:1"
														}
													]
												}
											}
										]
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferLiquidityFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "3008:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "3040:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3040:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "3063:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "positionType",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "3084:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 520,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3084:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2998:110:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3118:0:1"
									},
									"scope": 1505,
									"src": "2968:528:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "3841:816:1",
										"statements": [
											{
												"assignments": [
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "totalMargin",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "3851:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3851:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 591,
														"name": "taxedMargin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "3873:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 592,
														"name": "excessMargin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "3887:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3873:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3851:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "3931:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "3947:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "3954:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 599,
															"name": "positionType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "3959:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 595,
														"name": "_transferLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "3909:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (address,address,uint256,uint8)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3909:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "3909:63:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 602,
														"name": "totalMargin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "3986:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4000:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3986:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 655,
												"nodeType": "IfStatement",
												"src": "3982:493:1",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "4003:472:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 606,
																		"name": "listingAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "4032:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 607,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "4048:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 608,
																		"name": "totalMargin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4055:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 605,
																	"name": "transferMargin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "4017:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4017:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 610,
															"nodeType": "ExpressionStatement",
															"src": "4017:50:1"
														},
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "updates",
																	"nodeType": "VariableDeclaration",
																	"scope": 654,
																	"src": "4081:38:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct ISSListing.UpdateType[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 614,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 613,
																				"name": "ISSListing.UpdateType",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1580,
																				"src": "4081:21:1"
																			},
																			"referencedDeclaration": 1580,
																			"src": "4081:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UpdateType_$1580_storage_ptr",
																				"typeString": "struct ISSListing.UpdateType"
																			}
																		},
																		"id": 615,
																		"nodeType": "ArrayTypeName",
																		"src": "4081:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_storage_$dyn_storage_ptr",
																			"typeString": "struct ISSListing.UpdateType[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 623,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4150:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "4122:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1580_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct ISSListing.UpdateType memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 618,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 617,
																				"name": "ISSListing.UpdateType",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1580,
																				"src": "4126:21:1"
																			},
																			"referencedDeclaration": 1580,
																			"src": "4126:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UpdateType_$1580_storage_ptr",
																				"typeString": "struct ISSListing.UpdateType"
																			}
																		},
																		"id": 619,
																		"nodeType": "ArrayTypeName",
																		"src": "4126:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_storage_$dyn_storage_ptr",
																			"typeString": "struct ISSListing.UpdateType[]"
																		}
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4122:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListing.UpdateType memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4081:71:1"
														},
														{
															"expression": {
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 624,
																		"name": "updates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "4166:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListing.UpdateType memory[] memory"
																		}
																	},
																	"id": 626,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4174:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4166:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UpdateType_$1580_memory_ptr",
																		"typeString": "struct ISSListing.UpdateType memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4231:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		{
																			"id": 630,
																			"name": "positionType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "4257:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"id": 631,
																			"name": "totalMargin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "4294:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4337:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4329:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 632,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4329:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4329:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4376:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4368:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 636,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4368:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4368:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 627,
																			"name": "ISSListing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "4179:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																				"typeString": "type(contract ISSListing)"
																			}
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "UpdateType",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1580,
																		"src": "4179:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_UpdateType_$1580_storage_ptr_$",
																			"typeString": "type(struct ISSListing.UpdateType storage pointer)"
																		}
																	},
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [
																		"updateType",
																		"index",
																		"value",
																		"addr",
																		"recipient"
																	],
																	"nodeType": "FunctionCall",
																	"src": "4179:214:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UpdateType_$1580_memory_ptr",
																		"typeString": "struct ISSListing.UpdateType memory"
																	}
																},
																"src": "4166:227:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1580_memory_ptr",
																	"typeString": "struct ISSListing.UpdateType memory"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "4166:227:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 649,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4449:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CSDPositionPartial_$1505",
																					"typeString": "contract CSDPositionPartial"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CSDPositionPartial_$1505",
																					"typeString": "contract CSDPositionPartial"
																				}
																			],
																			"id": 648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4441:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 647,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4441:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4441:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 651,
																		"name": "updates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "4456:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListing.UpdateType memory[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListing.UpdateType memory[] memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 644,
																				"name": "listingAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 576,
																				"src": "4418:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 643,
																			"name": "ISSListing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "4407:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																				"typeString": "type(contract ISSListing)"
																			}
																		},
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4407:26:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListing_$1590",
																			"typeString": "contract ISSListing"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1589,
																	"src": "4407:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_UpdateType_$1580_memory_ptr_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,struct ISSListing.UpdateType memory[] memory) external"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4407:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 653,
															"nodeType": "ExpressionStatement",
															"src": "4407:57:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 656,
																"name": "makerTokenMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "4484:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 659,
															"indexExpression": {
																"id": 657,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "4501:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4484:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 660,
														"indexExpression": {
															"id": 658,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4508:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4484:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 661,
														"name": "totalMargin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4518:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4484:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "4484:45:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 664,
																"name": "makerTokenMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "4543:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 666,
															"indexExpression": {
																"id": 665,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "4560:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4543:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 668,
														"indexExpression": {
															"id": 667,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4567:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4543:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 669,
														"name": "totalMargin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4577:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4543:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "4539:112:1",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "4590:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 675,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "4634:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 671,
																			"name": "makerMarginTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "4604:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 673,
																		"indexExpression": {
																			"id": 672,
																			"name": "maker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "4622:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4604:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4604:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4604:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 677,
															"nodeType": "ExpressionStatement",
															"src": "4604:36:1"
														}
													]
												}
											}
										]
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferMarginToListing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3649:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3672:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3704:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "taxedMargin",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3727:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3727:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "excessMargin",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3756:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3786:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3786:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "positionType",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3807:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 585,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3807:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3639:192:1"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3841:0:1"
									},
									"scope": 1505,
									"src": "3606:1051:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "4813:465:1",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "margin1",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "4823:29:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
															"typeString": "struct CSDUtilityPartial.MarginParams1"
														},
														"typeName": {
															"id": 693,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 692,
																"name": "MarginParams1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1680,
																"src": "4823:13:1"
															},
															"referencedDeclaration": 1680,
															"src": "4823:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																"typeString": "struct CSDUtilityPartial.MarginParams1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"baseExpression": {
														"id": 695,
														"name": "marginParams1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "4855:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams1_$1680_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1 storage ref)"
														}
													},
													"id": 697,
													"indexExpression": {
														"id": 696,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "4869:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4855:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarginParams1_$1680_storage",
														"typeString": "struct CSDUtilityPartial.MarginParams1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4823:57:1"
											},
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "margin2",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "4890:29:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarginParams2_$1683_storage_ptr",
															"typeString": "struct CSDUtilityPartial.MarginParams2"
														},
														"typeName": {
															"id": 700,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 699,
																"name": "MarginParams2",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1683,
																"src": "4890:13:1"
															},
															"referencedDeclaration": 1683,
															"src": "4890:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarginParams2_$1683_storage_ptr",
																"typeString": "struct CSDUtilityPartial.MarginParams2"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 705,
												"initialValue": {
													"baseExpression": {
														"id": 702,
														"name": "margin2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "4922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams2_$1683_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams2 storage ref)"
														}
													},
													"id": 704,
													"indexExpression": {
														"id": 703,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "4930:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4922:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarginParams2_$1683_storage",
														"typeString": "struct CSDUtilityPartial.MarginParams2 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4890:51:1"
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "price1",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "4951:27:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
															"typeString": "struct CSDUtilityPartial.PriceParams1"
														},
														"typeName": {
															"id": 707,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 706,
																"name": "PriceParams1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1668,
																"src": "4951:12:1"
															},
															"referencedDeclaration": 1668,
															"src": "4951:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																"typeString": "struct CSDUtilityPartial.PriceParams1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"baseExpression": {
														"id": 709,
														"name": "priceParams1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "4981:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams1_$1668_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1 storage ref)"
														}
													},
													"id": 711,
													"indexExpression": {
														"id": 710,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "4994:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4981:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceParams1_$1668_storage",
														"typeString": "struct CSDUtilityPartial.PriceParams1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4951:54:1"
											},
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "currentPrice",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "5015:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5015:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"arguments": [
														{
															"id": 719,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "5072:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 716,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "5049:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 715,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "5038:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5038:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "prices",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "5038:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5038:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5015:72:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 722,
																				"name": "margin1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 694,
																				"src": "5105:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																					"typeString": "struct CSDUtilityPartial.MarginParams1 storage pointer"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "taxedMargin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1675,
																			"src": "5105:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 724,
																					"name": "makerTokenMargin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1741,
																					"src": "5127:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 729,
																				"indexExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 725,
																							"name": "positionCore1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1700,
																							"src": "5144:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore1_$1652_storage_$",
																								"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1 storage ref)"
																							}
																						},
																						"id": 727,
																						"indexExpression": {
																							"id": 726,
																							"name": "positionId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 683,
																							"src": "5158:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5144:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PositionCore1_$1652_storage",
																							"typeString": "struct CSDUtilityPartial.PositionCore1 storage ref"
																						}
																					},
																					"id": 728,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "makerAddress",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1649,
																					"src": "5144:38:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5127:56:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 731,
																			"indexExpression": {
																				"id": 730,
																				"name": "tokenB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 687,
																				"src": "5184:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5127:64:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5105:86:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 733,
																				"name": "price1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "5194:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																					"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																				}
																			},
																			"id": 734,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "leverage",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1667,
																			"src": "5194:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"id": 735,
																				"name": "margin1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 694,
																				"src": "5212:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																					"typeString": "struct CSDUtilityPartial.MarginParams1 storage pointer"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "initialMargin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1673,
																			"src": "5212:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5194:39:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5105:128:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5104:130:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 740,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "5237:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5104:145:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 742,
															"name": "margin2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "5252:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarginParams2_$1683_storage_ptr",
																"typeString": "struct CSDUtilityPartial.MarginParams2 storage pointer"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialLoan",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1682,
														"src": "5252:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5104:167:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 691,
												"id": 745,
												"nodeType": "Return",
												"src": "5097:174:1"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computePayoutLong",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "4700:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4700:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "4728:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "4760:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4690:90:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "4804:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4803:9:1"
									},
									"scope": 1505,
									"src": "4663:615:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "5435:422:1",
										"statements": [
											{
												"assignments": [
													760
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "margin1",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "5445:29:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
															"typeString": "struct CSDUtilityPartial.MarginParams1"
														},
														"typeName": {
															"id": 759,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 758,
																"name": "MarginParams1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1680,
																"src": "5445:13:1"
															},
															"referencedDeclaration": 1680,
															"src": "5445:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																"typeString": "struct CSDUtilityPartial.MarginParams1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"baseExpression": {
														"id": 761,
														"name": "marginParams1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "5477:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams1_$1680_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1 storage ref)"
														}
													},
													"id": 763,
													"indexExpression": {
														"id": 762,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "5491:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5477:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarginParams1_$1680_storage",
														"typeString": "struct CSDUtilityPartial.MarginParams1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:57:1"
											},
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "price1",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "5512:27:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
															"typeString": "struct CSDUtilityPartial.PriceParams1"
														},
														"typeName": {
															"id": 766,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 765,
																"name": "PriceParams1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1668,
																"src": "5512:12:1"
															},
															"referencedDeclaration": 1668,
															"src": "5512:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																"typeString": "struct CSDUtilityPartial.PriceParams1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 771,
												"initialValue": {
													"baseExpression": {
														"id": 768,
														"name": "priceParams1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "5542:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams1_$1668_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1 storage ref)"
														}
													},
													"id": 770,
													"indexExpression": {
														"id": 769,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "5555:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5542:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceParams1_$1668_storage",
														"typeString": "struct CSDUtilityPartial.PriceParams1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5512:54:1"
											},
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "currentPrice",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "5576:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5576:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"arguments": [
														{
															"id": 778,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "5633:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 775,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "5610:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 774,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "5599:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5599:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "prices",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "5599:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5599:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5576:72:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 781,
																				"name": "price1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "5666:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																					"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																				}
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "minEntryPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1659,
																			"src": "5666:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 783,
																			"name": "currentPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 773,
																			"src": "5689:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5666:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 785,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5665:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 786,
																	"name": "margin1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "5705:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																		"typeString": "struct CSDUtilityPartial.MarginParams1 storage pointer"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "initialMargin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1673,
																"src": "5705:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5665:61:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 789,
																"name": "price1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "5729:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.PriceParams1 storage pointer"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "leverage",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1667,
															"src": "5729:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "5665:79:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 792,
																			"name": "margin1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 760,
																			"src": "5748:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																				"typeString": "struct CSDUtilityPartial.MarginParams1 storage pointer"
																			}
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "taxedMargin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1675,
																		"src": "5748:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 794,
																				"name": "makerTokenMargin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1741,
																				"src": "5770:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 799,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 795,
																						"name": "positionCore1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1700,
																						"src": "5787:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore1_$1652_storage_$",
																							"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1 storage ref)"
																						}
																					},
																					"id": 797,
																					"indexExpression": {
																						"id": 796,
																						"name": "positionId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 749,
																						"src": "5801:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5787:25:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PositionCore1_$1652_storage",
																						"typeString": "struct CSDUtilityPartial.PositionCore1 storage ref"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "makerAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1649,
																				"src": "5787:38:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5770:56:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 801,
																		"indexExpression": {
																			"id": 800,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "5827:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5770:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5748:86:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 803,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5747:88:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 804,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "5838:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5747:103:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5665:185:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 807,
												"nodeType": "Return",
												"src": "5658:192:1"
											}
										]
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computePayoutShort",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5322:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5322:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5350:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5382:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5382:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5312:90:1"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5426:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:9:1"
									},
									"scope": 1505,
									"src": "5284:573:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "6030:432:1",
										"statements": [
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "liquidityAddr",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "6040:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 820,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6040:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"arguments": [
														{
															"id": 826,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "6112:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 823,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "6075:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 822,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "6064:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6064:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityAddressView",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1533,
														"src": "6064:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
															"typeString": "function (address) view external returns (address)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6064:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6040:87:1"
											},
											{
												"assignments": [
													830,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "xLiquid",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "6138:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 829,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6138:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 836,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 832,
																	"name": "liquidityAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "6181:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 831,
																"name": "ISSLiquidityTemplate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "6160:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSLiquidityTemplate_$1622_$",
																	"typeString": "type(contract ISSLiquidityTemplate)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6160:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSLiquidityTemplate_$1622",
																"typeString": "contract ISSLiquidityTemplate"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityDetailsView",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1621,
														"src": "6160:56:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () view external returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6137:81:1"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "limitPercent",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "6228:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6228:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "313031",
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6251:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_101_by_1",
															"typeString": "int_const 101"
														},
														"value": "101"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 842,
																"name": "leverage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "6265:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6257:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 840,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6257:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6257:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6251:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6228:46:1"
											},
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "limit",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "6284:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 846,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6284:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 848,
															"name": "xLiquid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "6300:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 849,
															"name": "limitPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "6310:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6300:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6325:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "6300:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6284:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 855,
																"name": "leverageAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "6346:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 856,
																"name": "limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "6364:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6346:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6576657261676520616d6f756e742065786365656473206c696d6974",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6371:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc6467b0450904af6e69cbe24bc3c549f2577a8d289884fc738a9338febf7e86",
																"typeString": "literal_string \"Leverage amount exceeds limit\""
															},
															"value": "Leverage amount exceeds limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc6467b0450904af6e69cbe24bc3c549f2577a8d289884fc738a9338febf7e86",
																"typeString": "literal_string \"Leverage amount exceeds limit\""
															}
														],
														"id": 854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6338:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6338:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "6338:65:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 862,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "6431:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 861,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "6420:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6420:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1543,
														"src": "6420:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6420:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 819,
												"id": 866,
												"nodeType": "Return",
												"src": "6413:42:1"
											}
										]
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkLiquidityLimitLong",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5906:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5906:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "leverageAmount",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5938:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5938:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "leverage",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5970:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 814,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5970:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5896:94:1"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "6014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6013:16:1"
									},
									"scope": 1505,
									"src": "5863:599:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "6689:216:1",
										"statements": [
											{
												"expression": {
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 883,
														"name": "initialLoan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "6699:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 884,
															"name": "leverageAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "6713:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 885,
															"name": "minPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "6730:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6713:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6699:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "6699:39:1"
											},
											{
												"assignments": [
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "marginRatio",
														"nodeType": "VariableDeclaration",
														"scope": 910,
														"src": "6748:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 889,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6748:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 898,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 891,
																"name": "makerTokenMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "6770:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 893,
															"indexExpression": {
																"id": 892,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "6787:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6770:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 895,
														"indexExpression": {
															"id": 894,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "6794:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6770:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 896,
														"name": "leverageAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "6804:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6770:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6748:70:1"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "marginRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "6847:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 901,
																"name": "minPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "6861:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6847:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "30",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6897:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "6847:51:1",
														"trueExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 903,
																"name": "minPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "6872:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 904,
																"name": "marginRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "6883:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6872:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6828:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "6828:70:1"
											}
										]
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeLoanAndLiquidationLong",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "leverageAmount",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "6517:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "minPrice",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "6549:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "6575:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "6598:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6507:111:1"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "initialLoan",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "6642:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6642:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "liquidationPrice",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "6663:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6641:47:1"
									},
									"scope": 1505,
									"src": "6468:437:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "7079:433:1",
										"statements": [
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "liquidityAddr",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "7089:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 922,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7089:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 930,
												"initialValue": {
													"arguments": [
														{
															"id": 928,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "7161:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 925,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7124:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 924,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "7113:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7113:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityAddressView",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1533,
														"src": "7113:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
															"typeString": "function (address) view external returns (address)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7113:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7089:87:1"
											},
											{
												"assignments": [
													null,
													932,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "yLiquid",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "7189:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 931,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7189:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 938,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 934,
																	"name": "liquidityAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "7231:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 933,
																"name": "ISSLiquidityTemplate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "7210:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSLiquidityTemplate_$1622_$",
																	"typeString": "type(contract ISSLiquidityTemplate)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7210:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSLiquidityTemplate_$1622",
																"typeString": "contract ISSLiquidityTemplate"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityDetailsView",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1621,
														"src": "7210:56:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () view external returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7210:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7186:82:1"
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "limitPercent",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "7278:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7278:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "313031",
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7301:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_101_by_1",
															"typeString": "int_const 101"
														},
														"value": "101"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 944,
																"name": "leverage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "7315:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7307:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 942,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7307:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7307:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7301:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7278:46:1"
											},
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "limit",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "7334:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7334:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 950,
															"name": "yLiquid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "7350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 951,
															"name": "limitPercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "7360:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7350:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7375:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "7350:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7334:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 957,
																"name": "leverageAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "7396:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 958,
																"name": "limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "7414:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7396:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6576657261676520616d6f756e742065786365656473206c696d6974",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7421:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc6467b0450904af6e69cbe24bc3c549f2577a8d289884fc738a9338febf7e86",
																"typeString": "literal_string \"Leverage amount exceeds limit\""
															},
															"value": "Leverage amount exceeds limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc6467b0450904af6e69cbe24bc3c549f2577a8d289884fc738a9338febf7e86",
																"typeString": "literal_string \"Leverage amount exceeds limit\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7388:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7388:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "7388:65:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 964,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7481:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 963,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "7470:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7470:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1538,
														"src": "7470:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7470:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 921,
												"id": 968,
												"nodeType": "Return",
												"src": "7463:42:1"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkLiquidityLimitShort",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "6955:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6955:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "leverageAmount",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "6987:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6987:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "leverage",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "7019:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 916,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7019:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6945:94:1"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "7063:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7063:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7062:16:1"
									},
									"scope": 1505,
									"src": "6911:601:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "7740:187:1",
										"statements": [
											{
												"expression": {
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "initialLoan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "7750:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 986,
															"name": "leverageAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "7764:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 987,
															"name": "minPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "7781:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7764:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7750:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "7750:39:1"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "marginRatio",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "7799:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7799:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 993,
																"name": "makerTokenMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "7821:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 995,
															"indexExpression": {
																"id": 994,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "7838:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7821:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 997,
														"indexExpression": {
															"id": 996,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "7845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7821:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 998,
														"name": "leverageAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "7855:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7821:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7799:70:1"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1001,
														"name": "liquidationPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "7879:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1002,
															"name": "minPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "7898:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1003,
															"name": "marginRatio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "7909:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7898:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7879:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "7879:41:1"
											}
										]
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeLoanAndLiquidationShort",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "leverageAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "7568:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "minPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "7600:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "7626:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "7649:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:111:1"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "initialLoan",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "7693:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "liquidationPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "7714:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7692:47:1"
									},
									"scope": 1505,
									"src": "7518:409:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "8090:180:1",
										"statements": [
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1019,
																"name": "makerTokenMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "8100:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1022,
															"indexExpression": {
																"id": 1020,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "8117:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8100:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1023,
														"indexExpression": {
															"id": 1021,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "8124:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8100:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1024,
																	"name": "taxedMargin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "8135:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1025,
																	"name": "excessMargin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "8149:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8135:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1027,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8134:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8100:62:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "8100:62:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1030,
																"name": "makerTokenMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "8176:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1032,
															"indexExpression": {
																"id": 1031,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "8193:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8176:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"id": 1033,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "8200:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8176:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8176:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "IfStatement",
												"src": "8172:92:1",
												"trueBody": {
													"id": 1042,
													"nodeType": "Block",
													"src": "8213:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1038,
																		"name": "maker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "8240:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1039,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "8247:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1037,
																	"name": "_removeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "8227:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8227:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "8227:26:1"
														}
													]
												}
											}
										]
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deductMarginAndRemoveToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "7979:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "8002:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8002:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "taxedMargin",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "8025:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8025:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "excessMargin",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "8054:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8054:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:111:1"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8090:0:1"
									},
									"scope": 1505,
									"src": "7933:337:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "8456:459:1",
										"statements": [
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "updates",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "8466:40:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListing.PayoutUpdate[]"
														},
														"typeName": {
															"baseType": {
																"id": 1061,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1060,
																	"name": "ISSListing.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1559,
																	"src": "8466:23:1"
																},
																"referencedDeclaration": 1559,
																"src": "8466:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1559_storage_ptr",
																	"typeString": "struct ISSListing.PayoutUpdate"
																}
															},
															"id": 1062,
															"nodeType": "ArrayTypeName",
															"src": "8466:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListing.PayoutUpdate[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8509:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1559_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListing.PayoutUpdate memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1065,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1064,
																	"name": "ISSListing.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1559,
																	"src": "8513:23:1"
																},
																"referencedDeclaration": 1559,
																"src": "8513:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1559_storage_ptr",
																	"typeString": "struct ISSListing.PayoutUpdate"
																}
															},
															"id": 1066,
															"nodeType": "ArrayTypeName",
															"src": "8513:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListing.PayoutUpdate[]"
															}
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8509:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListing.PayoutUpdate memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8466:75:1"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1071,
															"name": "updates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "8551:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListing.PayoutUpdate memory[] memory"
															}
														},
														"id": 1073,
														"indexExpression": {
															"hexValue": "30",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8559:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8551:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1559_memory_ptr",
															"typeString": "struct ISSListing.PayoutUpdate memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1076,
																"name": "positionType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "8614:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 1077,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "8651:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1078,
																"name": "payout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "8680:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1074,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "8564:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "PayoutUpdate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1559,
															"src": "8564:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PayoutUpdate_$1559_storage_ptr_$",
																"typeString": "type(struct ISSListing.PayoutUpdate storage pointer)"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"payoutType",
															"recipient",
															"required"
														],
														"nodeType": "FunctionCall",
														"src": "8564:133:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1559_memory_ptr",
															"typeString": "struct ISSListing.PayoutUpdate memory"
														}
													},
													"src": "8551:146:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutUpdate_$1559_memory_ptr",
														"typeString": "struct ISSListing.PayoutUpdate memory"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "8551:146:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1088,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8751:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CSDPositionPartial_$1505",
																		"typeString": "contract CSDPositionPartial"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CSDPositionPartial_$1505",
																		"typeString": "contract CSDPositionPartial"
																	}
																],
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8743:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1086,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8743:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8743:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "updates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "8758:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListing.PayoutUpdate memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListing.PayoutUpdate memory[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1083,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "8718:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1082,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "8707:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8707:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ssUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1552,
														"src": "8707:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_PayoutUpdate_$1559_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,struct ISSListing.PayoutUpdate memory[] memory) external"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8707:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "8707:59:1"
											},
											{
												"expression": {
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1093,
																"name": "exitParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "8777:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExitParams_$1690_storage_$",
																	"typeString": "mapping(uint256 => struct CSDUtilityPartial.ExitParams storage ref)"
																}
															},
															"id": 1095,
															"indexExpression": {
																"id": 1094,
																"name": "positionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "8788:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8777:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitParams_$1690_storage",
																"typeString": "struct CSDUtilityPartial.ExitParams storage ref"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "exitPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1689,
														"src": "8777:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1101,
																"name": "listingAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "8846:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1098,
																		"name": "listingAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "8823:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1097,
																	"name": "ISSListing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "8812:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																		"typeString": "type(contract ISSListing)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8812:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISSListing_$1590",
																	"typeString": "contract ISSListing"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "prices",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1517,
															"src": "8812:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8812:49:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8777:84:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "8777:84:1"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1105,
																"name": "positionCore2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "8871:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore2_$1657_storage_$",
																	"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore2 storage ref)"
																}
															},
															"id": 1107,
															"indexExpression": {
																"id": 1106,
																"name": "positionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "8885:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8871:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionCore2_$1657_storage",
																"typeString": "struct CSDUtilityPartial.PositionCore2 storage ref"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "status2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1656,
														"src": "8871:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8907:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8871:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "8871:37:1"
											}
										]
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executePayoutUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8315:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8315:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8343:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "payout",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8375:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "positionType",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8399:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1052,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8399:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8427:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:141:1"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8456:0:1"
									},
									"scope": 1505,
									"src": "8276:639:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "9224:886:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1136,
																	"name": "leverage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "9242:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9254:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9242:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1139,
																	"name": "leverage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "9259:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9271:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "9259:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9242:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c65766572616765",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9276:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_354533b5cd4b33c8c4bebed5ffd298476855b0167831632c3f3e3dd8b07fc295",
																"typeString": "literal_string \"Invalid leverage\""
															},
															"value": "Invalid leverage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_354533b5cd4b33c8c4bebed5ffd298476855b0167831632c3f3e3dd8b07fc295",
																"typeString": "literal_string \"Invalid leverage\""
															}
														],
														"id": 1135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9234:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9234:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "9234:61:1"
											},
											{
												"assignments": [
													1147,
													1149,
													1151,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "currentPrice",
														"nodeType": "VariableDeclaration",
														"scope": 1233,
														"src": "9306:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9306:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "minPrice",
														"nodeType": "VariableDeclaration",
														"scope": 1233,
														"src": "9328:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "maxPrice",
														"nodeType": "VariableDeclaration",
														"scope": 1233,
														"src": "9346:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9346:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1157,
												"initialValue": {
													"arguments": [
														{
															"id": 1153,
															"name": "minEntryPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "9383:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1154,
															"name": "maxEntryPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "9398:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1155,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "9413:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1152,
														"name": "parseEntryPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "9367:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256,address) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9367:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9305:123:1"
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1158,
															"name": "prep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "9439:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																"typeString": "struct CSDPositionPartial.PrepPosition memory"
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "9439:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1162,
																"name": "initialMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9461:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1163,
																"name": "leverage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "9476:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1161,
															"name": "computeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9450:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9450:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9439:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "9439:46:1"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1167,
															"name": "prep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "9495:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																"typeString": "struct CSDPositionPartial.PrepPosition memory"
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "taxedMargin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 476,
														"src": "9495:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1170,
															"name": "initialMargin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "9514:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1171,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "9530:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																	"typeString": "struct CSDPositionPartial.PrepPosition memory"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 474,
															"src": "9530:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9514:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9495:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "9495:43:1"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1176,
															"name": "prep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "9548:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																"typeString": "struct CSDPositionPartial.PrepPosition memory"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "leverageAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 478,
														"src": "9548:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1179,
															"name": "initialMargin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "9570:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1182,
																	"name": "leverage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "9594:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9586:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1180,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9586:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9586:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9570:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9548:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "9548:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "excessMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "9621:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1189,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "9637:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																		"typeString": "struct CSDPositionPartial.PrepPosition memory"
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "leverageAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 478,
																"src": "9637:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9621:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457863657373206d617267696e20746f6f2068696768",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9658:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41928827865eaf8b0021456538b2ea9314156b3a38982859f8eb69f100c8a319",
																"typeString": "literal_string \"Excess margin too high\""
															},
															"value": "Excess margin too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41928827865eaf8b0021456538b2ea9314156b3a38982859f8eb69f100c8a319",
																"typeString": "literal_string \"Excess margin too high\""
															}
														],
														"id": 1187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9613:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9613:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "9613:70:1"
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "tokenB",
														"nodeType": "VariableDeclaration",
														"scope": 1233,
														"src": "9694:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9694:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1203,
												"initialValue": {
													"arguments": [
														{
															"id": 1198,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "9736:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1199,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "9752:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																	"typeString": "struct CSDPositionPartial.PrepPosition memory"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "leverageAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 478,
															"src": "9752:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1201,
															"name": "leverage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "9773:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1197,
														"name": "_checkLiquidityLimitLong",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "9711:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint8_$returns$_t_address_$",
															"typeString": "function (address,uint256,uint8) view returns (address)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9711:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9694:88:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "9817:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "9825:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "maker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "9841:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1208,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "9848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																	"typeString": "struct CSDPositionPartial.PrepPosition memory"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "taxedMargin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 476,
															"src": "9848:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1210,
															"name": "excessMargin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "9866:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1211,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "9880:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																	"typeString": "struct CSDPositionPartial.PrepPosition memory"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 474,
															"src": "9880:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9890:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1204,
														"name": "_transferMarginToListing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9792:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256,uint8)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9792:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "9792:100:1"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"expression": {
																	"id": 1216,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "9904:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																		"typeString": "struct CSDPositionPartial.PrepPosition memory"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "initialLoan",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 480,
																"src": "9904:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1219,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "9922:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																		"typeString": "struct CSDPositionPartial.PrepPosition memory"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "liquidationPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 482,
																"src": "9922:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1221,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9903:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1223,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "9991:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																		"typeString": "struct CSDPositionPartial.PrepPosition memory"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "leverageAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 478,
																"src": "9991:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1225,
																"name": "minPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "10024:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1226,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "10046:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1227,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "10065:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1222,
															"name": "_computeLoanAndLiquidationLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "9947:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,address,address) view returns (uint256,uint256)"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9947:134:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "9903:178:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "9903:178:1"
											},
											{
												"expression": {
													"id": 1231,
													"name": "prep",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1133,
													"src": "10099:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
														"typeString": "struct CSDPositionPartial.PrepPosition memory"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1232,
												"nodeType": "Return",
												"src": "10092:11:1"
											}
										]
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "prepEnterLong",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "8953:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8953:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "minEntryPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "8981:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "maxEntryPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9012:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "initialMargin",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9043:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9043:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "excessMargin",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9074:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9074:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "leverage",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9104:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1124,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9104:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9128:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9128:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9160:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9160:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8943:236:1"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "prep",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9198:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
													"typeString": "struct CSDPositionPartial.PrepPosition"
												},
												"typeName": {
													"id": 1132,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1131,
														"name": "PrepPosition",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "9198:12:1"
													},
													"referencedDeclaration": 483,
													"src": "9198:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PrepPosition_$483_storage_ptr",
														"typeString": "struct CSDPositionPartial.PrepPosition"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9197:26:1"
									},
									"scope": 1505,
									"src": "8921:1189:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "10420:888:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1257,
																	"name": "leverage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "10438:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10450:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10438:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1260,
																	"name": "leverage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "10455:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10467:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "10455:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10438:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c65766572616765",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10472:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_354533b5cd4b33c8c4bebed5ffd298476855b0167831632c3f3e3dd8b07fc295",
																"typeString": "literal_string \"Invalid leverage\""
															},
															"value": "Invalid leverage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_354533b5cd4b33c8c4bebed5ffd298476855b0167831632c3f3e3dd8b07fc295",
																"typeString": "literal_string \"Invalid leverage\""
															}
														],
														"id": 1256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10430:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10430:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "10430:61:1"
											},
											{
												"assignments": [
													1268,
													1270,
													1272,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "currentPrice",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "10502:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10502:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "minPrice",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "10524:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10524:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "maxPrice",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "10542:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10542:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1278,
												"initialValue": {
													"arguments": [
														{
															"id": 1274,
															"name": "minEntryPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "10579:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1275,
															"name": "maxEntryPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "10594:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1276,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "10609:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1273,
														"name": "parseEntryPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "10563:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256,address) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10563:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10501:123:1"
											},
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1279,
															"name": "prep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "10635:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																"typeString": "struct CSDPositionPartial.PrepPosition memory"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "10635:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1283,
																"name": "initialMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "10657:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1284,
																"name": "leverage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "10672:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1282,
															"name": "computeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "10646:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10646:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10635:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "10635:46:1"
											},
											{
												"expression": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1288,
															"name": "prep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "10691:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																"typeString": "struct CSDPositionPartial.PrepPosition memory"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "taxedMargin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 476,
														"src": "10691:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1291,
															"name": "initialMargin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "10710:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1292,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "10726:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																	"typeString": "struct CSDPositionPartial.PrepPosition memory"
																}
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 474,
															"src": "10726:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10710:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10691:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "10691:43:1"
											},
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1297,
															"name": "prep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "10744:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																"typeString": "struct CSDPositionPartial.PrepPosition memory"
															}
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "leverageAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 478,
														"src": "10744:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1300,
															"name": "initialMargin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "10766:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1303,
																	"name": "leverage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "10790:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10782:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1301,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10782:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10782:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10766:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10744:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "10744:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1309,
																"name": "excessMargin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "10817:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1310,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "10833:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																		"typeString": "struct CSDPositionPartial.PrepPosition memory"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "leverageAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 478,
																"src": "10833:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10817:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457863657373206d617267696e20746f6f2068696768",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10854:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41928827865eaf8b0021456538b2ea9314156b3a38982859f8eb69f100c8a319",
																"typeString": "literal_string \"Excess margin too high\""
															},
															"value": "Excess margin too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41928827865eaf8b0021456538b2ea9314156b3a38982859f8eb69f100c8a319",
																"typeString": "literal_string \"Excess margin too high\""
															}
														],
														"id": 1308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10809:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "10809:70:1"
											},
											{
												"assignments": [
													1317
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "tokenA",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "10890:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10890:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"arguments": [
														{
															"id": 1319,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "10933:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1320,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "10949:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																	"typeString": "struct CSDPositionPartial.PrepPosition memory"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "leverageAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 478,
															"src": "10949:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1322,
															"name": "leverage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "10970:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1318,
														"name": "_checkLiquidityLimitShort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "10907:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint8_$returns$_t_address_$",
															"typeString": "function (address,uint256,uint8) view returns (address)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10907:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10890:89:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1326,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "11014:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1327,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "11022:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1328,
															"name": "maker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "11038:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1329,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "11045:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																	"typeString": "struct CSDPositionPartial.PrepPosition memory"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "taxedMargin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 476,
															"src": "11045:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1331,
															"name": "excessMargin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "11063:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1332,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "11077:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																	"typeString": "struct CSDPositionPartial.PrepPosition memory"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 474,
															"src": "11077:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11087:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1325,
														"name": "_transferMarginToListing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "10989:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256,uint8)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10989:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "10989:100:1"
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"expression": {
																	"id": 1337,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "11101:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																		"typeString": "struct CSDPositionPartial.PrepPosition memory"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "initialLoan",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 480,
																"src": "11101:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1340,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "11119:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																		"typeString": "struct CSDPositionPartial.PrepPosition memory"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "liquidationPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 482,
																"src": "11119:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1342,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "11100:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1344,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "11189:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
																		"typeString": "struct CSDPositionPartial.PrepPosition memory"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "leverageAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 478,
																"src": "11189:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1346,
																"name": "minPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "11222:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1347,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "11244:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1348,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "11263:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1343,
															"name": "_computeLoanAndLiquidationShort",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "11144:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,address,address) view returns (uint256,uint256)"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11144:135:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "11100:179:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "11100:179:1"
											},
											{
												"expression": {
													"id": 1352,
													"name": "prep",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1254,
													"src": "11297:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
														"typeString": "struct CSDPositionPartial.PrepPosition memory"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1353,
												"nodeType": "Return",
												"src": "11290:11:1"
											}
										]
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "prepEnterShort",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10149:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "minEntryPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10177:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "maxEntryPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10208:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10208:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "initialMargin",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10239:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "excessMargin",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10270:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10270:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "leverage",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10300:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1245,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10300:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10324:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10324:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10356:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10139:236:1"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "prep",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "10394:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PrepPosition_$483_memory_ptr",
													"typeString": "struct CSDPositionPartial.PrepPosition"
												},
												"typeName": {
													"id": 1253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1252,
														"name": "PrepPosition",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "10394:12:1"
													},
													"referencedDeclaration": 483,
													"src": "10394:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PrepPosition_$483_storage_ptr",
														"typeString": "struct CSDPositionPartial.PrepPosition"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10393:26:1"
									},
									"scope": 1505,
									"src": "10116:1192:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "11437:490:1",
										"statements": [
											{
												"assignments": [
													1366
												],
												"declarations": [
													{
														"constant": false,
														"id": 1366,
														"mutability": "mutable",
														"name": "core1",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "11447:27:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
															"typeString": "struct CSDUtilityPartial.PositionCore1"
														},
														"typeName": {
															"id": 1365,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1364,
																"name": "PositionCore1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1652,
																"src": "11447:13:1"
															},
															"referencedDeclaration": 1652,
															"src": "11447:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																"typeString": "struct CSDUtilityPartial.PositionCore1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"baseExpression": {
														"id": 1367,
														"name": "positionCore1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "11477:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore1_$1652_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1 storage ref)"
														}
													},
													"id": 1369,
													"indexExpression": {
														"id": 1368,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "11491:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11477:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PositionCore1_$1652_storage",
														"typeString": "struct CSDUtilityPartial.PositionCore1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11447:55:1"
											},
											{
												"assignments": [
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "margin1",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "11512:29:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
															"typeString": "struct CSDUtilityPartial.MarginParams1"
														},
														"typeName": {
															"id": 1372,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1371,
																"name": "MarginParams1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1680,
																"src": "11512:13:1"
															},
															"referencedDeclaration": 1680,
															"src": "11512:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																"typeString": "struct CSDUtilityPartial.MarginParams1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1377,
												"initialValue": {
													"baseExpression": {
														"id": 1374,
														"name": "marginParams1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "11544:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams1_$1680_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1 storage ref)"
														}
													},
													"id": 1376,
													"indexExpression": {
														"id": 1375,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "11558:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11544:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarginParams1_$1680_storage",
														"typeString": "struct CSDUtilityPartial.MarginParams1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11512:57:1"
											},
											{
												"assignments": [
													1379
												],
												"declarations": [
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "tokenB",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "11580:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1378,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11580:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1381,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "11608:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1380,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "11597:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11597:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenB",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1543,
														"src": "11597:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11597:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11580:52:1"
											},
											{
												"expression": {
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1386,
														"name": "payout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "11642:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1388,
																"name": "positionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "11670:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1389,
																"name": "listingAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "11682:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1390,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "11698:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1387,
															"name": "_computePayoutLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "11651:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (uint256,address,address) view returns (uint256)"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11651:54:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11642:63:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "11642:63:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1395,
																"name": "core1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "11744:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "makerAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1649,
															"src": "11744:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "11764:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1398,
																"name": "margin1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "11772:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.MarginParams1 storage pointer"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "taxedMargin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1675,
															"src": "11772:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1400,
																"name": "margin1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "11793:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.MarginParams1 storage pointer"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "excessMargin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1677,
															"src": "11793:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1394,
														"name": "_deductMarginAndRemoveToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "11716:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11716:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "11716:98:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "11845:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1406,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "11857:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "payout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "11873:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1408,
																"name": "core1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "11881:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "positionType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "11881:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 1410,
																"name": "core1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "11901:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "makerAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1649,
															"src": "11901:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1404,
														"name": "_executePayoutUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "11824:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint8_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint8,address)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11824:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "11824:96:1"
											}
										]
									},
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "prepCloseLong",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "11346:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "11374:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11336:66:1"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "payout",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "11421:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11421:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11420:16:1"
									},
									"scope": 1505,
									"src": "11314:613:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "12057:491:1",
										"statements": [
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"mutability": "mutable",
														"name": "core1",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "12067:27:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
															"typeString": "struct CSDUtilityPartial.PositionCore1"
														},
														"typeName": {
															"id": 1425,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1424,
																"name": "PositionCore1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1652,
																"src": "12067:13:1"
															},
															"referencedDeclaration": 1652,
															"src": "12067:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																"typeString": "struct CSDUtilityPartial.PositionCore1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"baseExpression": {
														"id": 1427,
														"name": "positionCore1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "12097:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore1_$1652_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1 storage ref)"
														}
													},
													"id": 1429,
													"indexExpression": {
														"id": 1428,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "12111:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12097:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PositionCore1_$1652_storage",
														"typeString": "struct CSDUtilityPartial.PositionCore1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12067:55:1"
											},
											{
												"assignments": [
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "margin1",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "12132:29:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
															"typeString": "struct CSDUtilityPartial.MarginParams1"
														},
														"typeName": {
															"id": 1432,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1431,
																"name": "MarginParams1",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1680,
																"src": "12132:13:1"
															},
															"referencedDeclaration": 1680,
															"src": "12132:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																"typeString": "struct CSDUtilityPartial.MarginParams1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"baseExpression": {
														"id": 1434,
														"name": "marginParams1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "12164:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams1_$1680_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1 storage ref)"
														}
													},
													"id": 1436,
													"indexExpression": {
														"id": 1435,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "12178:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12164:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarginParams1_$1680_storage",
														"typeString": "struct CSDUtilityPartial.MarginParams1 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12132:57:1"
											},
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "tokenA",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "12200:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1438,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12200:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1441,
																	"name": "listingAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "12228:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1440,
																"name": "ISSListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "12217:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																	"typeString": "type(contract ISSListing)"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12217:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListing_$1590",
																"typeString": "contract ISSListing"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenA",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1538,
														"src": "12217:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12217:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12200:52:1"
											},
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1446,
														"name": "payout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "12262:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1448,
																"name": "positionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "12291:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1449,
																"name": "listingAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "12303:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1450,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "12319:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1447,
															"name": "_computePayoutShort",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "12271:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (uint256,address,address) view returns (uint256)"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12271:55:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12262:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "12262:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1455,
																"name": "core1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "12365:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "makerAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1649,
															"src": "12365:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "12385:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1458,
																"name": "margin1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "12393:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.MarginParams1 storage pointer"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "taxedMargin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1675,
															"src": "12393:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1460,
																"name": "margin1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "12414:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.MarginParams1 storage pointer"
																}
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "excessMargin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1677,
															"src": "12414:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1454,
														"name": "_deductMarginAndRemoveToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "12337:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12337:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "12337:98:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1465,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "12466:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1466,
															"name": "listingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "12478:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "payout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "12494:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1468,
																"name": "core1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "12502:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "positionType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1651,
															"src": "12502:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 1470,
																"name": "core1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "12522:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
																	"typeString": "struct CSDUtilityPartial.PositionCore1 storage pointer"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "makerAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1649,
															"src": "12522:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1464,
														"name": "_executePayoutUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "12445:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint8_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint8,address)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12445:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "12445:96:1"
											}
										]
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "prepCloseShort",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "11966:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11966:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "11994:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11956:66:1"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "payout",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "12041:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12040:16:1"
									},
									"scope": 1505,
									"src": "11933:615:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "12684:157:1",
										"statements": [
											{
												"assignments": [
													1486
												],
												"declarations": [
													{
														"constant": false,
														"id": 1486,
														"mutability": "mutable",
														"name": "exit",
														"nodeType": "VariableDeclaration",
														"scope": 1503,
														"src": "12694:23:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
															"typeString": "struct CSDUtilityPartial.ExitParams"
														},
														"typeName": {
															"id": 1485,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1484,
																"name": "ExitParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1690,
																"src": "12694:10:1"
															},
															"referencedDeclaration": 1690,
															"src": "12694:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
																"typeString": "struct CSDUtilityPartial.ExitParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1490,
												"initialValue": {
													"baseExpression": {
														"id": 1487,
														"name": "exitParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "12720:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExitParams_$1690_storage_$",
															"typeString": "mapping(uint256 => struct CSDUtilityPartial.ExitParams storage ref)"
														}
													},
													"id": 1489,
													"indexExpression": {
														"id": 1488,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "12731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12720:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExitParams_$1690_storage",
														"typeString": "struct CSDUtilityPartial.ExitParams storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12694:48:1"
											},
											{
												"expression": {
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1491,
															"name": "exit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "12752:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
																"typeString": "struct CSDUtilityPartial.ExitParams storage pointer"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stopLossPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1685,
														"src": "12752:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1494,
														"name": "stopLossPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "12773:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12752:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "12752:34:1"
											},
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1497,
															"name": "exit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "12796:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
																"typeString": "struct CSDUtilityPartial.ExitParams storage pointer"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "takeProfitPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1687,
														"src": "12796:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1500,
														"name": "takeProfitPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "12819:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12796:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "12796:38:1"
											}
										]
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setExitParams",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "positionId",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "12586:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "stopLossPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "12614:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12614:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "takeProfitPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "12645:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12645:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12576:98:1"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12684:0:1"
									},
									"scope": 1505,
									"src": "12554:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1506,
							"src": "2488:10355:1"
						}
					],
					"src": "2429:10414:1"
				},
				"id": 1
			},
			"ShockSpace/driverUtils/CSDUtilityPartial.sol": {
				"ast": {
					"absolutePath": "ShockSpace/driverUtils/CSDUtilityPartial.sol",
					"exportedSymbols": {
						"Address": [
							2213
						],
						"CSDUtilityPartial": [
							1883
						],
						"Context": [
							2235
						],
						"IERC20": [
							2293
						],
						"IERC20Permit": [
							2329
						],
						"ISSAgent": [
							1632
						],
						"ISSLiquidityTemplate": [
							1622
						],
						"ISSListing": [
							1590
						],
						"Ownable": [
							2442
						],
						"ReentrancyGuard": [
							2507
						],
						"SafeERC20": [
							2883
						]
					},
					"id": 1884,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1507,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "1031:22:2"
						},
						{
							"absolutePath": "ShockSpace/imports/SafeERC20.sol",
							"file": "../imports/SafeERC20.sol",
							"id": 1508,
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 2884,
							"src": "1055:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShockSpace/imports/ReentrancyGuard.sol",
							"file": "../imports/ReentrancyGuard.sol",
							"id": 1509,
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 2508,
							"src": "1090:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShockSpace/imports/Ownable.sol",
							"file": "../imports/Ownable.sol",
							"id": 1510,
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 2443,
							"src": "1131:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1590,
							"linearizedBaseContracts": [
								1590
							],
							"name": "ISSListing",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cfed246b",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "prices",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "1208:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:9:2"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "1240:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:9:2"
									},
									"scope": 1590,
									"src": "1192:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9205b4cd",
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "volumeBalances",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1278:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:9:2"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "xBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1310:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "yBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1328:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:36:2"
									},
									"scope": 1590,
									"src": "1254:92:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c546ac00",
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityAddressView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1381:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:9:2"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1413:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1412:9:2"
									},
									"scope": 1590,
									"src": "1351:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0fc63d10",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenA",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1442:2:2"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1468:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:9:2"
									},
									"scope": 1590,
									"src": "1427:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f64b55b",
									"id": 1543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1497:2:2"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "1523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1522:9:2"
									},
									"scope": 1590,
									"src": "1482:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "88413c17",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ssUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1555:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "updates",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1571:31:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISSListing.PayoutUpdate[]"
												},
												"typeName": {
													"baseType": {
														"id": 1547,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1546,
															"name": "PayoutUpdate",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1559,
															"src": "1571:12:2"
														},
														"referencedDeclaration": 1559,
														"src": "1571:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1559_storage_ptr",
															"typeString": "struct ISSListing.PayoutUpdate"
														}
													},
													"id": 1548,
													"nodeType": "ArrayTypeName",
													"src": "1571:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1559_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListing.PayoutUpdate[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:49:2"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:0:2"
									},
									"scope": 1590,
									"src": "1537:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISSListing.PayoutUpdate",
									"id": 1559,
									"members": [
										{
											"constant": false,
											"id": 1554,
											"mutability": "mutable",
											"name": "payoutType",
											"nodeType": "VariableDeclaration",
											"scope": 1559,
											"src": "1648:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1553,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1648:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1556,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1559,
											"src": "1674:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1555,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1674:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1558,
											"mutability": "mutable",
											"name": "required",
											"nodeType": "VariableDeclaration",
											"scope": 1559,
											"src": "1701:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1557,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1701:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PayoutUpdate",
									"nodeType": "StructDefinition",
									"scope": 1590,
									"src": "1618:106:2",
									"visibility": "public"
								},
								{
									"functionSelector": "50894e9f",
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimalsA",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:2"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "1773:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1561,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1773:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:7:2"
									},
									"scope": 1590,
									"src": "1729:51:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "57cbf16c",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimalsB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1803:2:2"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "1829:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1566,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1829:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:7:2"
									},
									"scope": 1590,
									"src": "1785:51:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISSListing.UpdateType",
									"id": 1580,
									"members": [
										{
											"constant": false,
											"id": 1571,
											"mutability": "mutable",
											"name": "updateType",
											"nodeType": "VariableDeclaration",
											"scope": 1580,
											"src": "1869:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1570,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1869:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1573,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1580,
											"src": "1895:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1572,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1895:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1575,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 1580,
											"src": "1918:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1574,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1918:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1577,
											"mutability": "mutable",
											"name": "addr",
											"nodeType": "VariableDeclaration",
											"scope": 1580,
											"src": "1941:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1576,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1941:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1579,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1580,
											"src": "1963:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1578,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1963:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UpdateType",
									"nodeType": "StructDefinition",
									"scope": 1590,
									"src": "1841:146:2",
									"visibility": "public"
								},
								{
									"functionSelector": "296dc7d9",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2008:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "updates",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2024:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISSListing.UpdateType[]"
												},
												"typeName": {
													"baseType": {
														"id": 1584,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1583,
															"name": "UpdateType",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1580,
															"src": "2024:10:2"
														},
														"referencedDeclaration": 1580,
														"src": "2024:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1580_storage_ptr",
															"typeString": "struct ISSListing.UpdateType"
														}
													},
													"id": 1585,
													"nodeType": "ArrayTypeName",
													"src": "2024:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1580_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListing.UpdateType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:47:2"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2063:0:2"
									},
									"scope": 1590,
									"src": "1992:72:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1884,
							"src": "1165:901:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1622,
							"linearizedBaseContracts": [
								1622
							],
							"name": "ISSLiquidityTemplate",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISSLiquidityTemplate.UpdateType",
									"id": 1601,
									"members": [
										{
											"constant": false,
											"id": 1592,
											"mutability": "mutable",
											"name": "updateTipo",
											"nodeType": "VariableDeclaration",
											"scope": 1601,
											"src": "2133:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1591,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2133:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1594,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1601,
											"src": "2159:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1593,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2159:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1596,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 1601,
											"src": "2182:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1595,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2182:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1598,
											"mutability": "mutable",
											"name": "addr",
											"nodeType": "VariableDeclaration",
											"scope": 1601,
											"src": "2205:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1597,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2205:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1600,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1601,
											"src": "2227:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1599,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2227:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UpdateType",
									"nodeType": "StructDefinition",
									"scope": 1622,
									"src": "2105:146:2",
									"visibility": "public"
								},
								{
									"functionSelector": "dbaf307d",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2273:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "isX",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2289:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2289:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2299:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:39:2"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:0:2"
									},
									"scope": 1622,
									"src": "2256:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0d41b88",
									"id": 1621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityDetailsView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:2:2"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "xLiquid",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2381:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "yLiquid",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2398:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "xFees",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2415:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2415:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "yFees",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2430:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:64:2"
									},
									"scope": 1622,
									"src": "2326:119:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1884,
							"src": "2068:379:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1632,
							"linearizedBaseContracts": [
								1632
							],
							"name": "ISSAgent",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b369f6ad",
									"id": 1631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getListing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "2494:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "2510:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:32:2"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "2549:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:9:2"
									},
									"scope": 1632,
									"src": "2474:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1884,
							"src": "2449:111:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1883,
							"linearizedBaseContracts": [
								1883
							],
							"name": "CSDUtilityPartial",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1636,
									"libraryName": {
										"id": 1633,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2883,
										"src": "2601:9:2"
									},
									"nodeType": "UsingForDirective",
									"src": "2595:27:2",
									"typeName": {
										"id": 1635,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1634,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2293,
											"src": "2615:6:2"
										},
										"referencedDeclaration": 2293,
										"src": "2615:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2293",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "a20baee6",
									"id": 1639,
									"mutability": "constant",
									"name": "DECIMAL_PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "2628:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1637,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2628:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1638,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2672:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38613690",
									"id": 1641,
									"mutability": "mutable",
									"name": "agentAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "2682:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1640,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2682:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e7702d05",
									"id": 1643,
									"mutability": "mutable",
									"name": "positionCount",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "2715:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1642,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2715:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CSDUtilityPartial.PositionCore1",
									"id": 1652,
									"members": [
										{
											"constant": false,
											"id": 1645,
											"mutability": "mutable",
											"name": "positionId",
											"nodeType": "VariableDeclaration",
											"scope": 1652,
											"src": "2781:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1644,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2781:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1647,
											"mutability": "mutable",
											"name": "listingAddress",
											"nodeType": "VariableDeclaration",
											"scope": 1652,
											"src": "2809:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1646,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2809:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1649,
											"mutability": "mutable",
											"name": "makerAddress",
											"nodeType": "VariableDeclaration",
											"scope": 1652,
											"src": "2841:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1648,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2841:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1651,
											"mutability": "mutable",
											"name": "positionType",
											"nodeType": "VariableDeclaration",
											"scope": 1652,
											"src": "2871:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1650,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2871:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PositionCore1",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "2750:146:2",
									"visibility": "public"
								},
								{
									"canonicalName": "CSDUtilityPartial.PositionCore2",
									"id": 1657,
									"members": [
										{
											"constant": false,
											"id": 1654,
											"mutability": "mutable",
											"name": "status1",
											"nodeType": "VariableDeclaration",
											"scope": 1657,
											"src": "2933:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1653,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2933:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1656,
											"mutability": "mutable",
											"name": "status2",
											"nodeType": "VariableDeclaration",
											"scope": 1657,
											"src": "2955:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1655,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2955:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PositionCore2",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "2902:73:2",
									"visibility": "public"
								},
								{
									"canonicalName": "CSDUtilityPartial.PriceParams1",
									"id": 1668,
									"members": [
										{
											"constant": false,
											"id": 1659,
											"mutability": "mutable",
											"name": "minEntryPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "3011:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1658,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3011:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1661,
											"mutability": "mutable",
											"name": "maxEntryPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "3042:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1660,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3042:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1663,
											"mutability": "mutable",
											"name": "minPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "3073:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1662,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3073:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1665,
											"mutability": "mutable",
											"name": "priceAtEntry",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "3099:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1664,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3099:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1667,
											"mutability": "mutable",
											"name": "leverage",
											"nodeType": "VariableDeclaration",
											"scope": 1668,
											"src": "3129:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1666,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3129:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PriceParams1",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "2981:169:2",
									"visibility": "public"
								},
								{
									"canonicalName": "CSDUtilityPartial.PriceParams2",
									"id": 1671,
									"members": [
										{
											"constant": false,
											"id": 1670,
											"mutability": "mutable",
											"name": "liquidationPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1671,
											"src": "3186:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1669,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3186:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PriceParams2",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "3156:61:2",
									"visibility": "public"
								},
								{
									"canonicalName": "CSDUtilityPartial.MarginParams1",
									"id": 1680,
									"members": [
										{
											"constant": false,
											"id": 1673,
											"mutability": "mutable",
											"name": "initialMargin",
											"nodeType": "VariableDeclaration",
											"scope": 1680,
											"src": "3254:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1672,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3254:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1675,
											"mutability": "mutable",
											"name": "taxedMargin",
											"nodeType": "VariableDeclaration",
											"scope": 1680,
											"src": "3285:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1674,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3285:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1677,
											"mutability": "mutable",
											"name": "excessMargin",
											"nodeType": "VariableDeclaration",
											"scope": 1680,
											"src": "3314:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1676,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3314:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1679,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1680,
											"src": "3344:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1678,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3344:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MarginParams1",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "3223:139:2",
									"visibility": "public"
								},
								{
									"canonicalName": "CSDUtilityPartial.MarginParams2",
									"id": 1683,
									"members": [
										{
											"constant": false,
											"id": 1682,
											"mutability": "mutable",
											"name": "initialLoan",
											"nodeType": "VariableDeclaration",
											"scope": 1683,
											"src": "3399:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1681,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3399:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MarginParams2",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "3368:57:2",
									"visibility": "public"
								},
								{
									"canonicalName": "CSDUtilityPartial.ExitParams",
									"id": 1690,
									"members": [
										{
											"constant": false,
											"id": 1685,
											"mutability": "mutable",
											"name": "stopLossPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1690,
											"src": "3459:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1684,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3459:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1687,
											"mutability": "mutable",
											"name": "takeProfitPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1690,
											"src": "3490:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1686,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3490:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1689,
											"mutability": "mutable",
											"name": "exitPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1690,
											"src": "3523:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1688,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3523:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExitParams",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "3431:116:2",
									"visibility": "public"
								},
								{
									"canonicalName": "CSDUtilityPartial.OpenInterest",
									"id": 1695,
									"members": [
										{
											"constant": false,
											"id": 1692,
											"mutability": "mutable",
											"name": "leverageAmount",
											"nodeType": "VariableDeclaration",
											"scope": 1695,
											"src": "3583:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1691,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3583:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1694,
											"mutability": "mutable",
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 1695,
											"src": "3615:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1693,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3615:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OpenInterest",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "3553:86:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f037096",
									"id": 1700,
									"mutability": "mutable",
									"name": "positionCore1",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "3645:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore1_$1652_storage_$",
										"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1)"
									},
									"typeName": {
										"id": 1699,
										"keyType": {
											"id": 1696,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3653:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3645:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore1_$1652_storage_$",
											"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore1)"
										},
										"valueType": {
											"id": 1698,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1697,
												"name": "PositionCore1",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1652,
												"src": "3664:13:2"
											},
											"referencedDeclaration": 1652,
											"src": "3664:13:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PositionCore1_$1652_storage_ptr",
												"typeString": "struct CSDUtilityPartial.PositionCore1"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cd6a4bc",
									"id": 1705,
									"mutability": "mutable",
									"name": "positionCore2",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "3705:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore2_$1657_storage_$",
										"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore2)"
									},
									"typeName": {
										"id": 1704,
										"keyType": {
											"id": 1701,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3713:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3705:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PositionCore2_$1657_storage_$",
											"typeString": "mapping(uint256 => struct CSDUtilityPartial.PositionCore2)"
										},
										"valueType": {
											"id": 1703,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1702,
												"name": "PositionCore2",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1657,
												"src": "3724:13:2"
											},
											"referencedDeclaration": 1657,
											"src": "3724:13:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PositionCore2_$1657_storage_ptr",
												"typeString": "struct CSDUtilityPartial.PositionCore2"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe143615",
									"id": 1710,
									"mutability": "mutable",
									"name": "priceParams1",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "3765:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams1_$1668_storage_$",
										"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1)"
									},
									"typeName": {
										"id": 1709,
										"keyType": {
											"id": 1706,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3773:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3765:32:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams1_$1668_storage_$",
											"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams1)"
										},
										"valueType": {
											"id": 1708,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1707,
												"name": "PriceParams1",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1668,
												"src": "3784:12:2"
											},
											"referencedDeclaration": 1668,
											"src": "3784:12:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PriceParams1_$1668_storage_ptr",
												"typeString": "struct CSDUtilityPartial.PriceParams1"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c22127a9",
									"id": 1715,
									"mutability": "mutable",
									"name": "priceParams2",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "3823:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams2_$1671_storage_$",
										"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams2)"
									},
									"typeName": {
										"id": 1714,
										"keyType": {
											"id": 1711,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3831:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3823:32:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceParams2_$1671_storage_$",
											"typeString": "mapping(uint256 => struct CSDUtilityPartial.PriceParams2)"
										},
										"valueType": {
											"id": 1713,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1712,
												"name": "PriceParams2",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1671,
												"src": "3842:12:2"
											},
											"referencedDeclaration": 1671,
											"src": "3842:12:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PriceParams2_$1671_storage_ptr",
												"typeString": "struct CSDUtilityPartial.PriceParams2"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f86bcb9b",
									"id": 1720,
									"mutability": "mutable",
									"name": "marginParams1",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "3881:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams1_$1680_storage_$",
										"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1)"
									},
									"typeName": {
										"id": 1719,
										"keyType": {
											"id": 1716,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3889:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3881:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams1_$1680_storage_$",
											"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams1)"
										},
										"valueType": {
											"id": 1718,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1717,
												"name": "MarginParams1",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1680,
												"src": "3900:13:2"
											},
											"referencedDeclaration": 1680,
											"src": "3900:13:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_MarginParams1_$1680_storage_ptr",
												"typeString": "struct CSDUtilityPartial.MarginParams1"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8eff3521",
									"id": 1725,
									"mutability": "mutable",
									"name": "margin2",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "3941:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams2_$1683_storage_$",
										"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams2)"
									},
									"typeName": {
										"id": 1724,
										"keyType": {
											"id": 1721,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3949:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3941:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarginParams2_$1683_storage_$",
											"typeString": "mapping(uint256 => struct CSDUtilityPartial.MarginParams2)"
										},
										"valueType": {
											"id": 1723,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1722,
												"name": "MarginParams2",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1683,
												"src": "3960:13:2"
											},
											"referencedDeclaration": 1683,
											"src": "3960:13:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_MarginParams2_$1683_storage_ptr",
												"typeString": "struct CSDUtilityPartial.MarginParams2"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2235410d",
									"id": 1730,
									"mutability": "mutable",
									"name": "exitParams",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "3995:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExitParams_$1690_storage_$",
										"typeString": "mapping(uint256 => struct CSDUtilityPartial.ExitParams)"
									},
									"typeName": {
										"id": 1729,
										"keyType": {
											"id": 1726,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4003:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3995:30:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExitParams_$1690_storage_$",
											"typeString": "mapping(uint256 => struct CSDUtilityPartial.ExitParams)"
										},
										"valueType": {
											"id": 1728,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1727,
												"name": "ExitParams",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1690,
												"src": "4014:10:2"
											},
											"referencedDeclaration": 1690,
											"src": "4014:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ExitParams_$1690_storage_ptr",
												"typeString": "struct CSDUtilityPartial.ExitParams"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "88e53ec8",
									"id": 1735,
									"mutability": "mutable",
									"name": "openInterest",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "4049:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OpenInterest_$1695_storage_$",
										"typeString": "mapping(uint256 => struct CSDUtilityPartial.OpenInterest)"
									},
									"typeName": {
										"id": 1734,
										"keyType": {
											"id": 1731,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4057:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4049:32:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OpenInterest_$1695_storage_$",
											"typeString": "mapping(uint256 => struct CSDUtilityPartial.OpenInterest)"
										},
										"valueType": {
											"id": 1733,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1732,
												"name": "OpenInterest",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1695,
												"src": "4068:12:2"
											},
											"referencedDeclaration": 1695,
											"src": "4068:12:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_OpenInterest_$1695_storage_ptr",
												"typeString": "struct CSDUtilityPartial.OpenInterest"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "52289738",
									"id": 1741,
									"mutability": "mutable",
									"name": "makerTokenMargin",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "4108:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1740,
										"keyType": {
											"id": 1736,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4116:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4108:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1739,
											"keyType": {
												"id": 1737,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4135:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4127:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1738,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4146:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7bc9ec23",
									"id": 1746,
									"mutability": "mutable",
									"name": "makerMarginTokens",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "4185:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 1745,
										"keyType": {
											"id": 1742,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4185:29:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueType": {
											"baseType": {
												"id": 1743,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4204:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 1744,
											"nodeType": "ArrayTypeName",
											"src": "4204:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "4474:408:2",
										"statements": [
											{
												"expression": {
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1763,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "4484:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1768,
																"name": "listingAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1752,
																"src": "4533:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1765,
																		"name": "listingAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "4510:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1764,
																	"name": "ISSListing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "4499:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ISSListing_$1590_$",
																		"typeString": "type(contract ISSListing)"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4499:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISSListing_$1590",
																	"typeString": "contract ISSListing"
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "prices",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1517,
															"src": "4499:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4499:49:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4484:64:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "4484:64:2"
											},
											{
												"expression": {
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1772,
														"name": "priceAtEntry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "4558:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1773,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "4573:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4558:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "4558:27:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1776,
															"name": "minEntryPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "4599:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4616:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4599:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1779,
															"name": "maxEntryPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "4621:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4638:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4621:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4599:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1790,
												"nodeType": "IfStatement",
												"src": "4595:134:2",
												"trueBody": {
													"id": 1789,
													"nodeType": "Block",
													"src": "4641:88:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 1783,
																		"name": "currentPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "4663:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1784,
																		"name": "currentPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "4677:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1785,
																		"name": "currentPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "4691:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1786,
																		"name": "priceAtEntry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "4705:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4662:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"functionReturnParameters": 1762,
															"id": 1788,
															"nodeType": "Return",
															"src": "4655:63:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1792,
																"name": "minEntryPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "4746:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1793,
																"name": "maxEntryPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "4763:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4746:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652072616e6765",
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4778:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bc524e7c4599d1c1de083225b215a7df29ae6445b5cccc782a588ebc0d1a805",
																"typeString": "literal_string \"Invalid price range\""
															},
															"value": "Invalid price range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bc524e7c4599d1c1de083225b215a7df29ae6445b5cccc782a588ebc0d1a805",
																"typeString": "literal_string \"Invalid price range\""
															}
														],
														"id": 1791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4738:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4738:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "4738:62:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1798,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "4818:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1799,
															"name": "minEntryPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "4832:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1800,
															"name": "maxEntryPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "4847:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1801,
															"name": "priceAtEntry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "4862:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1802,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4817:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1762,
												"id": 1803,
												"nodeType": "Return",
												"src": "4810:65:2"
											}
										]
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseEntryPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "minEntryPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4280:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4280:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "maxEntryPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4311:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4342:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4270:100:2"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "currentPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4394:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "minPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4416:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4416:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "maxPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4434:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "priceAtEntry",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4452:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4393:80:2"
									},
									"scope": 1883,
									"src": "4246:636:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "4964:95:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "4978:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4987:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4978:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1826,
												"nodeType": "IfStatement",
												"src": "4974:79:2",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "4990:63:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1821,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "5031:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1822,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "5035:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1818,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "5011:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1817,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2293,
																			"src": "5004:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$2293_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5004:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2293",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2540,
																	"src": "5004:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2293_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5004:38:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1824,
															"nodeType": "ExpressionStatement",
															"src": "5004:38:2"
														}
													]
												}
											}
										]
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferMargin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "4912:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4912:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "4924:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "4939:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4939:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4911:43:2"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4964:0:2"
									},
									"scope": 1883,
									"src": "4888:171:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "5126:292:2",
										"statements": [
											{
												"assignments": [
													1839
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "tokens",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "5136:24:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5136:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1838,
															"nodeType": "ArrayTypeName",
															"src": "5136:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1843,
												"initialValue": {
													"baseExpression": {
														"id": 1840,
														"name": "makerMarginTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "5163:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1842,
													"indexExpression": {
														"id": 1841,
														"name": "maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "5181:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5163:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5136:51:2"
											},
											{
												"body": {
													"id": 1879,
													"nodeType": "Block",
													"src": "5241:171:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1855,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "5259:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 1857,
																	"indexExpression": {
																		"id": 1856,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "5266:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5259:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1858,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "5272:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5259:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1878,
															"nodeType": "IfStatement",
															"src": "5255:147:2",
															"trueBody": {
																"id": 1877,
																"nodeType": "Block",
																"src": "5279:123:2",
																"statements": [
																	{
																		"expression": {
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1860,
																					"name": "tokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "5297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 1862,
																				"indexExpression": {
																					"id": 1861,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1845,
																					"src": "5304:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5297:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1863,
																					"name": "tokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "5309:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 1868,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1864,
																							"name": "tokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1839,
																							"src": "5316:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																								"typeString": "address[] storage pointer"
																							}
																						},
																						"id": 1865,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "5316:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5332:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5316:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5309:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5297:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1870,
																		"nodeType": "ExpressionStatement",
																		"src": "5297:37:2"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1871,
																					"name": "tokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "5352:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 1873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5352:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 1874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5352:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1875,
																		"nodeType": "ExpressionStatement",
																		"src": "5352:12:2"
																	},
																	{
																		"id": 1876,
																		"nodeType": "Break",
																		"src": "5382:5:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1848,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "5217:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1849,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "5221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5221:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5217:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1880,
												"initializationExpression": {
													"assignments": [
														1845
													],
													"declarations": [
														{
															"constant": false,
															"id": 1845,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1880,
															"src": "5202:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1844,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5202:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1847,
													"initialValue": {
														"hexValue": "30",
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5214:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5202:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5236:3:2",
														"subExpression": {
															"id": 1852,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "5236:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1854,
													"nodeType": "ExpressionStatement",
													"src": "5236:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5197:215:2"
											}
										]
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "5102:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5086:30:2"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5126:0:2"
									},
									"scope": 1883,
									"src": "5065:353:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1884,
							"src": "2562:2858:2"
						}
					],
					"src": "1031:4389:2"
				},
				"id": 2
			},
			"ShockSpace/imports/Address.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/Address.sol",
					"exportedSymbols": {
						"Address": [
							2213
						]
					},
					"id": 2214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1886,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2213,
							"linearizedBaseContracts": [
								2213
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "1478:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1894,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "1702:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1893,
												"id": 1899,
												"nodeType": "Return",
												"src": "1695:30:3"
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "1432:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:3"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "1472:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:3"
									},
									"scope": 2213,
									"src": "1412:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "2718:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1912,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2213",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2213",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1910,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1915,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "2761:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:3"
											},
											{
												"assignments": [
													1921,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1921,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1934,
														"src": "2813:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1920,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1928,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1922,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "2831:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1924,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "2853:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1930,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "2882:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1933,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:3"
											}
										]
									},
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2666:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2693:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:3"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:3"
									},
									"scope": 2213,
									"src": "2647:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1952,
										"nodeType": "Block",
										"src": "3790:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1946,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "3829:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1947,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "3837:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1945,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1993,
															2037
														],
														"referencedDeclaration": 2037,
														"src": "3807:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1944,
												"id": 1951,
												"nodeType": "Return",
												"src": "3800:79:3"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "3723:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "3739:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:3"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:3"
									},
									"scope": 2213,
									"src": "3701:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "4255:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1966,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "4294:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1967,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "4302:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1969,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "4311:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1965,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1993,
															2037
														],
														"referencedDeclaration": 2037,
														"src": "4272:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1964,
												"id": 1971,
												"nodeType": "Return",
												"src": "4265:59:3"
											}
										]
									},
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "4139:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "4163:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "4190:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1959,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:3"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "4241:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:3"
									},
									"scope": 2213,
									"src": "4108:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "4806:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1986,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "4845:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1987,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "4853:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1988,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1980,
															"src": "4859:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1985,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1993,
															2037
														],
														"referencedDeclaration": 2037,
														"src": "4823:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1984,
												"id": 1991,
												"nodeType": "Return",
												"src": "4816:94:3"
											}
										]
									},
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "4724:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "4740:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "4759:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:3"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "4792:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:3"
									},
									"scope": 2213,
									"src": "4693:224:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2036,
										"nodeType": "Block",
										"src": "5344:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2010,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2213",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2213",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2008,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2013,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "5387:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:3"
											},
											{
												"assignments": [
													2019,
													2021
												],
												"declarations": [
													{
														"constant": false,
														"id": 2019,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2036,
														"src": "5446:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2018,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2021,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 2036,
														"src": "5460:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2020,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"arguments": [
														{
															"id": 2026,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "5513:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2022,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "5487:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2024,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "5506:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2030,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "5562:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2031,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "5570:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2032,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "5579:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2033,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "5591:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2029,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "5535:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2006,
												"id": 2035,
												"nodeType": "Return",
												"src": "5528:76:3"
											}
										]
									},
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "5205:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "5229:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "5256:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "5279:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:3"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "5330:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2004,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:3"
									},
									"scope": 2213,
									"src": "5165:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "5888:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2048,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "5924:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2049,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "5932:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2047,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2054,
															2083
														],
														"referencedDeclaration": 2083,
														"src": "5905:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2046,
												"id": 2052,
												"nodeType": "Return",
												"src": "5898:80:3"
											}
										]
									},
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "5816:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "5832:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:3"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "5874:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:3"
									},
									"scope": 2213,
									"src": "5788:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "6327:168:3",
										"statements": [
											{
												"assignments": [
													2067,
													2069
												],
												"declarations": [
													{
														"constant": false,
														"id": 2067,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2082,
														"src": "6338:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2066,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2069,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 2082,
														"src": "6352:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2068,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2074,
												"initialValue": {
													"arguments": [
														{
															"id": 2072,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "6397:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2070,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "6379:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2076,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "6446:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2077,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "6454:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2078,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "6463:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2079,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "6475:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2075,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "6419:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2065,
												"id": 2081,
												"nodeType": "Return",
												"src": "6412:76:3"
											}
										]
									},
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "6206:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "6230:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "6257:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:3"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "6313:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2063,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:3"
									},
									"scope": 2213,
									"src": "6169:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "6771:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2094,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "6809:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2095,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "6817:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2093,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2100,
															2129
														],
														"referencedDeclaration": 2129,
														"src": "6788:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2092,
												"id": 2098,
												"nodeType": "Return",
												"src": "6781:84:3"
											}
										]
									},
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6704:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6720:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:3"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "6757:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:3"
									},
									"scope": 2213,
									"src": "6674:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2128,
										"nodeType": "Block",
										"src": "7213:170:3",
										"statements": [
											{
												"assignments": [
													2113,
													2115
												],
												"declarations": [
													{
														"constant": false,
														"id": 2113,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2128,
														"src": "7224:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2112,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2115,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 2128,
														"src": "7238:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2114,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2120,
												"initialValue": {
													"arguments": [
														{
															"id": 2118,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "7285:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2116,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "7265:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2122,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "7334:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2123,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "7342:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2124,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "7351:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2125,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "7363:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2121,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "7307:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2111,
												"id": 2127,
												"nodeType": "Return",
												"src": "7300:76:3"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "7097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "7121:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "7148:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:3"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "7199:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:3"
									},
									"scope": 2213,
									"src": "7058:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "7865:434:3",
										"statements": [
											{
												"condition": {
													"id": 2143,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2134,
													"src": "7879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2165,
													"nodeType": "Block",
													"src": "8235:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2161,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "8257:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2162,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2138,
																		"src": "8269:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2160,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "8249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2164,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:3"
														}
													]
												},
												"id": 2166,
												"nodeType": "IfStatement",
												"src": "7875:418:3",
												"trueBody": {
													"id": 2159,
													"nodeType": "Block",
													"src": "7888:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2144,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "7906:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2156,
															"nodeType": "IfStatement",
															"src": "7902:286:3",
															"trueBody": {
																"id": 2155,
																"nodeType": "Block",
																"src": "7930:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2150,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2132,
																							"src": "8132:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2149,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1901,
																						"src": "8121:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2152,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2148,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2154,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2157,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "8208:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2142,
															"id": 2158,
															"nodeType": "Return",
															"src": "8201:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "7716:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "7740:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "7762:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "7795:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2137,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:3"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "7851:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2140,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:3"
									},
									"scope": 2213,
									"src": "7671:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "8680:135:3",
										"statements": [
											{
												"condition": {
													"id": 2180,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2171,
													"src": "8694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2189,
													"nodeType": "Block",
													"src": "8751:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2185,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "8773:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2186,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2175,
																		"src": "8785:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2184,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "8765:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2188,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:3"
														}
													]
												},
												"id": 2190,
												"nodeType": "IfStatement",
												"src": "8690:119:3",
												"trueBody": {
													"id": 2183,
													"nodeType": "Block",
													"src": "8703:42:3",
													"statements": [
														{
															"expression": {
																"id": 2181,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "8724:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2179,
															"id": 2182,
															"nodeType": "Return",
															"src": "8717:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "8555:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "8577:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2172,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "8610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:3"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "8666:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:3"
									},
									"scope": 2213,
									"src": "8520:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "8904:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2199,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "8980:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2209,
													"nodeType": "Block",
													"src": "9310:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2206,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "9331:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2205,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2208,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:3"
														}
													]
												},
												"id": 2210,
												"nodeType": "IfStatement",
												"src": "8976:379:3",
												"trueBody": {
													"id": 2204,
													"nodeType": "Block",
													"src": "9003:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:3"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 2194,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 2194,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:3",
																	"valueSize": 1
																}
															],
															"id": 2203,
															"nodeType": "InlineAssembly",
															"src": "9152:142:3"
														}
													]
												}
											}
										]
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "8838:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "8863:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:3"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:3"
									},
									"scope": 2213,
									"src": "8821:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2214,
							"src": "194:9169:3"
						}
					],
					"src": "101:9263:3"
				},
				"id": 3
			},
			"ShockSpace/imports/Context.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/Context.sol",
					"exportedSymbols": {
						"Context": [
							2235
						]
					},
					"id": 2236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2216,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2235,
							"linearizedBaseContracts": [
								2235
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2221,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2220,
												"id": 2223,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 2235,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2230,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2229,
												"id": 2232,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 2235,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2236,
							"src": "608:235:4"
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"ShockSpace/imports/IERC20.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2293
						]
					},
					"id": 2294,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2237,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2293,
							"linearizedBaseContracts": [
								2293
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 2242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:5"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "132:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2239,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "132:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:7:5"
									},
									"scope": 2293,
									"src": "89:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 2247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:2:5"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "190:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:9:5"
									},
									"scope": 2293,
									"src": "144:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 2254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "257:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:17:5"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "297:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:9:5"
									},
									"scope": 2293,
									"src": "238:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 2263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "330:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "345:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:32:5"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "385:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:9:5"
									},
									"scope": 2293,
									"src": "311:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "417:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "429:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:28:5"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "463:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "463:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:6:5"
									},
									"scope": 2293,
									"src": "399:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "496:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "510:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "522:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:42:5"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "556:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "556:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:6:5"
									},
									"scope": 2293,
									"src": "474:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 2292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "584:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "601:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:33:5"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "635:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "635:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:6:5"
									},
									"scope": 2293,
									"src": "567:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2294,
							"src": "66:577:5"
						}
					],
					"src": "41:602:5"
				},
				"id": 5
			},
			"ShockSpace/imports/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							2329
						]
					},
					"id": 2330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2296,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:6",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 2329,
							"linearizedBaseContracts": [
								2329
							],
							"name": "IERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:6",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 2314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "1480:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "1503:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "1528:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "1551:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "1577:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2306,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "1594:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "1613:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:6"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:6"
									},
									"scope": 2329,
									"src": "1455:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 2322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "1959:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:6"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "1997:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:6"
									},
									"scope": 2329,
									"src": "1943:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 2328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:6"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "2249:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2325,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:6"
									},
									"scope": 2329,
									"src": "2198:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2330,
							"src": "629:1631:6"
						}
					],
					"src": "123:2138:6"
				},
				"id": 6
			},
			"ShockSpace/imports/Ownable.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2235
						],
						"Ownable": [
							2442
						]
					},
					"id": 2443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:7"
						},
						{
							"absolutePath": "ShockSpace/imports/Context.sol",
							"file": "./Context.sol",
							"id": 2332,
							"nodeType": "ImportDirective",
							"scope": 2443,
							"sourceUnit": 2236,
							"src": "127:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2334,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2235,
										"src": "676:7:7"
									},
									"id": 2335,
									"nodeType": "InheritanceSpecifier",
									"src": "676:7:7"
								}
							],
							"contractDependencies": [
								2235
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2333,
								"nodeType": "StructuredDocumentation",
								"src": "152:494:7",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2442,
							"linearizedBaseContracts": [
								2442,
								2235
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2337,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 2442,
									"src": "690:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2336,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2343,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "746:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "777:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:57:7"
									},
									"src": "719:84:7"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "919:49:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2348,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "948:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "948:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2347,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2441,
														"src": "929:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2351,
												"nodeType": "ExpressionStatement",
												"src": "929:32:7"
											}
										]
									},
									"documentation": {
										"id": 2344,
										"nodeType": "StructuredDocumentation",
										"src": "809:91:7",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2353,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:7"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "919:0:7"
									},
									"scope": 2442,
									"src": "905:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "1077:41:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2356,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "1087:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2358,
												"nodeType": "ExpressionStatement",
												"src": "1087:13:7"
											},
											{
												"id": 2359,
												"nodeType": "PlaceholderStatement",
												"src": "1110:1:7"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "974:77:7",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2361,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:7"
									},
									"src": "1056:62:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "1249:30:7",
										"statements": [
											{
												"expression": {
													"id": 2367,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2337,
													"src": "1266:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2366,
												"id": 2368,
												"nodeType": "Return",
												"src": "1259:13:7"
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "1124:65:7",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:2:7"
									},
									"returnParameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "1240:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:9:7"
									},
									"scope": 2442,
									"src": "1194:85:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "1397:85:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2375,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2370,
																	"src": "1415:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1415:7:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2377,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "1426:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1426:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1415:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1440:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1407:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "1407:68:7"
											}
										]
									},
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "1285:62:7",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:2:7"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:0:7"
									},
									"scope": 2442,
									"src": "1352:130:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2397,
										"nodeType": "Block",
										"src": "1871:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1908:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1900:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2391,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1900:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1900:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2390,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2441,
														"src": "1881:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2396,
												"nodeType": "ExpressionStatement",
												"src": "1881:30:7"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "1488:324:7",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2398,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2388,
											"modifierName": {
												"id": 2387,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2361,
												"src": "1861:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1861:9:7"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1843:2:7"
									},
									"returnParameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:0:7"
									},
									"scope": 2442,
									"src": "1817:101:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2420,
										"nodeType": "Block",
										"src": "2137:128:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2407,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2401,
																"src": "2155:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2175:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2167:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2408,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2167:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2167:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2155:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2179:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2147:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2415,
												"nodeType": "ExpressionStatement",
												"src": "2147:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2417,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "2249:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2416,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2441,
														"src": "2230:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2230:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2419,
												"nodeType": "ExpressionStatement",
												"src": "2230:28:7"
											}
										]
									},
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "1924:138:7",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2421,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2404,
											"modifierName": {
												"id": 2403,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2361,
												"src": "2127:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2127:9:7"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "2094:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:18:7"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2137:0:7"
									},
									"scope": 2442,
									"src": "2067:198:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2440,
										"nodeType": "Block",
										"src": "2482:124:7",
										"statements": [
											{
												"assignments": [
													2428
												],
												"declarations": [
													{
														"constant": false,
														"id": 2428,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 2440,
														"src": "2492:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2427,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2492:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2430,
												"initialValue": {
													"id": 2429,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2337,
													"src": "2511:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2492:25:7"
											},
											{
												"expression": {
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2431,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "2527:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2432,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2424,
														"src": "2536:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2527:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2434,
												"nodeType": "ExpressionStatement",
												"src": "2527:17:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2436,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "2580:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2437,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "2590:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2435,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2343,
														"src": "2559:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2559:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2439,
												"nodeType": "EmitStatement",
												"src": "2554:45:7"
											}
										]
									},
									"documentation": {
										"id": 2422,
										"nodeType": "StructuredDocumentation",
										"src": "2271:143:7",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "2447:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:18:7"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2482:0:7"
									},
									"scope": 2442,
									"src": "2419:187:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2443,
							"src": "647:1961:7"
						}
					],
					"src": "102:2507:7"
				},
				"id": 7
			},
			"ShockSpace/imports/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							2507
						]
					},
					"id": 2508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2445,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:8",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 2507,
							"linearizedBaseContracts": [
								2507
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2448,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 2507,
									"src": "1676:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2447,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2451,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 2507,
									"src": "1723:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2449,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2450,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2453,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 2507,
									"src": "1767:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2452,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "1811:39:8",
										"statements": [
											{
												"expression": {
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2456,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "1821:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2457,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2448,
														"src": "1831:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2459,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:8"
											}
										]
									},
									"id": 2461,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:8"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:8"
									},
									"scope": 2507,
									"src": "1797:53:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2471,
										"nodeType": "Block",
										"src": "2251:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2464,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2487,
														"src": "2261:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:8"
											},
											{
												"id": 2467,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2468,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2495,
														"src": "2303:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2470,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:8"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:8",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 2472,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:8"
									},
									"src": "2227:103:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "2375:248:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2476,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2453,
																"src": "2468:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2477,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2451,
																"src": "2479:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:8"
											},
											{
												"expression": {
													"id": 2484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2482,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "2598:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2483,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "2608:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2485,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:8"
											}
										]
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:8"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:8"
									},
									"scope": 2507,
									"src": "2336:287:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "2667:171:8",
										"statements": [
											{
												"expression": {
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2490,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "2809:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2491,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2448,
														"src": "2819:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:8"
											}
										]
									},
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:8"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:8"
									},
									"scope": 2507,
									"src": "2629:209:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2505,
										"nodeType": "Block",
										"src": "3081:43:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2501,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "3098:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2502,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "3109:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2500,
												"id": 2504,
												"nodeType": "Return",
												"src": "3091:26:8"
											}
										]
									},
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:8",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 2506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:8"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "3075:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:8"
									},
									"scope": 2507,
									"src": "3017:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2508,
							"src": "888:2238:8"
						}
					],
					"src": "112:3015:8"
				},
				"id": 8
			},
			"ShockSpace/imports/SafeERC20.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2213
						],
						"IERC20": [
							2293
						],
						"IERC20Permit": [
							2329
						],
						"SafeERC20": [
							2883
						]
					},
					"id": 2884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:9"
						},
						{
							"absolutePath": "ShockSpace/imports/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2510,
							"nodeType": "ImportDirective",
							"scope": 2884,
							"sourceUnit": 2294,
							"src": "140:22:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShockSpace/imports/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 2511,
							"nodeType": "ImportDirective",
							"scope": 2884,
							"sourceUnit": 2330,
							"src": "163:28:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShockSpace/imports/Address.sol",
							"file": "./Address.sol",
							"id": 2512,
							"nodeType": "ImportDirective",
							"scope": 2884,
							"sourceUnit": 2214,
							"src": "192:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2513,
								"nodeType": "StructuredDocumentation",
								"src": "217:457:9",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2883,
							"linearizedBaseContracts": [
								2883
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2516,
									"libraryName": {
										"id": 2514,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2213,
										"src": "705:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "699:26:9",
									"typeName": {
										"id": 2515,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "717:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2539,
										"nodeType": "Block",
										"src": "987:103:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2528,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "1017:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2531,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2520,
																			"src": "1047:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2293",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2272,
																		"src": "1047:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1047:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2534,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "1072:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2535,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2524,
																	"src": "1076:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2529,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1024:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1024:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1024:58:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2527,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "997:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:86:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2538,
												"nodeType": "ExpressionStatement",
												"src": "997:86:9"
											}
										]
									},
									"documentation": {
										"id": 2517,
										"nodeType": "StructuredDocumentation",
										"src": "731:179:9",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "937:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2293",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2518,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "937:6:9"
													},
													"referencedDeclaration": 2293,
													"src": "937:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2293",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "951:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "963:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:41:9"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:9"
									},
									"scope": 2883,
									"src": "915:175:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2566,
										"nodeType": "Block",
										"src": "1419:113:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2554,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "1449:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2557,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2544,
																			"src": "1479:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2293",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2283,
																		"src": "1479:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1479:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2560,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "1508:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2561,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2548,
																	"src": "1514:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2550,
																	"src": "1518:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2555,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1456:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1456:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1456:68:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2553,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "1429:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1429:96:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2565,
												"nodeType": "ExpressionStatement",
												"src": "1429:96:9"
											}
										]
									},
									"documentation": {
										"id": 2541,
										"nodeType": "StructuredDocumentation",
										"src": "1096:228:9",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 2567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "1355:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2293",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2542,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "1355:6:9"
													},
													"referencedDeclaration": 2293,
													"src": "1355:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2293",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "1369:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "1383:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "1395:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:55:9"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:0:9"
									},
									"scope": 2883,
									"src": "1329:203:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "1868:497:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2579,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "2117:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2126:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2117:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2116:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2587,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2157:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2883",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2883",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2586,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2149:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2585,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2149:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2588,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2149:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2589,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2573,
																					"src": "2164:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2583,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2571,
																					"src": "2133:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2293",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2263,
																				"src": "2133:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2133:39:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2176:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2133:44:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2593,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2132:46:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2116:62:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2192:56:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2095:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:163:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2597,
												"nodeType": "ExpressionStatement",
												"src": "2095:163:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2599,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "2288:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2602,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2571,
																			"src": "2318:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2293",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2292,
																		"src": "2318:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2318:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2605,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "2342:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2606,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2575,
																	"src": "2351:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2600,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2295:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2295:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2295:62:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2598,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "2268:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2609,
												"nodeType": "ExpressionStatement",
												"src": "2268:90:9"
											}
										]
									},
									"documentation": {
										"id": 2568,
										"nodeType": "StructuredDocumentation",
										"src": "1538:249:9",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "1813:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2293",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2569,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "1813:6:9"
													},
													"referencedDeclaration": 2293,
													"src": "1813:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2293",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "1827:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "1844:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:46:9"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1868:0:9"
									},
									"scope": 2883,
									"src": "1792:573:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "2642:194:9",
										"statements": [
											{
												"assignments": [
													2623
												],
												"declarations": [
													{
														"constant": false,
														"id": 2623,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 2647,
														"src": "2652:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2652:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2632,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2628,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2699:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$2883",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$2883",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2691:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2626,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2691:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2691:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2630,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2617,
															"src": "2706:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2624,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "2675:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															}
														},
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2263,
														"src": "2675:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2652:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2634,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "2744:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2637,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "2774:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2293",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2292,
																		"src": "2774:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2774:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2640,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2617,
																	"src": "2798:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2641,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "2807:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2642,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "2822:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2807:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2635,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2751:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2751:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2751:77:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2293",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2633,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "2724:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2724:105:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2646,
												"nodeType": "ExpressionStatement",
												"src": "2724:105:9"
											}
										]
									},
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "2371:180:9",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "2587:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2293",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2613,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "2587:6:9"
													},
													"referencedDeclaration": 2293,
													"src": "2587:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2293",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "2601:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2601:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "2618:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:46:9"
									},
									"returnParameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:0:9"
									},
									"scope": 2883,
									"src": "2556:280:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2692,
										"nodeType": "Block",
										"src": "3113:321:9",
										"statements": [
											{
												"id": 2691,
												"nodeType": "UncheckedBlock",
												"src": "3123:305:9",
												"statements": [
													{
														"assignments": [
															2660
														],
														"declarations": [
															{
																"constant": false,
																"id": 2660,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 2691,
																"src": "3147:20:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2659,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3147:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2669,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2665,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3194:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2883",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2883",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3186:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2663,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3186:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3186:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2667,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "3201:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2661,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2652,
																	"src": "3170:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2293",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2263,
																"src": "3170:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3170:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3147:62:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2671,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2660,
																		"src": "3231:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2672,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2656,
																		"src": "3247:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3231:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3254:43:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2670,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3223:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3223:75:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2676,
														"nodeType": "ExpressionStatement",
														"src": "3223:75:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2652,
																	"src": "3332:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2293",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2681,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2652,
																					"src": "3362:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2293",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2292,
																				"src": "3362:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3362:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2684,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2654,
																			"src": "3386:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2685,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2660,
																				"src": "3395:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2686,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2656,
																				"src": "3410:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3395:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2679,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3339:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3339:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3339:77:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2293",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2677,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "3312:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3312:105:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2690,
														"nodeType": "ExpressionStatement",
														"src": "3312:105:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "2842:180:9",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2293",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2650,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "3058:6:9"
													},
													"referencedDeclaration": 2293,
													"src": "3058:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2293",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "3072:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2693,
												"src": "3089:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:46:9"
									},
									"returnParameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:9"
									},
									"scope": 2883,
									"src": "3027:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "3807:333:9",
										"statements": [
											{
												"assignments": [
													2705
												],
												"declarations": [
													{
														"constant": false,
														"id": 2705,
														"mutability": "mutable",
														"name": "approvalCall",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "3817:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2704,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3817:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2714,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 2708,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2697,
																	"src": "3868:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2293",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2292,
																"src": "3868:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3868:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 2711,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "3892:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2712,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2701,
															"src": "3901:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2706,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3845:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3845:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3845:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3817:90:9"
											},
											{
												"condition": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3922:45:9",
													"subExpression": {
														"arguments": [
															{
																"id": 2716,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2697,
																"src": "3947:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2293",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 2717,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2705,
																"src": "3954:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$2293",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2715,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2882,
															"src": "3923:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 2718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3923:44:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2738,
												"nodeType": "IfStatement",
												"src": "3918:216:9",
												"trueBody": {
													"id": 2737,
													"nodeType": "Block",
													"src": "3969:165:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2721,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2697,
																		"src": "4003:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2293",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 2724,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2697,
																						"src": "4033:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$2293",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 2725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2292,
																					"src": "4033:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 2726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4033:22:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 2727,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2699,
																				"src": "4057:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 2728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4066:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 2722,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4010:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4010:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4010:58:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$2293",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2720,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2834,
																	"src": "3983:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3983:86:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2731,
															"nodeType": "ExpressionStatement",
															"src": "3983:86:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2733,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2697,
																		"src": "4103:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2293",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 2734,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2705,
																		"src": "4110:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$2293",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2732,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2834,
																	"src": "4083:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2293_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 2735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4083:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2736,
															"nodeType": "ExpressionStatement",
															"src": "4083:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2694,
										"nodeType": "StructuredDocumentation",
										"src": "3440:285:9",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."
									},
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "3752:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2293",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2696,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2695,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "3752:6:9"
													},
													"referencedDeclaration": 2293,
													"src": "3752:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2293",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "3766:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "3783:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:46:9"
									},
									"returnParameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3807:0:9"
									},
									"scope": 2883,
									"src": "3730:410:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "4507:257:9",
										"statements": [
											{
												"assignments": [
													2762
												],
												"declarations": [
													{
														"constant": false,
														"id": 2762,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nodeType": "VariableDeclaration",
														"scope": 2796,
														"src": "4517:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4517:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2767,
												"initialValue": {
													"arguments": [
														{
															"id": 2765,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "4552:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2763,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "4539:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$2329",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2322,
														"src": "4539:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4539:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4517:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2771,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "4581:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2772,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2748,
															"src": "4588:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2773,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "4597:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2774,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "4604:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2775,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2754,
															"src": "4614:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2776,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "4617:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2777,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "4620:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2768,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "4568:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$2329",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2314,
														"src": "4568:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 2778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2779,
												"nodeType": "ExpressionStatement",
												"src": "4568:54:9"
											},
											{
												"assignments": [
													2781
												],
												"declarations": [
													{
														"constant": false,
														"id": 2781,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nodeType": "VariableDeclaration",
														"scope": 2796,
														"src": "4632:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4632:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2786,
												"initialValue": {
													"arguments": [
														{
															"id": 2784,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "4666:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2782,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "4653:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$2329",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2322,
														"src": "4653:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4653:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4632:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2788,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2781,
																"src": "4690:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2789,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2762,
																	"src": "4704:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4718:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4704:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4690:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 2793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4721:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 2787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4682:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4682:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2795,
												"nodeType": "ExpressionStatement",
												"src": "4682:75:9"
											}
										]
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "4146:141:9",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4321:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$2329",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 2743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2742,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2329,
														"src": "4321:12:9"
													},
													"referencedDeclaration": 2329,
													"src": "4321:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$2329",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4349:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4349:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4372:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4397:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4397:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4420:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4446:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2753,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4446:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4463:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2755,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4463:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "4482:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2757,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4311:186:9"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4507:0:9"
									},
									"scope": 2883,
									"src": "4292:472:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2833,
										"nodeType": "Block",
										"src": "5217:572:9",
										"statements": [
											{
												"assignments": [
													2807
												],
												"declarations": [
													{
														"constant": false,
														"id": 2807,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 2833,
														"src": "5566:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2806,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5566:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2816,
												"initialValue": {
													"arguments": [
														{
															"id": 2813,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2803,
															"src": "5620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5626:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2810,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2801,
																	"src": "5600:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2293",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2293",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5592:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2808,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5592:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5592:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1973,
														"src": "5592:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5566:95:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2818,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2807,
																		"src": "5679:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5679:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5700:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5679:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2824,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2807,
																		"src": "5716:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 2826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5729:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 2825,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5729:4:9",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 2827,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5728:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 2822,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5705:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5705:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5705:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5679:56:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5737:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 2817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5671:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2832,
												"nodeType": "ExpressionStatement",
												"src": "5671:111:9"
											}
										]
									},
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "4770:372:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "5176:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2293",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2799,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "5176:6:9"
													},
													"referencedDeclaration": 2293,
													"src": "5176:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2293",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "5190:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5190:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5175:33:9"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5217:0:9"
									},
									"scope": 2883,
									"src": "5147:642:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2881,
										"nodeType": "Block",
										"src": "6379:505:9",
										"statements": [
											{
												"assignments": [
													2846,
													2848
												],
												"declarations": [
													{
														"constant": false,
														"id": 2846,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 2881,
														"src": "6675:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2845,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2848,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 2881,
														"src": "6689:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2847,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6689:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2856,
												"initialValue": {
													"arguments": [
														{
															"id": 2854,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2840,
															"src": "6736:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2851,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2838,
																	"src": "6724:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2293",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2293",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6716:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6716:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6716:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6716:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6674:67:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2857,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2846,
															"src": "6770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2858,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2848,
																				"src": "6782:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6782:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6803:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6782:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2864,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2848,
																				"src": "6819:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6832:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2865,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6832:4:9",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2867,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6831:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2862,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6808:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6808:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6808:30:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6782:56:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2870,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6781:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6770:69:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2876,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2838,
																		"src": "6870:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2293",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$2293",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6862:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2874,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6862:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6862:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2872,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "6843:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$2213_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 2873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1901,
															"src": "6843:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6843:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6770:107:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2844,
												"id": 2880,
												"nodeType": "Return",
												"src": "6751:126:9"
											}
										]
									},
									"documentation": {
										"id": 2835,
										"nodeType": "StructuredDocumentation",
										"src": "5795:490:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 2882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "6323:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2293",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2837,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2836,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "6323:6:9"
													},
													"referencedDeclaration": 2293,
													"src": "6323:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2293",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "6337:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6337:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6322:33:9"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "6373:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6373:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6372:6:9"
									},
									"scope": 2883,
									"src": "6290:594:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2884,
							"src": "675:6211:9"
						}
					],
					"src": "115:6772:9"
				},
				"id": 9
			}
		}
	}
}