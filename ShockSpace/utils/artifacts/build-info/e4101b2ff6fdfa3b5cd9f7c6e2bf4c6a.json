{
	"id": "e4101b2ff6fdfa3b5cd9f7c6e2bf4c6a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"ShockSpace/utils/SSSettlementPartial.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\npragma solidity ^0.8.1;\n\n// Version: 0.0.16\n// Changes:\n// - v0.0.16: Removed _processBuyOrderUpdate/_processSellOrderUpdate. Added _prepBuyOrderUpdate, _prepSellOrderUpdate, _executeBuyOrderUpdate, _executeSellOrderUpdate to separate data preparation and execution. Updated _createOrderUpdates to accept pendingAmount. Updated executeBuyOrder/executeSellOrder to use new prep/execute functions (lines 60-150).\n// - v0.0.15: Added helper functions _getTokenAndDecimals, _executeTransaction, _createOrderUpdates. Refactored _processBuyOrderUpdate and _processSellOrderUpdate to use helpers to reduce stack depth (lines 60-120).\n// - v0.0.14: Split _processOrderUpdate into _processBuyOrderUpdate and _processSellOrderUpdate to reduce stack depth. Added executeLongPayout and executeShortPayout, refactored executeLongPayouts and executeShortPayouts with try-catch to prevent stack issues (lines 60-200).\n// - v0.0.13: Added executeBuyOrder and executeSellOrder functions, refactored executeBuyOrders and executeSellOrders with try-catch to reduce stack depth, updated _processOrderUpdate to return UpdateType array (lines 100-200).\n// - v0.0.12: Removed ISSListingTemplate interface to avoid duplication with SSMainPartial.sol (v0.0.8). Imported ISSListingTemplate from SSMainPartial.sol. Updated normalize to pure to match SSMainPartial.sol and SSListingTemplate.sol (v0.0.7).\n// - v0.0.11: Fixed TypeError in executeShortPayouts by updating ISSListingTemplate.ShortPayoutStruct to use 'amount' instead of 'required' to match SSListingTemplate.sol (v0.0.7). Updated executeShortPayouts to use payout.amount.\n// - v0.0.11: Validated ISSListingTemplate interface against SSListingTemplate.sol (v0.0.7) for consistency in LongPayoutStruct, UpdateType, and function signatures.\n// - v0.0.10: Fixed TypeError in executeBuyOrders and executeSellOrders by adding explicit tuple destructuring for getBuyOrderCore/getSellOrderCore to access makerAddress and recipientAddress.\n// - v0.0.9: Fixed ParserError in _processOrderUpdate by correcting tuple destructuring syntax for getBuyOrderCore/getSellOrderCore to include all tuple elements explicitly.\n// - v0.0.8: Fixed TypeError in _processOrderUpdate by adding missing struct fields (structId, maxPrice, minPrice) and explicit tuple destructuring for getBuyOrderCore/getSellOrderCore.\n// - v0.0.7: Removed ISSAgent.globalizeOrders from _processOrderUpdate, globalization handled by SSListingTemplate.\n// - v0.0.7: Fixed syntax errors from artifact (c4f5e6a7-b8c9-49bc-1234-f56789abcdef0).\n// - v0.0.7: Restored _processOrderUpdate logic to match SSSettlementPartial.txt, excluding globalizeOrders.\n// - v0.0.7: Corrected _processPayoutUpdate status logic (3 : 2) and parameter typing.\n// - v0.0.7: Ensured compatibility with SSListingTemplate.sol (v0.0.5), SSLiquidityTemplate.sol (v0.0.4).\n\nimport \"./SSOrderPartial.sol\";\n\ncontract SSSettlementPartial is SSOrderPartial {\n    function _computeImpact(\n        address listing,\n        uint256 amount,\n        bool isBuy\n    ) internal view returns (uint256) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        (uint256 xBalance, uint256 yBalance, , ) = listingContract.listingVolumeBalancesView();\n        if (isBuy) {\n            uint256 newY = yBalance + amount;\n            return newY > 0 ? (xBalance * 1e18) / newY : 0;\n        } else {\n            uint256 newX = xBalance + amount;\n            return newX > 0 ? (yBalance * 1e18) / newX : 0;\n        }\n    }\n\n    function _getTokenAndDecimals(\n        address listing,\n        bool isBuy\n    ) internal view returns (address tokenAddress, uint8 decimals) {\n        tokenAddress = isBuy ? tokenB[listing] : tokenA[listing];\n        decimals = isBuy ? decimalsB[listing] : decimalsA[listing];\n    }\n\n    function _executeTransaction(\n        address listing,\n        address tokenAddress,\n        uint256 amount,\n        address recipient\n    ) internal returns (uint256 amountReceived, uint256 normalizedReceived) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        uint8 decimals = tokenAddress == address(0) ? 18 : IERC20(tokenAddress).decimals();\n        uint256 preBalance = tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this));\n        listingContract.transact(address(this), tokenAddress, amount, recipient);\n        uint256 postBalance = tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this));\n        amountReceived = postBalance > preBalance ? postBalance - preBalance : 0;\n        normalizedReceived = amountReceived > 0 ? listingContract.normalize(amountReceived, decimals) : 0;\n    }\n\n    function _createOrderUpdates(\n        uint256 orderId,\n        uint256 normalizedReceived,\n        address makerAddress,\n        address recipient,\n        uint8 status,\n        bool isBuy,\n        uint256 pendingAmount\n    ) internal pure returns (ISSListingTemplate.UpdateType[] memory) {\n        ISSListingTemplate.UpdateType[] memory updates = new ISSListingTemplate.UpdateType[](2);\n        updates[0] = ISSListingTemplate.UpdateType({\n            updateType: isBuy ? 1 : 2,\n            structId: 2,\n            index: orderId,\n            value: normalizedReceived,\n            addr: address(0),\n            recipient: address(0),\n            maxPrice: 0,\n            minPrice: 0\n        });\n        updates[1] = ISSListingTemplate.UpdateType({\n            updateType: isBuy ? 1 : 2,\n            structId: 0,\n            index: orderId,\n            value: status == 1 && normalizedReceived >= pendingAmount ? 3 : 2,\n            addr: makerAddress,\n            recipient: recipient,\n            maxPrice: 0,\n            minPrice: 0\n        });\n        return updates;\n    }\n\n    function _prepBuyOrderUpdate(\n        address listing,\n        uint256 orderId,\n        uint256 amount\n    ) internal returns (\n        address tokenAddress,\n        uint8 decimals,\n        address makerAddress,\n        address recipient,\n        uint8 status,\n        uint256 amountReceived,\n        uint256 normalizedReceived\n    ) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        (tokenAddress, decimals) = _getTokenAndDecimals(listing, true);\n        (makerAddress, recipient, status) = listingContract.getBuyOrderCore(orderId);\n        (amountReceived, normalizedReceived) = _executeTransaction(listing, tokenAddress, amount, recipient);\n    }\n\n    function _prepSellOrderUpdate(\n        address listing,\n        uint256 orderId,\n        uint256 amount\n    ) internal returns (\n        address tokenAddress,\n        uint8 decimals,\n        address makerAddress,\n        address recipient,\n        uint8 status,\n        uint256 amountReceived,\n        uint256 normalizedReceived\n    ) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        (tokenAddress, decimals) = _getTokenAndDecimals(listing, false);\n        (makerAddress, recipient, status) = listingContract.getSellOrderCore(orderId);\n        (amountReceived, normalizedReceived) = _executeTransaction(listing, tokenAddress, amount, recipient);\n    }\n\n    function _executeBuyOrderUpdate(\n        address listing,\n        uint256 orderId,\n        uint256 normalizedReceived,\n        address makerAddress,\n        address recipient,\n        uint8 status\n    ) internal returns (ISSListingTemplate.UpdateType[] memory) {\n        if (normalizedReceived == 0) {\n            return new ISSListingTemplate.UpdateType[](0);\n        }\n        uint256 pendingAmount = orderPendingAmounts[listing][orderId];\n        ISSListingTemplate.UpdateType[] memory updates = _createOrderUpdates(\n            orderId,\n            normalizedReceived,\n            makerAddress,\n            recipient,\n            status,\n            true,\n            pendingAmount\n        );\n        orderPendingAmounts[listing][orderId] -= normalizedReceived;\n        return updates;\n    }\n\n    function _executeSellOrderUpdate(\n        address listing,\n        uint256 orderId,\n        uint256 normalizedReceived,\n        address makerAddress,\n        address recipient,\n        uint8 status\n    ) internal returns (ISSListingTemplate.UpdateType[] memory) {\n        if (normalizedReceived == 0) {\n            return new ISSListingTemplate.UpdateType[](0);\n        }\n        uint256 pendingAmount = orderPendingAmounts[listing][orderId];\n        ISSListingTemplate.UpdateType[] memory updates = _createOrderUpdates(\n            orderId,\n            normalizedReceived,\n            makerAddress,\n            recipient,\n            status,\n            false,\n            pendingAmount\n        );\n        orderPendingAmounts[listing][orderId] -= normalizedReceived;\n        return updates;\n    }\n\n    function _processPayoutUpdate(\n        address listing,\n        uint256 orderId,\n        uint256 amount,\n        bool isLong\n    ) internal returns (ISSListingTemplate.PayoutUpdate[] memory) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        ISSListingTemplate.PayoutUpdate[] memory payoutUpdates = new ISSListingTemplate.PayoutUpdate[](1);\n        payoutUpdates[0] = ISSListingTemplate.PayoutUpdate({\n            payoutType: isLong ? 0 : 1,\n            recipient: address(0),\n            required: amount\n        });\n        listingContract.ssUpdate(address(this), payoutUpdates);\n        payoutPendingAmounts[listing][orderId] -= amount;\n        return payoutUpdates;\n    }\n\n    function executeBuyOrder(\n        address listing,\n        uint256 orderId,\n        uint256 amount\n    ) public returns (ISSListingTemplate.UpdateType[] memory) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        {\n            uint256 maxPrice;\n            uint256 minPrice;\n            (maxPrice, minPrice) = listingContract.getBuyOrderPricing(orderId);\n            uint256 pending;\n            (pending, ) = listingContract.getBuyOrderAmounts(orderId);\n            if (pending == 0 || amount == 0) {\n                return new ISSListingTemplate.UpdateType[](0);\n            }\n            (uint256 xBalance, uint256 yBalance, , ) = listingContract.listingVolumeBalancesView();\n            uint256 impactPrice = yBalance > 0 ? (xBalance * 1e18) / (yBalance + amount) : 0;\n            if (impactPrice > maxPrice || impactPrice < minPrice) {\n                return new ISSListingTemplate.UpdateType[](0);\n            }\n        }\n        (\n            address tokenAddress,\n            uint8 decimals,\n            address makerAddress,\n            address recipient,\n            uint8 status,\n            uint256 amountReceived,\n            uint256 normalizedReceived\n        ) = _prepBuyOrderUpdate(listing, orderId, amount);\n        return _executeBuyOrderUpdate(listing, orderId, normalizedReceived, makerAddress, recipient, status);\n    }\n\n    function executeSellOrder(\n        address listing,\n        uint256 orderId,\n        uint256 amount\n    ) public returns (ISSListingTemplate.UpdateType[] memory) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        {\n            uint256 maxPrice;\n            uint256 minPrice;\n            (maxPrice, minPrice) = listingContract.getSellOrderPricing(orderId);\n            uint256 pending;\n            (pending, ) = listingContract.getSellOrderAmounts(orderId);\n            if (pending == 0 || amount == 0) {\n                return new ISSListingTemplate.UpdateType[](0);\n            }\n            (uint256 xBalance, uint256 yBalance, , ) = listingContract.listingVolumeBalancesView();\n            uint256 impactPrice = xBalance > 0 ? (yBalance * 1e18) / (xBalance + amount) : 0;\n            if (impactPrice > maxPrice || impactPrice < minPrice) {\n                return new ISSListingTemplate.UpdateType[](0);\n            }\n        }\n        (\n            address tokenAddress,\n            uint8 decimals,\n            address makerAddress,\n            address recipient,\n            uint8 status,\n            uint256 amountReceived,\n            uint256 normalizedReceived\n        ) = _prepSellOrderUpdate(listing, orderId, amount);\n        return _executeSellOrderUpdate(listing, orderId, normalizedReceived, makerAddress, recipient, status);\n    }\n\n    function executeBuyOrders(address listing, uint256 maxIterations) internal onlyValidListing(listing) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        uint256[] storage orders = activeBuyOrders[listing];\n        uint256 processed = 0;\n        ISSListingTemplate.UpdateType[] memory tempUpdates = new ISSListingTemplate.UpdateType[](orders.length * 2);\n        uint256 updateIndex = 0;\n        for (uint256 i = 0; i < orders.length && processed < maxIterations; ) {\n            uint256 orderId = orders[i];\n            uint256 pending;\n            (pending, ) = listingContract.getBuyOrderAmounts(orderId);\n            if (pending == 0) {\n                orders[i] = orders[orders.length - 1];\n                orders.pop();\n                continue;\n            }\n            try this.executeBuyOrder(listing, orderId, pending) returns (ISSListingTemplate.UpdateType[] memory updates) {\n                if (updates.length == 0) {\n                    i++;\n                    continue;\n                }\n                for (uint256 j = 0; j < updates.length; j++) {\n                    tempUpdates[updateIndex++] = updates[j];\n                }\n                processed++;\n                if (orderPendingAmounts[listing][orderId] == 0) {\n                    orders[i] = orders[orders.length - 1];\n                    orders.pop();\n                } else {\n                    i++;\n                }\n            } catch {\n                i++;\n                continue;\n            }\n        }\n        ISSListingTemplate.UpdateType[] memory finalUpdates = new ISSListingTemplate.UpdateType[](updateIndex);\n        for (uint256 i = 0; i < updateIndex; i++) {\n            finalUpdates[i] = tempUpdates[i];\n        }\n        if (updateIndex > 0) {\n            listingContract.update(address(this), finalUpdates);\n        }\n    }\n\n    function executeSellOrders(address listing, uint256 maxIterations) internal onlyValidListing(listing) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        uint256[] storage orders = activeSellOrders[listing];\n        uint256 processed = 0;\n        ISSListingTemplate.UpdateType[] memory tempUpdates = new ISSListingTemplate.UpdateType[](orders.length * 2);\n        uint256 updateIndex = 0;\n        for (uint256 i = 0; i < orders.length && processed < maxIterations; ) {\n            uint256 orderId = orders[i];\n            uint256 pending;\n            (pending, ) = listingContract.getSellOrderAmounts(orderId);\n            if (pending == 0) {\n                orders[i] = orders[orders.length - 1];\n                orders.pop();\n                continue;\n            }\n            try this.executeSellOrder(listing, orderId, pending) returns (ISSListingTemplate.UpdateType[] memory updates) {\n                if (updates.length == 0) {\n                    i++;\n                    continue;\n                }\n                for (uint256 j = 0; j < updates.length; j++) {\n                    tempUpdates[updateIndex++] = updates[j];\n                }\n                processed++;\n                if (orderPendingAmounts[listing][orderId] == 0) {\n                    orders[i] = orders[orders.length - 1];\n                    orders.pop();\n                } else {\n                    i++;\n                }\n            } catch {\n                i++;\n                continue;\n            }\n        }\n        ISSListingTemplate.UpdateType[] memory finalUpdates = new ISSListingTemplate.UpdateType[](updateIndex);\n        for (uint256 i = 0; i < updateIndex; i++) {\n            finalUpdates[i] = tempUpdates[i];\n        }\n        if (updateIndex > 0) {\n            listingContract.update(address(this), finalUpdates);\n        }\n    }\n\n    function executeLongPayout(\n        address listing,\n        uint256 orderId\n    ) public returns (ISSListingTemplate.PayoutUpdate[] memory) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        ISSListingTemplate.LongPayoutStruct memory payout = listingContract.getLongPayout(orderId);\n        if (payout.required == 0) {\n            return new ISSListingTemplate.PayoutUpdate[](0);\n        }\n        return _processPayoutUpdate(listing, orderId, payout.required, true);\n    }\n\n    function executeShortPayout(\n        address listing,\n        uint256 orderId\n    ) public returns (ISSListingTemplate.PayoutUpdate[] memory) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        ISSListingTemplate.ShortPayoutStruct memory payout = listingContract.getShortPayout(orderId);\n        if (payout.amount == 0) {\n            return new ISSListingTemplate.PayoutUpdate[](0);\n        }\n        return _processPayoutUpdate(listing, orderId, payout.amount, false);\n    }\n\n    function executeLongPayouts(address listing, uint256 maxIterations) internal onlyValidListing(listing) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        uint256[] storage orders = activeLongPayouts[listing];\n        uint256 processed = 0;\n        ISSListingTemplate.PayoutUpdate[] memory tempPayoutUpdates = new ISSListingTemplate.PayoutUpdate[](orders.length);\n        uint256 updateIndex = 0;\n        for (uint256 i = 0; i < orders.length && processed < maxIterations; ) {\n            uint256 orderId = orders[i];\n            try this.executeLongPayout(listing, orderId) returns (ISSListingTemplate.PayoutUpdate[] memory payoutUpdates) {\n                if (payoutUpdates.length == 0) {\n                    i++;\n                    continue;\n                }\n                for (uint256 j = 0; j < payoutUpdates.length; j++) {\n                    tempPayoutUpdates[updateIndex++] = payoutUpdates[j];\n                }\n                processed++;\n                if (payoutPendingAmounts[listing][orderId] == 0) {\n                    orders[i] = orders[orders.length - 1];\n                    orders.pop();\n                } else {\n                    i++;\n                }\n            } catch {\n                i++;\n                continue;\n            }\n        }\n        ISSListingTemplate.PayoutUpdate[] memory finalPayoutUpdates = new ISSListingTemplate.PayoutUpdate[](updateIndex);\n        for (uint256 i = 0; i < updateIndex; i++) {\n            finalPayoutUpdates[i] = tempPayoutUpdates[i];\n        }\n        if (updateIndex > 0) {\n            listingContract.ssUpdate(address(this), finalPayoutUpdates);\n        }\n    }\n\n    function executeShortPayouts(address listing, uint256 maxIterations) internal onlyValidListing(listing) {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        uint256[] storage orders = activeShortPayouts[listing];\n        uint256 processed = 0;\n        ISSListingTemplate.PayoutUpdate[] memory tempPayoutUpdates = new ISSListingTemplate.PayoutUpdate[](orders.length);\n        uint256 updateIndex = 0;\n        for (uint256 i = 0; i < orders.length && processed < maxIterations; ) {\n            uint256 orderId = orders[i];\n            try this.executeShortPayout(listing, orderId) returns (ISSListingTemplate.PayoutUpdate[] memory payoutUpdates) {\n                if (payoutUpdates.length == 0) {\n                    i++;\n                    continue;\n                }\n                for (uint256 j = 0; j < payoutUpdates.length; j++) {\n                    tempPayoutUpdates[updateIndex++] = payoutUpdates[j];\n                }\n                processed++;\n                if (payoutPendingAmounts[listing][orderId] == 0) {\n                    orders[i] = orders[orders.length - 1];\n                    orders.pop();\n                } else {\n                    i++;\n                }\n            } catch {\n                i++;\n                continue;\n            }\n        }\n        ISSListingTemplate.PayoutUpdate[] memory finalPayoutUpdates = new ISSListingTemplate.PayoutUpdate[](updateIndex);\n        for (uint256 i = 0; i < updateIndex; i++) {\n            finalPayoutUpdates[i] = tempPayoutUpdates[i];\n        }\n        if (updateIndex > 0) {\n            listingContract.ssUpdate(address(this), finalPayoutUpdates);\n        }\n    }\n}"
			},
			"ShockSpace/utils/SSOrderPartial.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\npragma solidity ^0.8.1;\n\n// Version: 0.0.9\n// Changes:\n// - v0.0.9: Fixed TypeError in _clearOrderData by explicitly destructuring tuples from getBuyOrderCore and getSellOrderCore.\n// - v0.0.8: Updated to align with SSMainPartial.sol v0.0.8 and SSListingTemplate.sol v0.0.8.\n// - v0.0.7: Removed ISSAgent.globalizeOrders calls, globalization handled by SSListingTemplate.\n// - v0.0.7: Fixed _clearOrderData array index assignment (removed erroneous activeOrders[i] = i).\n// - v0.0.7: Maintained generic helpers (_handleOrderPrep, _executeSingleOrder, _clearOrderData).\n// - Compatible with SSListingTemplate.sol (v0.0.8), SSLiquidityTemplate.sol (v0.0.4).\n\nimport \"./SSMainPartial.sol\";\n\ncontract SSOrderPartial is SSMainPartial {\n    function _handleOrderPrep(\n        address listing,\n        address maker,\n        address recipient,\n        uint256 amount,\n        uint256 maxPrice,\n        uint256 minPrice,\n        bool isBuy\n    ) internal view returns (OrderPrep memory) {\n        require(maker != address(0), \"Invalid maker\");\n        require(recipient != address(0), \"Invalid recipient\");\n        require(amount > 0, \"Invalid amount\");\n        uint8 decimals = isBuy ? decimalsB[listing] : decimalsA[listing];\n        uint256 normalizedAmount = ISSListingTemplate(listing).normalize(amount, decimals);\n        return OrderPrep(maker, recipient, normalizedAmount, maxPrice, minPrice);\n    }\n\n    function _executeSingleOrder(\n        address listing,\n        OrderPrep memory prep,\n        bool isBuy\n    ) internal {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        uint256 orderId = makerActiveOrders[listing][prep.maker].length;\n        ISSListingTemplate.UpdateType[] memory updates = new ISSListingTemplate.UpdateType[](1);\n        updates[0] = ISSListingTemplate.UpdateType({\n            updateType: isBuy ? 1 : 2,\n            structId: 0,\n            index: orderId,\n            value: prep.amount,\n            addr: prep.maker,\n            recipient: prep.recipient,\n            maxPrice: prep.maxPrice,\n            minPrice: prep.minPrice\n        });\n        listingContract.update(address(this), updates);\n        orderPendingAmounts[listing][orderId] = prep.amount;\n        makerActiveOrders[listing][prep.maker].push(orderId);\n        if (isBuy) {\n            activeBuyOrders[listing].push(orderId);\n        } else {\n            activeSellOrders[listing].push(orderId);\n        }\n    }\n\n    function _clearOrderData(\n        address listing,\n        uint256 orderId,\n        bool isBuy\n    ) internal {\n        ISSListingTemplate listingContract = ISSListingTemplate(listing);\n        ISSListingTemplate.UpdateType[] memory updates = new ISSListingTemplate.UpdateType[](1);\n        updates[0] = ISSListingTemplate.UpdateType({\n            updateType: isBuy ? 1 : 2,\n            structId: 0,\n            index: orderId,\n            value: 0,\n            addr: address(0),\n            recipient: address(0),\n            maxPrice: 0,\n            minPrice: 0\n        });\n        listingContract.update(address(this), updates);\n        orderPendingAmounts[listing][orderId] = 0;\n        (address maker,,) = isBuy ? listingContract.getBuyOrderCore(orderId) : listingContract.getSellOrderCore(orderId);\n        uint256[] storage makerOrders = makerActiveOrders[listing][maker];\n        for (uint256 i = 0; i < makerOrders.length; i++) {\n            if (makerOrders[i] == orderId) {\n                makerOrders[i] = makerOrders[makerOrders.length - 1];\n                makerOrders.pop();\n                break;\n            }\n        }\n        uint256[] storage activeOrders = isBuy ? activeBuyOrders[listing] : activeSellOrders[listing];\n        for (uint256 i = 0; i < activeOrders.length; i++) {\n            if (activeOrders[i] == orderId) {\n                activeOrders[i] = activeOrders[activeOrders.length - 1];\n                activeOrders.pop();\n                break;\n            }\n        }\n    }\n}"
			},
			"ShockSpace/utils/SSMainPartial.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\npragma solidity ^0.8.1;\n\n// Version: 0.0.12\n// Changes:\n// - v0.0.12: Renamed listingAddress to getListingAddress in ISSLiquidityTemplate to resolve naming conflict with claimFees. Updated ISSListingTemplate.liquidityAddress to liquidityAddressView to match SSListingTemplate.sol (v0.0.8).\n// - v0.0.11: Removed registryAddress mapping, moved to ISSListingTemplate to align with SSListingTemplate.sol (v0.0.8) where registry is typically managed.\n// - v0.0.10: Homogenized agent state variable usage, removed redundant listingAgent from SSRouter.sol, retained agent and setAgent for inheritance chain.\n// - v0.0.9: Added agent state variable and setAgent function to allow setting the agent address, aligning with ISSListingTemplate.agent().\n// - v0.0.8: Updated ISSListingTemplate interface to match SSListingTemplate.sol v0.0.8, revised PayoutUpdate struct, getBuyOrderCore, getSellOrderCore, and renamed viewDecimalsA/B to decimalsA/B.\n// - v0.0.8: Added agent() function to ISSListingTemplate to resolve TypeError in SSRouter.sol.\n// - v0.0.7: Added globalization comment clarifying SSListingTemplate/SSLiquidityTemplate handle globalization.\n// - v0.0.7: Added registryAddress mapping, set manually via SSRouter.setRegistry.\n// - v0.0.7: Updated ISSAgent to include only getListing for listing validation.\n// - v0.0.7: Maintained ISSListingTemplate and ISSLiquidityTemplate for SSListingTemplate v0.0.5 and SSLiquidityTemplate v0.0.4.\n// - v0.0.7: Removed taxCollector references.\n// - Compatible with SSListingTemplate.sol (v0.0.8), SSLiquidityTemplate.sol (v0.0.4).\n\nimport \"../imports/SafeERC20.sol\";\nimport \"../imports/ReentrancyGuard.sol\";\nimport \"../imports/Ownable.sol\";\n\n// Note: Globalization (orders and liquidity) is handled by SSListingTemplate and SSLiquidityTemplate, not SSRouter.\n\ninterface ISSListingTemplate {\n    struct UpdateType {\n        uint8 updateType; // 0 = balance, 1 = buy order, 2 = sell order, 3 = historical\n        uint8 structId;   // 0 = Core, 1 = Pricing, 2 = Amounts\n        uint256 index;    // orderId or slot index\n        uint256 value;    // principal or amount\n        address addr;     // makerAddress\n        address recipient;// recipientAddress\n        uint256 maxPrice; // for Pricing struct\n        uint256 minPrice; // for Pricing struct\n    }\n    struct PayoutUpdate {\n        uint8 payoutType; // 0: Long, 1: Short\n        address recipient;\n        uint256 required;\n    }\n    struct LongPayoutStruct {\n        address makerAddress;\n        address recipientAddress;\n        uint256 required;\n        uint256 filled;\n        uint256 orderId;\n        uint8 status;\n    }\n    struct ShortPayoutStruct {\n        address makerAddress;\n        address recipientAddress;\n        uint256 amount;\n        uint256 filled;\n        uint256 orderId;\n        uint8 status;\n    }\n    function agent() external view returns (address);\n    function registryAddress() external view returns (address); // Added for registry management\n    function setRegistry(address newRegistry) external; // Added setter for registry\n    function update(address caller, UpdateType[] memory updates) external;\n    function ssUpdate(address caller, PayoutUpdate[] memory payoutUpdates) external;\n    function transact(address caller, address token, uint256 amount, address recipient) external;\n    function decimalsA() external view returns (uint8);\n    function decimalsB() external view returns (uint8);\n    function listingVolumeBalancesView() external view returns (uint256 xBalance, uint256 yBalance, uint256 xVolume, uint256 yVolume);\n    function getBuyOrderCore(uint256 orderId) external view returns (address makerAddress, address recipientAddress, uint8 status);\n    function getBuyOrderPricing(uint256 orderId) external view returns (uint256 maxPrice, uint256 minPrice);\n    function getBuyOrderAmounts(uint256 orderId) external view returns (uint256 pending, uint256 filled);\n    function getSellOrderCore(uint256 orderId) external view returns (address makerAddress, address recipientAddress, uint8 status);\n    function getSellOrderPricing(uint256 orderId) external view returns (uint256 maxPrice, uint256 minPrice);\n    function getSellOrderAmounts(uint256 orderId) external view returns (uint256 pending, uint256 filled);\n    function getLongPayout(uint256 orderId) external view returns (LongPayoutStruct memory);\n    function getShortPayout(uint256 orderId) external view returns (ShortPayoutStruct memory);\n    function pendingBuyOrdersView() external view returns (uint256[] memory);\n    function pendingSellOrdersView() external view returns (uint256[] memory);\n    function longPayoutByIndexView() external view returns (uint256[] memory);\n    function shortPayoutByIndexView() external view returns (uint256[] memory);\n    function makerPendingOrdersView(address maker) external view returns (uint256[] memory);\n    function liquidityAddressView() external view returns (address);\n    function tokenA() external view returns (address);\n    function tokenB() external view returns (address);\n    function normalize(uint256 amount, uint8 decimals) external pure returns (uint256);\n    function denormalize(uint256 amount, uint8 decimals) external pure returns (uint256);\n    function getListingId() external view returns (uint256);\n}\n\ninterface ISSLiquidityTemplate {\n    struct UpdateType {\n        uint8 updateType;\n        uint256 index;\n        uint256 value;\n        address addr;\n        address recipient;\n    }\n    struct PreparedWithdrawal {\n        uint256 amountA;\n        uint256 amountB;\n    }\n    struct Slot {\n        address depositor;\n        address recipient;\n        uint256 allocation;\n        uint256 dVolume;\n        uint256 timestamp;\n    }\n    function update(address caller, UpdateType[] memory updates) external;\n    function transact(address caller, address token, uint256 amount, address recipient) external;\n    function deposit(address caller, address token, uint256 amount) external payable;\n    function updateLiquidity(address caller, bool isX, uint256 amount) external;\n    function addFees(address caller, bool isX, uint256 fee) external;\n    function xPrepOut(address caller, uint256 amount, uint256 index) external returns (PreparedWithdrawal memory);\n    function xExecuteOut(address caller, uint256 index, PreparedWithdrawal memory withdrawal) external;\n    function yPrepOut(address caller, uint256 amount, uint256 index) external returns (PreparedWithdrawal memory);\n    function yExecuteOut(address caller, uint256 index, PreparedWithdrawal memory withdrawal) external;\n    function claimFees(address caller, address listingAddress, uint256 liquidityIndex, bool isX, uint256 volume) external;\n    function changeSlotDepositor(address caller, bool isX, uint256 slotIndex, address newDepositor) external;\n    function liquidityAmounts() external view returns (uint256 xAmount, uint256 yAmount);\n    function liquidityDetailsView() external view returns (uint256 xLiquid, uint256 yLiquid, uint256 xFees, uint256 yFees);\n    function activeXLiquiditySlotsView() external view returns (uint256[] memory);\n    function activeYLiquiditySlotsView() external view returns (uint256[] memory);\n    function userIndexView(address user) external view returns (uint256[] memory);\n    function getXSlotView(uint256 index) external view returns (Slot memory);\n    function getYSlotView(uint256 index) external view returns (Slot memory);\n    function getListingAddress() external view returns (address);\n    function listingId() external view returns (uint256);\n    function tokenA() external view returns (address);\n    function tokenB() external view returns (address);\n    function routers(address router) external view returns (bool);\n}\n\ninterface ISSAgent {\n    function getListing(address tokenA, address tokenB) external view returns (address);\n}\n\ncontract SSMainPartial is ReentrancyGuard, Ownable {\n    using SafeERC20 for IERC20;\n\n    address public agent;\n\n    struct OrderPrep {\n        address maker;\n        address recipient;\n        uint256 amount;\n        uint256 maxPrice;\n        uint256 minPrice;\n    }\n\n    struct BuyOrderDetails {\n        uint256 orderId;\n        address maker;\n        address recipient;\n        uint256 pending;\n        uint256 filled;\n        uint256 maxPrice;\n        uint256 minPrice;\n        uint8 status;\n    }\n\n    struct SellOrderDetails {\n        uint256 orderId;\n        address maker;\n        address recipient;\n        uint256 pending;\n        uint256 filled;\n        uint256 maxPrice;\n        uint256 minPrice;\n        uint8 status;\n    }\n\n    struct OrderClearData {\n        uint256 orderId;\n        bool isBuy;\n        uint256 amount;\n    }\n\n    mapping(address => bool) public isValidListing;\n    mapping(address => address) public liquidityAddress;\n    mapping(address => address) public tokenA;\n    mapping(address => address) public tokenB;\n    mapping(address => uint8) public decimalsA;\n    mapping(address => uint8) public decimalsB;\n    mapping(address => mapping(uint256 => uint256)) public orderPendingAmounts;\n    mapping(address => mapping(uint256 => uint256)) public payoutPendingAmounts;\n    mapping(address => uint256[]) public activeBuyOrders;\n    mapping(address => uint256[]) public activeSellOrders;\n    mapping(address => uint256[]) public activeLongPayouts;\n    mapping(address => uint256[]) public activeShortPayouts;\n    mapping(address => mapping(address => uint256[])) public makerActiveOrders;\n\n    modifier onlyValidListing(address listing) {\n        require(isValidListing[listing], \"Invalid listing\");\n        _;\n    }\n\n    function setAgent(address newAgent) external onlyOwner {\n        require(newAgent != address(0), \"Invalid agent address\");\n        agent = newAgent;\n    }\n}"
			},
			"ShockSpace/imports/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"ShockSpace/imports/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"ShockSpace/imports/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Permit.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"ShockSpace/imports/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"ShockSpace/imports/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"ShockSpace/imports/IERC20.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\npragma solidity ^0.8.1;\n\ninterface IERC20 {\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint256); // Added for OMFAgent prepListing\n    function balanceOf(address account) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function transfer(address to, uint256 amount) external returns (bool);\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}"
			},
			"ShockSpace/imports/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ShockSpace/imports/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/imports/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/imports/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ad463ea5429ce9e87456c3b38430d2e571e19c53e97960a4c1562c5ee8b53bc64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad463ea5429ce9e87456c3b38430d2e571e19c53e97960a4c1562c5ee8b53bc64736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD4 PUSH4 0xEA5429CE SWAP15 DUP8 GASLIMIT PUSH13 0x3B38430D2E571E19C53E97960A 0x4C ISZERO PUSH3 0xC5EE8B MSTORE8 0xBC PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "194:9169:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad463ea5429ce9e87456c3b38430d2e571e19c53e97960a4c1562c5ee8b53bc64736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD4 PUSH4 0xEA5429CE SWAP15 DUP8 GASLIMIT PUSH13 0x3B38430D2E571E19C53E97960A 0x4C ISZERO PUSH3 0xC5EE8B MSTORE8 0xBC PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "194:9169:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ad463ea5429ce9e87456c3b38430d2e571e19c53e97960a4c1562c5ee8b53bc64736f6c63430008010033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 453,
								"contract": "ShockSpace/imports/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 569,
								"contract": "ShockSpace/imports/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/imports/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/imports/SafeERC20.sol\":675:6886  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/imports/SafeERC20.sol\":675:6886  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6697ff88b9bf0c27ad8fe912eb56eecbb0e3b98e0a9851bfbda5ec46bc371c064736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6697ff88b9bf0c27ad8fe912eb56eecbb0e3b98e0a9851bfbda5ec46bc371c064736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 PUSH10 0x7FF88B9BF0C27AD8FE91 0x2E 0xB5 PUSH15 0xECBB0E3B98E0A9851BFBDA5EC46BC3 PUSH18 0xC064736F6C63430008010033000000000000 ",
							"sourceMap": "675:6211:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;675:6211:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6697ff88b9bf0c27ad8fe912eb56eecbb0e3b98e0a9851bfbda5ec46bc371c064736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 PUSH10 0x7FF88B9BF0C27AD8FE91 0x2E 0xB5 PUSH15 0xECBB0E3B98E0A9851BFBDA5EC46BC3 PUSH18 0xC064736F6C63430008010033000000000000 ",
							"sourceMap": "675:6211:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 675,
									"end": 6886,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6697ff88b9bf0c27ad8fe912eb56eecbb0e3b98e0a9851bfbda5ec46bc371c064736f6c63430008010033",
									".code": [
										{
											"begin": 675,
											"end": 6886,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 675,
											"end": 6886,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/imports/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/utils/SSMainPartial.sol": {
				"ISSAgent": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getListing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getListing(address,address)": "b369f6ad"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/utils/SSMainPartial.sol\":\"ISSAgent\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]},\"ShockSpace/utils/SSMainPartial.sol\":{\"keccak256\":\"0x43e9a02e1964b3c6f3d292ee069ad48d39602dd08bfe7663c2fe25436cd270c1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3c6e1b6ce25070fa1d067a4b6e7db881b4ea6890d10b6ba9a7abb24e067a7c0d\",\"dweb:/ipfs/QmSKJ8x9fb4Cyk6M4aM4Z8oabxwFJHEHGNHgVrJd3bpxX8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISSLiquidityTemplate": {
					"abi": [
						{
							"inputs": [],
							"name": "activeXLiquiditySlotsView",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "activeYLiquiditySlotsView",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isX",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "addFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isX",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "slotIndex",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newDepositor",
									"type": "address"
								}
							],
							"name": "changeSlotDepositor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "listingAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isX",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "volume",
									"type": "uint256"
								}
							],
							"name": "claimFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getListingAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getXSlotView",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "depositor",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "allocation",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "dVolume",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSLiquidityTemplate.Slot",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getYSlotView",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "depositor",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "allocation",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "dVolume",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSLiquidityTemplate.Slot",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityDetailsView",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xLiquid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yLiquid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xFees",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yFees",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "routers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "transact",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "updateType",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										}
									],
									"internalType": "struct ISSLiquidityTemplate.UpdateType[]",
									"name": "updates",
									"type": "tuple[]"
								}
							],
							"name": "update",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isX",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "updateLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "userIndexView",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountA",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountB",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSLiquidityTemplate.PreparedWithdrawal",
									"name": "withdrawal",
									"type": "tuple"
								}
							],
							"name": "xExecuteOut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "xPrepOut",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountA",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountB",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSLiquidityTemplate.PreparedWithdrawal",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountA",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountB",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSLiquidityTemplate.PreparedWithdrawal",
									"name": "withdrawal",
									"type": "tuple"
								}
							],
							"name": "yExecuteOut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "yPrepOut",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amountA",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountB",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSLiquidityTemplate.PreparedWithdrawal",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"activeXLiquiditySlotsView()": "28c1c8d1",
							"activeYLiquiditySlotsView()": "b0be79b6",
							"addFees(address,bool,uint256)": "dbaf307d",
							"changeSlotDepositor(address,bool,uint256,address)": "b490c21f",
							"claimFees(address,address,uint256,bool,uint256)": "0d4bd335",
							"deposit(address,address,uint256)": "8340f549",
							"getListingAddress()": "1d5bc2be",
							"getXSlotView(uint256)": "d97cab4e",
							"getYSlotView(uint256)": "7082bc97",
							"liquidityAmounts()": "20b69821",
							"liquidityDetailsView()": "a0d41b88",
							"listingId()": "9405dfdd",
							"routers(address)": "80dd9a1f",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"transact(address,address,uint256,address)": "f9b44c85",
							"update(address,(uint8,uint256,uint256,address,address)[])": "296dc7d9",
							"updateLiquidity(address,bool,uint256)": "01e34620",
							"userIndexView(address)": "0f3510bc",
							"xExecuteOut(address,uint256,(uint256,uint256))": "936d9c6f",
							"xPrepOut(address,uint256,uint256)": "e28be471",
							"yExecuteOut(address,uint256,(uint256,uint256))": "61538603",
							"yPrepOut(address,uint256,uint256)": "8f71e67f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"activeXLiquiditySlotsView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeYLiquiditySlotsView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isX\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"addFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isX\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newDepositor\",\"type\":\"address\"}],\"name\":\"changeSlotDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listingAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isX\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getXSlotView\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSLiquidityTemplate.Slot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getYSlotView\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSLiquidityTemplate.Slot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityDetailsView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xLiquid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yLiquid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yFees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"routers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"updateType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ISSLiquidityTemplate.UpdateType[]\",\"name\":\"updates\",\"type\":\"tuple[]\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isX\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userIndexView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSLiquidityTemplate.PreparedWithdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"xExecuteOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"xPrepOut\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSLiquidityTemplate.PreparedWithdrawal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSLiquidityTemplate.PreparedWithdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"yExecuteOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"yPrepOut\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSLiquidityTemplate.PreparedWithdrawal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/utils/SSMainPartial.sol\":\"ISSLiquidityTemplate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]},\"ShockSpace/utils/SSMainPartial.sol\":{\"keccak256\":\"0x43e9a02e1964b3c6f3d292ee069ad48d39602dd08bfe7663c2fe25436cd270c1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3c6e1b6ce25070fa1d067a4b6e7db881b4ea6890d10b6ba9a7abb24e067a7c0d\",\"dweb:/ipfs/QmSKJ8x9fb4Cyk6M4aM4Z8oabxwFJHEHGNHgVrJd3bpxX8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISSListingTemplate": {
					"abi": [
						{
							"inputs": [],
							"name": "agent",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimalsA",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimalsB",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"name": "denormalize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "getBuyOrderAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "pending",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "filled",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "getBuyOrderCore",
							"outputs": [
								{
									"internalType": "address",
									"name": "makerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "status",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "getBuyOrderPricing",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getListingId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "getLongPayout",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "makerAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "required",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "filled",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "orderId",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "status",
											"type": "uint8"
										}
									],
									"internalType": "struct ISSListingTemplate.LongPayoutStruct",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "getSellOrderAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "pending",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "filled",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "getSellOrderCore",
							"outputs": [
								{
									"internalType": "address",
									"name": "makerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "status",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "getSellOrderPricing",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "getShortPayout",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "makerAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "filled",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "orderId",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "status",
											"type": "uint8"
										}
									],
									"internalType": "struct ISSListingTemplate.ShortPayoutStruct",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityAddressView",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingVolumeBalancesView",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xVolume",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yVolume",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "longPayoutByIndexView",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "maker",
									"type": "address"
								}
							],
							"name": "makerPendingOrdersView",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"name": "normalize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingBuyOrdersView",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingSellOrdersView",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "registryAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "setRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shortPayoutByIndexView",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payoutType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "required",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSListingTemplate.PayoutUpdate[]",
									"name": "payoutUpdates",
									"type": "tuple[]"
								}
							],
							"name": "ssUpdate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "transact",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "updateType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "structId",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "maxPrice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSListingTemplate.UpdateType[]",
									"name": "updates",
									"type": "tuple[]"
								}
							],
							"name": "update",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"agent()": "f5ff5c76",
							"decimalsA()": "50894e9f",
							"decimalsB()": "57cbf16c",
							"denormalize(uint256,uint8)": "200bf284",
							"getBuyOrderAmounts(uint256)": "03b63cc4",
							"getBuyOrderCore(uint256)": "4b66cd4b",
							"getBuyOrderPricing(uint256)": "080735de",
							"getListingId()": "eb510caf",
							"getLongPayout(uint256)": "91776ee7",
							"getSellOrderAmounts(uint256)": "60a3e765",
							"getSellOrderCore(uint256)": "957faf7e",
							"getSellOrderPricing(uint256)": "baba1dc8",
							"getShortPayout(uint256)": "c794836c",
							"liquidityAddressView()": "1a5e7435",
							"listingVolumeBalancesView()": "40d87ebe",
							"longPayoutByIndexView()": "8b73097b",
							"makerPendingOrdersView(address)": "6d8d6189",
							"normalize(uint256,uint8)": "41ef492b",
							"pendingBuyOrdersView()": "27a4d4c5",
							"pendingSellOrdersView()": "9de500b3",
							"registryAddress()": "ed9aab51",
							"setRegistry(address)": "a91ee0dc",
							"shortPayoutByIndexView()": "59b5994c",
							"ssUpdate(address,(uint8,address,uint256)[])": "88413c17",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"transact(address,address,uint256,address)": "f9b44c85",
							"update(address,(uint8,uint8,uint256,uint256,address,address,uint256,uint256)[])": "13e2b18e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalsA\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalsB\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"denormalize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getBuyOrderAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pending\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getBuyOrderCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getBuyOrderPricing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListingId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getLongPayout\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISSListingTemplate.LongPayoutStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getSellOrderAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pending\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getSellOrderCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getSellOrderPricing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getShortPayout\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"filled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISSListingTemplate.ShortPayoutStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAddressView\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingVolumeBalancesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yVolume\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longPayoutByIndexView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"makerPendingOrdersView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"normalize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingBuyOrdersView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingSellOrdersView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortPayoutByIndexView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payoutType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSListingTemplate.PayoutUpdate[]\",\"name\":\"payoutUpdates\",\"type\":\"tuple[]\"}],\"name\":\"ssUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"updateType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"structId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSListingTemplate.UpdateType[]\",\"name\":\"updates\",\"type\":\"tuple[]\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/utils/SSMainPartial.sol\":\"ISSListingTemplate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]},\"ShockSpace/utils/SSMainPartial.sol\":{\"keccak256\":\"0x43e9a02e1964b3c6f3d292ee069ad48d39602dd08bfe7663c2fe25436cd270c1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3c6e1b6ce25070fa1d067a4b6e7db881b4ea6890d10b6ba9a7abb24e067a7c0d\",\"dweb:/ipfs/QmSKJ8x9fb4Cyk6M4aM4Z8oabxwFJHEHGNHgVrJd3bpxX8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SSMainPartial": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeBuyOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeLongPayouts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeSellOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeShortPayouts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "agent",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "decimalsA",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "decimalsB",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isValidListing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "makerActiveOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "orderPendingAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "payoutPendingAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAgent",
									"type": "address"
								}
							],
							"name": "setAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/utils/SSMainPartial.sol\":7868:9777  contract SSMainPartial is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"ShockSpace/imports/Ownable.sol\":929:961  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"ShockSpace/imports/Ownable.sol\":948:960  _msgSender() */\n  tag_7\n    /* \"ShockSpace/imports/Ownable.sol\":948:958  _msgSender */\n  tag_8\n    /* \"ShockSpace/imports/Ownable.sol\":948:960  _msgSender() */\n  jump\t// in\ntag_7:\n    /* \"ShockSpace/imports/Ownable.sol\":929:947  _transferOwnership */\n  tag_9\n    /* \"ShockSpace/imports/Ownable.sol\":929:961  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"ShockSpace/utils/SSMainPartial.sol\":7868:9777  contract SSMainPartial is ReentrancyGuard, Ownable {... */\n  jump(tag_10)\n    /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"ShockSpace/imports/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  swap2\n  and\n  swap2\n    /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  dup3\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2492:2508  address oldOwner */\n  0x00\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ShockSpace/utils/SSMainPartial.sol\":7868:9777  contract SSMainPartial is ReentrancyGuard, Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/utils/SSMainPartial.sol\":7868:9777  contract SSMainPartial is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e9b5f97\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xe5061d89\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xe5061d89\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xed1a8b45\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf5ff5c76\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xff4c2254\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x9e9b5f97\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaa624ffa\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbc5a318a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xbcf685ed\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x69d70075\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x69d70075\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x943450dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9cb52525\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x7b5562\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0aa666c2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x29f2ebb9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39c7fcef\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9174:9226  mapping(address => uint256[]) public activeBuyOrders */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9093:9168  mapping(address => mapping(uint256 => uint256)) public payoutPendingAmounts */\n    tag_4:\n      tag_24\n      tag_31\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9351:9406  mapping(address => uint256[]) public activeShortPayouts */\n    tag_5:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8714:8760  mapping(address => bool) public isValidListing */\n    tag_6:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8766:8817  mapping(address => address) public liquidityAddress */\n    tag_7:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_44\n      tag_52\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8823:8864  mapping(address => address) public tokenA */\n    tag_10:\n      tag_44\n      tag_55\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8870:8911  mapping(address => address) public tokenB */\n    tag_11:\n      tag_44\n      tag_59\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8965:9007  mapping(address => uint8) public decimalsB */\n    tag_12:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8917:8959  mapping(address => uint8) public decimalsA */\n    tag_13:\n      tag_62\n      tag_68\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9412:9486  mapping(address => mapping(address => uint256[])) public makerActiveOrders */\n    tag_14:\n      tag_24\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n    tag_15:\n      tag_49\n      tag_77\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9232:9285  mapping(address => uint256[]) public activeSellOrders */\n    tag_16:\n      tag_24\n      tag_80\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9013:9087  mapping(address => mapping(uint256 => uint256)) public orderPendingAmounts */\n    tag_17:\n      tag_24\n      tag_84\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_49\n      tag_88\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":7958:7978  address public agent */\n    tag_19:\n      tag_44\n      tag_91\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9291:9345  mapping(address => uint256[]) public activeLongPayouts */\n    tag_20:\n      tag_24\n      tag_94\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9174:9226  mapping(address => uint256[]) public activeBuyOrders */\n    tag_27:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9093:9168  mapping(address => mapping(uint256 => uint256)) public payoutPendingAmounts */\n    tag_32:\n      0x0a\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9351:9406  mapping(address => uint256[]) public activeShortPayouts */\n    tag_36:\n      mstore(0x20, 0x0e)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8714:8760  mapping(address => bool) public isValidListing */\n    tag_41:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8766:8817  mapping(address => address) public liquidityAddress */\n    tag_46:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_102\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_103\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1911  _transferOwnership(address(0)) */\n      tag_105\n        /* \"ShockSpace/imports/Ownable.sol\":1908:1909  0 */\n      0x00\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1899  _transferOwnership */\n      tag_106\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1911  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_105:\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"ShockSpace/imports/Ownable.sol\":1266:1272  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8823:8864  mapping(address => address) public tokenA */\n    tag_56:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8870:8911  mapping(address => address) public tokenB */\n    tag_60:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8965:9007  mapping(address => uint8) public decimalsB */\n    tag_64:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8917:8959  mapping(address => uint8) public decimalsA */\n    tag_69:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9412:9486  mapping(address => mapping(address => uint256[])) public makerActiveOrders */\n    tag_74:\n      mstore(0x20, 0x0f)\n      dup3\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n    tag_78:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_111\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_103\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9694:9716  newAgent != address(0) */\n      dup2\n      and\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9686:9742  require(newAgent != address(0), \"Invalid agent address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9752:9757  agent */\n      0x02\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9752:9768  agent = newAgent */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9232:9285  mapping(address => uint256[]) public activeSellOrders */\n    tag_81:\n      mstore(0x20, 0x0c)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9013:9087  mapping(address => mapping(uint256 => uint256)) public orderPendingAmounts */\n    tag_85:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_89:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_119\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_103\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":2155:2177  newOwner != address(0) */\n      dup2\n      and\n        /* \"ShockSpace/imports/Ownable.sol\":2147:2220  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_123\n      jump\t// in\n    tag_121:\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2258  _transferOwnership(newOwner) */\n      tag_124\n        /* \"ShockSpace/imports/Ownable.sol\":2249:2257  newOwner */\n      dup2\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2248  _transferOwnership */\n      tag_106\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2258  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_124:\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":7958:7978  address public agent */\n    tag_91:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9291:9345  mapping(address => uint256[]) public activeLongPayouts */\n    tag_95:\n      mstore(0x20, 0x0d)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/imports/Ownable.sol\":1352:1482  function _checkOwner() internal view virtual {... */\n    tag_103:\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1438  _msgSender() */\n      tag_128\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1436  _msgSender */\n      tag_129\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1438  _msgSender() */\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1438  owner() == _msgSender() */\n      and\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1422  owner() */\n      tag_130\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1420  owner */\n      tag_52\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1422  owner() */\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1438  owner() == _msgSender() */\n      and\n      eq\n        /* \"ShockSpace/imports/Ownable.sol\":1407:1475  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_133\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_106:\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      swap2\n      and\n      swap2\n        /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      dup3\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2492:2508  address oldOwner */\n      0x00\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_129:\n        /* \"ShockSpace/imports/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_137:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_139:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:392   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_141:\n        /* \"#utility.yul\":355:386   */\n      tag_142\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_137\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:739   */\n    tag_73:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":543:545   */\n      0x60\n        /* \"#utility.yul\":531:540   */\n      dup5\n        /* \"#utility.yul\":522:529   */\n      dup7\n        /* \"#utility.yul\":518:541   */\n      sub\n        /* \"#utility.yul\":514:546   */\n      slt\n        /* \"#utility.yul\":511:513   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":564:570   */\n      dup2\n        /* \"#utility.yul\":556:562   */\n      dup3\n        /* \"#utility.yul\":549:571   */\n      revert\n        /* \"#utility.yul\":511:513   */\n    tag_144:\n        /* \"#utility.yul\":592:623   */\n      tag_145\n        /* \"#utility.yul\":613:622   */\n      dup5\n        /* \"#utility.yul\":592:623   */\n      tag_137\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":582:623   */\n      swap3\n      pop\n        /* \"#utility.yul\":642:682   */\n      tag_146\n        /* \"#utility.yul\":678:680   */\n      0x20\n        /* \"#utility.yul\":667:676   */\n      dup6\n        /* \"#utility.yul\":663:681   */\n      add\n        /* \"#utility.yul\":642:682   */\n      tag_137\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":632:682   */\n      swap2\n      pop\n        /* \"#utility.yul\":729:731   */\n      0x40\n        /* \"#utility.yul\":718:727   */\n      dup5\n        /* \"#utility.yul\":714:732   */\n      add\n        /* \"#utility.yul\":701:733   */\n      calldataload\n        /* \"#utility.yul\":691:733   */\n      swap1\n      pop\n        /* \"#utility.yul\":501:739   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":744:1010   */\n    tag_26:\n      0x00\n      dup1\n        /* \"#utility.yul\":873:875   */\n      0x40\n        /* \"#utility.yul\":861:870   */\n      dup4\n        /* \"#utility.yul\":852:859   */\n      dup6\n        /* \"#utility.yul\":848:871   */\n      sub\n        /* \"#utility.yul\":844:876   */\n      slt\n        /* \"#utility.yul\":841:843   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":894:900   */\n      dup2\n        /* \"#utility.yul\":886:892   */\n      dup3\n        /* \"#utility.yul\":879:901   */\n      revert\n        /* \"#utility.yul\":841:843   */\n    tag_148:\n        /* \"#utility.yul\":922:953   */\n      tag_149\n        /* \"#utility.yul\":943:952   */\n      dup4\n        /* \"#utility.yul\":922:953   */\n      tag_137\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":912:953   */\n      swap5\n        /* \"#utility.yul\":1000:1002   */\n      0x20\n        /* \"#utility.yul\":985:1003   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":972:1004   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":831:1010   */\n      jump\t// out\n        /* \"#utility.yul\":1015:1218   */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1179:1211   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1161:1212   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1149:1151   */\n      0x20\n        /* \"#utility.yul\":1134:1152   */\n      add\n      swap1\n        /* \"#utility.yul\":1116:1218   */\n      jump\t// out\n        /* \"#utility.yul\":1223:1410   */\n    tag_43:\n        /* \"#utility.yul\":1388:1402   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1381:1403   */\n      iszero\n        /* \"#utility.yul\":1363:1404   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1351:1353   */\n      0x20\n        /* \"#utility.yul\":1336:1354   */\n      add\n      swap1\n        /* \"#utility.yul\":1318:1410   */\n      jump\t// out\n        /* \"#utility.yul\":1415:1817   */\n    tag_123:\n        /* \"#utility.yul\":1617:1619   */\n      0x20\n        /* \"#utility.yul\":1599:1620   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1656:1658   */\n      0x26\n        /* \"#utility.yul\":1636:1654   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1629:1659   */\n      mstore\n        /* \"#utility.yul\":1695:1729   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1690:1692   */\n      0x40\n        /* \"#utility.yul\":1675:1693   */\n      dup3\n      add\n        /* \"#utility.yul\":1668:1730   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1761:1763   */\n      0x60\n        /* \"#utility.yul\":1746:1764   */\n      dup3\n      add\n        /* \"#utility.yul\":1739:1775   */\n      mstore\n        /* \"#utility.yul\":1807:1810   */\n      0x80\n        /* \"#utility.yul\":1792:1811   */\n      add\n      swap1\n        /* \"#utility.yul\":1589:1817   */\n      jump\t// out\n        /* \"#utility.yul\":1822:2178   */\n    tag_133:\n        /* \"#utility.yul\":2024:2026   */\n      0x20\n        /* \"#utility.yul\":2006:2027   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2043:2061   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2036:2066   */\n      mstore\n        /* \"#utility.yul\":2102:2136   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2097:2099   */\n      0x40\n        /* \"#utility.yul\":2082:2100   */\n      dup3\n      add\n        /* \"#utility.yul\":2075:2137   */\n      mstore\n        /* \"#utility.yul\":2169:2171   */\n      0x60\n        /* \"#utility.yul\":2154:2172   */\n      add\n      swap1\n        /* \"#utility.yul\":1996:2178   */\n      jump\t// out\n        /* \"#utility.yul\":2183:2528   */\n    tag_115:\n        /* \"#utility.yul\":2385:2387   */\n      0x20\n        /* \"#utility.yul\":2367:2388   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2424:2426   */\n      0x15\n        /* \"#utility.yul\":2404:2422   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2397:2427   */\n      mstore\n      shl(0x58, 0x496e76616c6964206167656e742061646472657373)\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2443:2461   */\n      dup3\n      add\n        /* \"#utility.yul\":2436:2487   */\n      mstore\n        /* \"#utility.yul\":2519:2521   */\n      0x60\n        /* \"#utility.yul\":2504:2522   */\n      add\n      swap1\n        /* \"#utility.yul\":2357:2528   */\n      jump\t// out\n        /* \"#utility.yul\":2533:2710   */\n    tag_29:\n        /* \"#utility.yul\":2679:2704   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2652:2670   */\n      add\n      swap1\n        /* \"#utility.yul\":2634:2710   */\n      jump\t// out\n        /* \"#utility.yul\":2715:2899   */\n    tag_66:\n        /* \"#utility.yul\":2887:2891   */\n      0xff\n        /* \"#utility.yul\":2875:2892   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2857:2893   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2845:2847   */\n      0x20\n        /* \"#utility.yul\":2830:2848   */\n      add\n      swap1\n        /* \"#utility.yul\":2812:2899   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220981d8c2d8abd630911a561fc3fb89f05f304cf9ceba5bb7a5fe7b944fee4c5bb64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600160005561002661002161002b565b61002f565b610081565b3390565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61072c806100906000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c80639e9b5f97116100a2578063e5061d8911610071578063e5061d891461023a578063ed1a8b451461024d578063f2fde38b14610260578063f5ff5c7614610273578063ff4c22541461027b57610115565b80639e9b5f97146101e1578063aa624ffa14610201578063bc5a318a14610214578063bcf685ed1461022757610115565b806369d70075116100e957806369d7007514610189578063715018a6146101a95780638da5cb5b146101b3578063943450dd146101bb5780639cb52525146101ce57610115565b80627b55621461011a5780630aa666c21461014357806329f2ebb91461015657806339c7fcef14610169575b600080fd5b61012d6101283660046105ed565b61028e565b60405161013a91906106df565b60405180910390f35b61012d6101513660046105ed565b6102bf565b61012d6101643660046105ed565b6102dc565b61017c610177366004610591565b6102f8565b60405161013a919061062a565b61019c610197366004610591565b61030d565b60405161013a9190610616565b6101b1610328565b005b61019c61033c565b61019c6101c9366004610591565b61034b565b61019c6101dc366004610591565b610366565b6101f46101ef366004610591565b610381565b60405161013a91906106e8565b6101f461020f366004610591565b610396565b61012d6102223660046105b2565b6103ab565b6101b1610235366004610591565b6103e9565b61012d6102483660046105ed565b610442565b61012d61025b3660046105ed565b61045e565b6101b161026e366004610591565b61047b565b61019c6104b5565b61012d6102893660046105ed565b6104c4565b600b60205281600052604060002081815481106102aa57600080fd5b90600052602060002001600091509150505481565b600a60209081526000928352604080842090915290825290205481565b600e60205281600052604060002081815481106102aa57600080fd5b60036020526000908152604090205460ff1681565b6004602052600090815260409020546001600160a01b031681565b6103306104e0565b61033a600061051f565b565b6001546001600160a01b031690565b6005602052600090815260409020546001600160a01b031681565b6006602052600090815260409020546001600160a01b031681565b60086020526000908152604090205460ff1681565b60076020526000908152604090205460ff1681565b600f60205282600052604060002060205281600052604060002081815481106103d357600080fd5b9060005260206000200160009250925050505481565b6103f16104e0565b6001600160a01b0381166104205760405162461bcd60e51b8152600401610417906106b0565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600c60205281600052604060002081815481106102aa57600080fd5b600960209081526000928352604080842090915290825290205481565b6104836104e0565b6001600160a01b0381166104a95760405162461bcd60e51b815260040161041790610635565b6104b28161051f565b50565b6002546001600160a01b031681565b600d60205281600052604060002081815481106102aa57600080fd5b6104e8610571565b6001600160a01b03166104f961033c565b6001600160a01b03161461033a5760405162461bcd60e51b81526004016104179061067b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b3390565b80356001600160a01b038116811461058c57600080fd5b919050565b6000602082840312156105a2578081fd5b6105ab82610575565b9392505050565b6000806000606084860312156105c6578182fd5b6105cf84610575565b92506105dd60208501610575565b9150604084013590509250925092565b600080604083850312156105ff578182fd5b61060883610575565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260159082015274496e76616c6964206167656e74206164647265737360581b604082015260600190565b90815260200190565b60ff9190911681526020019056fea2646970667358221220981d8c2d8abd630911a561fc3fb89f05f304cf9ceba5bb7a5fe7b944fee4c5bb64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x26 PUSH2 0x21 PUSH2 0x2B JUMP JUMPDEST PUSH2 0x2F JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x72C DUP1 PUSH2 0x90 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E9B5F97 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE5061D89 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE5061D89 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xED1A8B45 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xF5FF5C76 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xFF4C2254 EQ PUSH2 0x27B JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x9E9B5F97 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xAA624FFA EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xBC5A318A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x227 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x69D70075 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x69D70075 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x943450DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x9CB52525 EQ PUSH2 0x1CE JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0x7B5562 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xAA666C2 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29F2EBB9 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x39C7FCEF EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x12D PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x328 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x33C JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x19C PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x33A PUSH1 0x0 PUSH2 0x51F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x4B2 DUP2 PUSH2 0x51F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E8 PUSH2 0x571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F9 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0x575 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5C6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x5CF DUP5 PUSH2 0x575 JUMP JUMPDEST SWAP3 POP PUSH2 0x5DD PUSH1 0x20 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5FF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x608 DUP4 PUSH2 0x575 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206167656E742061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SAR DUP13 0x2D DUP11 0xBD PUSH4 0x911A561 0xFC EXTCODEHASH 0xB8 SWAP16 SDIV RETURN DIV 0xCF SWAP13 0xEB 0xA5 0xBB PUSH27 0x5FE7B944FEE4C5BB64736F6C634300080100330000000000000000 ",
							"sourceMap": "7868:1909:7:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:5;1821:7;:22;929:32:4;948:12;:10;:12::i;:::-;929:18;:32::i;:::-;7868:1909:7;;640:96:1;719:10;640:96;:::o;2419:187:4:-;2511:6;;;-1:-1:-1;;;;;2527:17:4;;;-1:-1:-1;;;;;;2527:17:4;;;;;;;2559:40;;2511:6;;;2527:17;2511:6;;2559:40;;2492:16;;2559:40;2419:187;;:::o;7868:1909:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2901:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:10"
															},
															"nodeType": "YulIf",
															"src": "113:2:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:10",
														"type": ""
													}
												],
												"src": "14:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:10"
															},
															"nodeType": "YulIf",
															"src": "274:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:10",
														"type": ""
													}
												],
												"src": "194:198:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:238:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "547:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "556:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "564:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "549:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "549:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "522:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "531:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "518:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "518:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:32:10"
															},
															"nodeType": "YulIf",
															"src": "511:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "582:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "592:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "582:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "632:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "667:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "678:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "663:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "642:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:40:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "691:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "718:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "729:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "701:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "490:6:10",
														"type": ""
													}
												],
												"src": "397:342:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "831:179:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "877:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "886:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "894:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "879:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "879:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "879:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "852:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "861:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "848:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "873:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "844:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:32:10"
															},
															"nodeType": "YulIf",
															"src": "841:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "912:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "943:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "922:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "962:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "989:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1000:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "985:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "972:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "962:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "789:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "800:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "812:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "820:6:10",
														"type": ""
													}
												],
												"src": "744:266:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1116:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1126:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1138:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1149:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1126:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1183:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1199:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1204:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1195:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1195:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1208:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1191:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1191:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1161:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1085:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1096:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1107:4:10",
														"type": ""
													}
												],
												"src": "1015:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1328:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1340:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1351:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1336:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1336:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1328:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1370:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1395:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1388:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1388:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1381:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1381:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1363:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1363:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1287:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1298:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1309:4:10",
														"type": ""
													}
												],
												"src": "1223:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1589:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1606:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1599:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1651:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1629:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1679:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1690:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1675:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1675:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1695:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1668:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1750:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1761:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1746:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1766:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1739:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1784:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1796:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1792:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1784:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1566:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1580:4:10",
														"type": ""
													}
												],
												"src": "1415:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1996:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2024:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2006:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2047:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2058:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2043:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2043:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2036:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2036:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2086:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2097:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2082:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2082:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2102:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2146:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2158:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2154:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2154:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2146:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1973:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1987:4:10",
														"type": ""
													}
												],
												"src": "1822:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2367:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2367:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2408:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2419:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2404:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2424:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2397:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2447:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2458:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2443:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2443:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2463:23:10",
																		"type": "",
																		"value": "Invalid agent address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2436:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2436:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2508:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2496:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6695ab6c0fed1f1bec225452c9e8e46efdb8505a7d974ac410ebd8bac7f4616__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2334:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2348:4:10",
														"type": ""
													}
												],
												"src": "2183:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2634:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2644:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2656:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2652:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2644:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2686:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2697:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2679:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2603:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2614:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2625:4:10",
														"type": ""
													}
												],
												"src": "2533:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2822:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2834:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2830:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2822:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2864:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2879:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2875:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2857:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2857:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2781:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2792:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2803:4:10",
														"type": ""
													}
												],
												"src": "2715:184:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e6695ab6c0fed1f1bec225452c9e8e46efdb8505a7d974ac410ebd8bac7f4616__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid agent address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101155760003560e01c80639e9b5f97116100a2578063e5061d8911610071578063e5061d891461023a578063ed1a8b451461024d578063f2fde38b14610260578063f5ff5c7614610273578063ff4c22541461027b57610115565b80639e9b5f97146101e1578063aa624ffa14610201578063bc5a318a14610214578063bcf685ed1461022757610115565b806369d70075116100e957806369d7007514610189578063715018a6146101a95780638da5cb5b146101b3578063943450dd146101bb5780639cb52525146101ce57610115565b80627b55621461011a5780630aa666c21461014357806329f2ebb91461015657806339c7fcef14610169575b600080fd5b61012d6101283660046105ed565b61028e565b60405161013a91906106df565b60405180910390f35b61012d6101513660046105ed565b6102bf565b61012d6101643660046105ed565b6102dc565b61017c610177366004610591565b6102f8565b60405161013a919061062a565b61019c610197366004610591565b61030d565b60405161013a9190610616565b6101b1610328565b005b61019c61033c565b61019c6101c9366004610591565b61034b565b61019c6101dc366004610591565b610366565b6101f46101ef366004610591565b610381565b60405161013a91906106e8565b6101f461020f366004610591565b610396565b61012d6102223660046105b2565b6103ab565b6101b1610235366004610591565b6103e9565b61012d6102483660046105ed565b610442565b61012d61025b3660046105ed565b61045e565b6101b161026e366004610591565b61047b565b61019c6104b5565b61012d6102893660046105ed565b6104c4565b600b60205281600052604060002081815481106102aa57600080fd5b90600052602060002001600091509150505481565b600a60209081526000928352604080842090915290825290205481565b600e60205281600052604060002081815481106102aa57600080fd5b60036020526000908152604090205460ff1681565b6004602052600090815260409020546001600160a01b031681565b6103306104e0565b61033a600061051f565b565b6001546001600160a01b031690565b6005602052600090815260409020546001600160a01b031681565b6006602052600090815260409020546001600160a01b031681565b60086020526000908152604090205460ff1681565b60076020526000908152604090205460ff1681565b600f60205282600052604060002060205281600052604060002081815481106103d357600080fd5b9060005260206000200160009250925050505481565b6103f16104e0565b6001600160a01b0381166104205760405162461bcd60e51b8152600401610417906106b0565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600c60205281600052604060002081815481106102aa57600080fd5b600960209081526000928352604080842090915290825290205481565b6104836104e0565b6001600160a01b0381166104a95760405162461bcd60e51b815260040161041790610635565b6104b28161051f565b50565b6002546001600160a01b031681565b600d60205281600052604060002081815481106102aa57600080fd5b6104e8610571565b6001600160a01b03166104f961033c565b6001600160a01b03161461033a5760405162461bcd60e51b81526004016104179061067b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b3390565b80356001600160a01b038116811461058c57600080fd5b919050565b6000602082840312156105a2578081fd5b6105ab82610575565b9392505050565b6000806000606084860312156105c6578182fd5b6105cf84610575565b92506105dd60208501610575565b9150604084013590509250925092565b600080604083850312156105ff578182fd5b61060883610575565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260159082015274496e76616c6964206167656e74206164647265737360581b604082015260600190565b90815260200190565b60ff9190911681526020019056fea2646970667358221220981d8c2d8abd630911a561fc3fb89f05f304cf9ceba5bb7a5fe7b944fee4c5bb64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E9B5F97 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE5061D89 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE5061D89 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xED1A8B45 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xF5FF5C76 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xFF4C2254 EQ PUSH2 0x27B JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x9E9B5F97 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xAA624FFA EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xBC5A318A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x227 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x69D70075 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x69D70075 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x943450DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x9CB52525 EQ PUSH2 0x1CE JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0x7B5562 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xAA666C2 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29F2EBB9 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x39C7FCEF EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x12D PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x328 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x33C JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x19C PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x33A PUSH1 0x0 PUSH2 0x51F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x4B2 DUP2 PUSH2 0x51F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E8 PUSH2 0x571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F9 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0x575 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5C6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x5CF DUP5 PUSH2 0x575 JUMP JUMPDEST SWAP3 POP PUSH2 0x5DD PUSH1 0x20 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5FF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x608 DUP4 PUSH2 0x575 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206167656E742061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SAR DUP13 0x2D DUP11 0xBD PUSH4 0x911A561 0xFC EXTCODEHASH 0xB8 SWAP16 SDIV RETURN DIV 0xCF SWAP13 0xEB 0xA5 0xBB PUSH27 0x5FE7B944FEE4C5BB64736F6C634300080100330000000000000000 ",
							"sourceMap": "7868:1909:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9174:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9093:75;;;;;;:::i;:::-;;:::i;9351:55::-;;;;;;:::i;:::-;;:::i;8714:46::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8766:51::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1817:101:4:-;;;:::i;:::-;;1194:85;;;:::i;8823:41:7:-;;;;;;:::i;:::-;;:::i;8870:::-;;;;;;:::i;:::-;;:::i;8965:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8917:::-;;;;;;:::i;:::-;;:::i;9412:74::-;;;;;;:::i;:::-;;:::i;9621:154::-;;;;;;:::i;:::-;;:::i;9232:53::-;;;;;;:::i;:::-;;:::i;9013:74::-;;;;;;:::i;:::-;;:::i;2067:198:4:-;;;;;;:::i;:::-;;:::i;7958:20:7:-;;;:::i;9291:54::-;;;;;;:::i;:::-;;:::i;9174:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9093:75::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;9351:55::-;;;;;;;;;;;;;;;;;;;;8714:46;;;;;;;;;;;;;;;:::o;8766:51::-;;;;;;;;;;;;-1:-1:-1;;;;;8766:51:7;;:::o;1817:101:4:-;1087:13;:11;:13::i;:::-;1881:30:::1;1908:1;1881:18;:30::i;:::-;1817:101::o:0;1194:85::-;1266:6;;-1:-1:-1;;;;;1266:6:4;1194:85;:::o;8823:41:7:-;;;;;;;;;;;;-1:-1:-1;;;;;8823:41:7;;:::o;8870:::-;;;;;;;;;;;;-1:-1:-1;;;;;8870:41:7;;:::o;8965:42::-;;;;;;;;;;;;;;;:::o;8917:::-;;;;;;;;;;;;;;;:::o;9412:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9621:154::-;1087:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;9694:22:7;::::1;9686:56;;;;-1:-1:-1::0;;;9686:56:7::1;;;;;;;:::i;:::-;;;;;;;;;9752:5;:16:::0;;-1:-1:-1;;;;;;9752:16:7::1;-1:-1:-1::0;;;;;9752:16:7;;;::::1;::::0;;;::::1;::::0;;9621:154::o;9232:53::-;;;;;;;;;;;;;;;;;;;;9013:74;;;;;;;;;;;;;;;;;;;;;;;;:::o;2067:198:4:-;1087:13;:11;:13::i;:::-;-1:-1:-1;;;;;2155:22:4;::::1;2147:73;;;;-1:-1:-1::0;;;2147:73:4::1;;;;;;;:::i;:::-;2230:28;2249:8;2230:18;:28::i;:::-;2067:198:::0;:::o;7958:20:7:-;;;-1:-1:-1;;;;;7958:20:7;;:::o;9291:54::-;;;;;;;;;;;;;;;;;;;;1352:130:4;1426:12;:10;:12::i;:::-;-1:-1:-1;;;;;1415:23:4;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1415:23:4;;1407:68;;;;-1:-1:-1;;;1407:68:4;;;;;;;:::i;2419:187::-;2511:6;;;-1:-1:-1;;;;;2527:17:4;;;-1:-1:-1;;;;;;2527:17:4;;;;;;;2559:40;;2511:6;;;2527:17;2511:6;;2559:40;;2492:16;;2559:40;2419:187;;:::o;640:96:1:-;719:10;640:96;:::o;14:175:10:-;84:20;;-1:-1:-1;;;;;133:31:10;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:10:o;397:342::-;;;;543:2;531:9;522:7;518:23;514:32;511:2;;;564:6;556;549:22;511:2;592:31;613:9;592:31;:::i;:::-;582:41;;642:40;678:2;667:9;663:18;642:40;:::i;:::-;632:50;;729:2;718:9;714:18;701:32;691:42;;501:238;;;;;:::o;744:266::-;;;873:2;861:9;852:7;848:23;844:32;841:2;;;894:6;886;879:22;841:2;922:31;943:9;922:31;:::i;:::-;912:41;1000:2;985:18;;;;972:32;;-1:-1:-1;;;831:179:10:o;1015:203::-;-1:-1:-1;;;;;1179:32:10;;;;1161:51;;1149:2;1134:18;;1116:102::o;1223:187::-;1388:14;;1381:22;1363:41;;1351:2;1336:18;;1318:92::o;1415:402::-;1617:2;1599:21;;;1656:2;1636:18;;;1629:30;1695:34;1690:2;1675:18;;1668:62;-1:-1:-1;;;1761:2:10;1746:18;;1739:36;1807:3;1792:19;;1589:228::o;1822:356::-;2024:2;2006:21;;;2043:18;;;2036:30;2102:34;2097:2;2082:18;;2075:62;2169:2;2154:18;;1996:182::o;2183:345::-;2385:2;2367:21;;;2424:2;2404:18;;;2397:30;-1:-1:-1;;;2458:2:10;2443:18;;2436:51;2519:2;2504:18;;2357:171::o;2533:177::-;2679:25;;;2667:2;2652:18;;2634:76::o;2715:184::-;2887:4;2875:17;;;;2857:36;;2845:2;2830:18;;2812:87::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "367200",
								"executionCost": "42882",
								"totalCost": "410082"
							},
							"external": {
								"activeBuyOrders(address,uint256)": "2189",
								"activeLongPayouts(address,uint256)": "2275",
								"activeSellOrders(address,uint256)": "2187",
								"activeShortPayouts(address,uint256)": "2233",
								"agent()": "1158",
								"decimalsA(address)": "1315",
								"decimalsB(address)": "1293",
								"isValidListing(address)": "1354",
								"liquidityAddress(address)": "1317",
								"makerActiveOrders(address,address,uint256)": "infinite",
								"orderPendingAmounts(address,uint256)": "1389",
								"owner()": "1137",
								"payoutPendingAmounts(address,uint256)": "1391",
								"renounceOwnership()": "infinite",
								"setAgent(address)": "22249",
								"tokenA(address)": "1383",
								"tokenB(address)": "1405",
								"transferOwnership(address)": "23792"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 929,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 948,
									"end": 958,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 929,
									"end": 947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7868,
									"end": 9777,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220981d8c2d8abd630911a561fc3fb89f05f304cf9ceba5bb7a5fe7b944fee4c5bb64736f6c63430008010033",
									".code": [
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "9E9B5F97"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "E5061D89"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "E5061D89"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "ED1A8B45"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "F5FF5C76"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "FF4C2254"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "9E9B5F97"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "AA624FFA"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "BC5A318A"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "BCF685ED"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "69D70075"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "69D70075"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "943450DD"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "9CB52525"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "7B5562"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "AA666C2"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "29F2EBB9"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "39C7FCEF"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 9777,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9694,
											"end": 9716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9694,
											"end": 9716,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2249,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1352,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 65,
											"end": 189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 65,
											"end": 189,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 397,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 397,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 545,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 531,
											"end": 540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 522,
											"end": 529,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 518,
											"end": 541,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 513,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 511,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 511,
											"end": 513,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 564,
											"end": 570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 556,
											"end": 562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 549,
											"end": 571,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 513,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 511,
											"end": 513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 592,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 592,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 582,
											"end": 623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 582,
											"end": 623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 642,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 676,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 663,
											"end": 681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 642,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 682,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 632,
											"end": 682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 729,
											"end": 731,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 714,
											"end": 732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 701,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 691,
											"end": 733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 691,
											"end": 733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 873,
											"end": 875,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 870,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 852,
											"end": 859,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 848,
											"end": 871,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 841,
											"end": 843,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 894,
											"end": 900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 879,
											"end": 901,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 841,
											"end": 843,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 922,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 922,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 831,
											"end": 1010,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1218,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1015,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1218,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1223,
											"end": 1410,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1223,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1402,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1381,
											"end": 1403,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1353,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1336,
											"end": 1354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1410,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1415,
											"end": 1817,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1415,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1659,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1729,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1690,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1730,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1775,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1810,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1792,
											"end": 1811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1817,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1822,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1822,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2027,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2178,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2183,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2426,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206167656E742061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2487,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2528,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2533,
											"end": 2710,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2533,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2710,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2715,
											"end": 2899,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2715,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2847,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2830,
											"end": 2848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2899,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"activeBuyOrders(address,uint256)": "007b5562",
							"activeLongPayouts(address,uint256)": "ff4c2254",
							"activeSellOrders(address,uint256)": "e5061d89",
							"activeShortPayouts(address,uint256)": "29f2ebb9",
							"agent()": "f5ff5c76",
							"decimalsA(address)": "aa624ffa",
							"decimalsB(address)": "9e9b5f97",
							"isValidListing(address)": "39c7fcef",
							"liquidityAddress(address)": "69d70075",
							"makerActiveOrders(address,address,uint256)": "bc5a318a",
							"orderPendingAmounts(address,uint256)": "ed1a8b45",
							"owner()": "8da5cb5b",
							"payoutPendingAmounts(address,uint256)": "0aa666c2",
							"renounceOwnership()": "715018a6",
							"setAgent(address)": "bcf685ed",
							"tokenA(address)": "943450dd",
							"tokenB(address)": "9cb52525",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeBuyOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeLongPayouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeSellOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeShortPayouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalsA\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalsB\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidListing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"makerActiveOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderPendingAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payoutPendingAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/utils/SSMainPartial.sol\":\"SSMainPartial\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]},\"ShockSpace/utils/SSMainPartial.sol\":{\"keccak256\":\"0x43e9a02e1964b3c6f3d292ee069ad48d39602dd08bfe7663c2fe25436cd270c1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3c6e1b6ce25070fa1d067a4b6e7db881b4ea6890d10b6ba9a7abb24e067a7c0d\",\"dweb:/ipfs/QmSKJ8x9fb4Cyk6M4aM4Z8oabxwFJHEHGNHgVrJd3bpxX8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 569,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 453,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1508,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "agent",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1564,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "isValidListing",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1568,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "liquidityAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1572,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "tokenA",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1576,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "tokenB",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1580,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "decimalsA",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint8)"
							},
							{
								"astId": 1584,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "decimalsB",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint8)"
							},
							{
								"astId": 1590,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "orderPendingAmounts",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1596,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "payoutPendingAmounts",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1601,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "activeBuyOrders",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1606,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "activeSellOrders",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1611,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "activeLongPayouts",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1616,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "activeShortPayouts",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1623,
								"contract": "ShockSpace/utils/SSMainPartial.sol:SSMainPartial",
								"label": "makerActiveOrders",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint8)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/utils/SSOrderPartial.sol": {
				"SSOrderPartial": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeBuyOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeLongPayouts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeSellOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeShortPayouts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "agent",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "decimalsA",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "decimalsB",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isValidListing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "makerActiveOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "orderPendingAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "payoutPendingAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAgent",
									"type": "address"
								}
							],
							"name": "setAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/utils/SSOrderPartial.sol\":729:3994  contract SSOrderPartial is SSMainPartial {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"ShockSpace/imports/Ownable.sol\":929:961  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"ShockSpace/imports/Ownable.sol\":948:960  _msgSender() */\n  tag_7\n    /* \"ShockSpace/imports/Ownable.sol\":948:958  _msgSender */\n  tag_8\n    /* \"ShockSpace/imports/Ownable.sol\":948:960  _msgSender() */\n  jump\t// in\ntag_7:\n    /* \"ShockSpace/imports/Ownable.sol\":929:947  _transferOwnership */\n  tag_9\n    /* \"ShockSpace/imports/Ownable.sol\":929:961  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"ShockSpace/utils/SSOrderPartial.sol\":729:3994  contract SSOrderPartial is SSMainPartial {... */\n  jump(tag_10)\n    /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"ShockSpace/imports/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  swap2\n  and\n  swap2\n    /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  dup3\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2492:2508  address oldOwner */\n  0x00\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ShockSpace/utils/SSOrderPartial.sol\":729:3994  contract SSOrderPartial is SSMainPartial {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/utils/SSOrderPartial.sol\":729:3994  contract SSOrderPartial is SSMainPartial {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e9b5f97\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xe5061d89\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xe5061d89\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xed1a8b45\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf5ff5c76\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xff4c2254\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x9e9b5f97\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaa624ffa\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbc5a318a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xbcf685ed\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x69d70075\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x69d70075\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x943450dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9cb52525\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x7b5562\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0aa666c2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x29f2ebb9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39c7fcef\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9174:9226  mapping(address => uint256[]) public activeBuyOrders */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9093:9168  mapping(address => mapping(uint256 => uint256)) public payoutPendingAmounts */\n    tag_4:\n      tag_24\n      tag_31\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9351:9406  mapping(address => uint256[]) public activeShortPayouts */\n    tag_5:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8714:8760  mapping(address => bool) public isValidListing */\n    tag_6:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8766:8817  mapping(address => address) public liquidityAddress */\n    tag_7:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_44\n      tag_52\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8823:8864  mapping(address => address) public tokenA */\n    tag_10:\n      tag_44\n      tag_55\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8870:8911  mapping(address => address) public tokenB */\n    tag_11:\n      tag_44\n      tag_59\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8965:9007  mapping(address => uint8) public decimalsB */\n    tag_12:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8917:8959  mapping(address => uint8) public decimalsA */\n    tag_13:\n      tag_62\n      tag_68\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9412:9486  mapping(address => mapping(address => uint256[])) public makerActiveOrders */\n    tag_14:\n      tag_24\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n    tag_15:\n      tag_49\n      tag_77\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9232:9285  mapping(address => uint256[]) public activeSellOrders */\n    tag_16:\n      tag_24\n      tag_80\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9013:9087  mapping(address => mapping(uint256 => uint256)) public orderPendingAmounts */\n    tag_17:\n      tag_24\n      tag_84\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_49\n      tag_88\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":7958:7978  address public agent */\n    tag_19:\n      tag_44\n      tag_91\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9291:9345  mapping(address => uint256[]) public activeLongPayouts */\n    tag_20:\n      tag_24\n      tag_94\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9174:9226  mapping(address => uint256[]) public activeBuyOrders */\n    tag_27:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9093:9168  mapping(address => mapping(uint256 => uint256)) public payoutPendingAmounts */\n    tag_32:\n      0x0a\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9351:9406  mapping(address => uint256[]) public activeShortPayouts */\n    tag_36:\n      mstore(0x20, 0x0e)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8714:8760  mapping(address => bool) public isValidListing */\n    tag_41:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8766:8817  mapping(address => address) public liquidityAddress */\n    tag_46:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_102\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_103\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1911  _transferOwnership(address(0)) */\n      tag_105\n        /* \"ShockSpace/imports/Ownable.sol\":1908:1909  0 */\n      0x00\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1899  _transferOwnership */\n      tag_106\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1911  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_105:\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"ShockSpace/imports/Ownable.sol\":1266:1272  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8823:8864  mapping(address => address) public tokenA */\n    tag_56:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8870:8911  mapping(address => address) public tokenB */\n    tag_60:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8965:9007  mapping(address => uint8) public decimalsB */\n    tag_64:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8917:8959  mapping(address => uint8) public decimalsA */\n    tag_69:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9412:9486  mapping(address => mapping(address => uint256[])) public makerActiveOrders */\n    tag_74:\n      mstore(0x20, 0x0f)\n      dup3\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n    tag_78:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_111\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_103\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9694:9716  newAgent != address(0) */\n      dup2\n      and\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9686:9742  require(newAgent != address(0), \"Invalid agent address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9752:9757  agent */\n      0x02\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9752:9768  agent = newAgent */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9232:9285  mapping(address => uint256[]) public activeSellOrders */\n    tag_81:\n      mstore(0x20, 0x0c)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9013:9087  mapping(address => mapping(uint256 => uint256)) public orderPendingAmounts */\n    tag_85:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_89:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_119\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_103\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":2155:2177  newOwner != address(0) */\n      dup2\n      and\n        /* \"ShockSpace/imports/Ownable.sol\":2147:2220  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_123\n      jump\t// in\n    tag_121:\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2258  _transferOwnership(newOwner) */\n      tag_124\n        /* \"ShockSpace/imports/Ownable.sol\":2249:2257  newOwner */\n      dup2\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2248  _transferOwnership */\n      tag_106\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2258  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_124:\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":7958:7978  address public agent */\n    tag_91:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9291:9345  mapping(address => uint256[]) public activeLongPayouts */\n    tag_95:\n      mstore(0x20, 0x0d)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/imports/Ownable.sol\":1352:1482  function _checkOwner() internal view virtual {... */\n    tag_103:\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1438  _msgSender() */\n      tag_128\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1436  _msgSender */\n      tag_129\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1438  _msgSender() */\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1438  owner() == _msgSender() */\n      and\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1422  owner() */\n      tag_130\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1420  owner */\n      tag_52\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1422  owner() */\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1438  owner() == _msgSender() */\n      and\n      eq\n        /* \"ShockSpace/imports/Ownable.sol\":1407:1475  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_133\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_106:\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      swap2\n      and\n      swap2\n        /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      dup3\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2492:2508  address oldOwner */\n      0x00\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_129:\n        /* \"ShockSpace/imports/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_137:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_139:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:392   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_141:\n        /* \"#utility.yul\":355:386   */\n      tag_142\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_137\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:739   */\n    tag_73:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":543:545   */\n      0x60\n        /* \"#utility.yul\":531:540   */\n      dup5\n        /* \"#utility.yul\":522:529   */\n      dup7\n        /* \"#utility.yul\":518:541   */\n      sub\n        /* \"#utility.yul\":514:546   */\n      slt\n        /* \"#utility.yul\":511:513   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":564:570   */\n      dup2\n        /* \"#utility.yul\":556:562   */\n      dup3\n        /* \"#utility.yul\":549:571   */\n      revert\n        /* \"#utility.yul\":511:513   */\n    tag_144:\n        /* \"#utility.yul\":592:623   */\n      tag_145\n        /* \"#utility.yul\":613:622   */\n      dup5\n        /* \"#utility.yul\":592:623   */\n      tag_137\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":582:623   */\n      swap3\n      pop\n        /* \"#utility.yul\":642:682   */\n      tag_146\n        /* \"#utility.yul\":678:680   */\n      0x20\n        /* \"#utility.yul\":667:676   */\n      dup6\n        /* \"#utility.yul\":663:681   */\n      add\n        /* \"#utility.yul\":642:682   */\n      tag_137\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":632:682   */\n      swap2\n      pop\n        /* \"#utility.yul\":729:731   */\n      0x40\n        /* \"#utility.yul\":718:727   */\n      dup5\n        /* \"#utility.yul\":714:732   */\n      add\n        /* \"#utility.yul\":701:733   */\n      calldataload\n        /* \"#utility.yul\":691:733   */\n      swap1\n      pop\n        /* \"#utility.yul\":501:739   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":744:1010   */\n    tag_26:\n      0x00\n      dup1\n        /* \"#utility.yul\":873:875   */\n      0x40\n        /* \"#utility.yul\":861:870   */\n      dup4\n        /* \"#utility.yul\":852:859   */\n      dup6\n        /* \"#utility.yul\":848:871   */\n      sub\n        /* \"#utility.yul\":844:876   */\n      slt\n        /* \"#utility.yul\":841:843   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":894:900   */\n      dup2\n        /* \"#utility.yul\":886:892   */\n      dup3\n        /* \"#utility.yul\":879:901   */\n      revert\n        /* \"#utility.yul\":841:843   */\n    tag_148:\n        /* \"#utility.yul\":922:953   */\n      tag_149\n        /* \"#utility.yul\":943:952   */\n      dup4\n        /* \"#utility.yul\":922:953   */\n      tag_137\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":912:953   */\n      swap5\n        /* \"#utility.yul\":1000:1002   */\n      0x20\n        /* \"#utility.yul\":985:1003   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":972:1004   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":831:1010   */\n      jump\t// out\n        /* \"#utility.yul\":1015:1218   */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1179:1211   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1161:1212   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1149:1151   */\n      0x20\n        /* \"#utility.yul\":1134:1152   */\n      add\n      swap1\n        /* \"#utility.yul\":1116:1218   */\n      jump\t// out\n        /* \"#utility.yul\":1223:1410   */\n    tag_43:\n        /* \"#utility.yul\":1388:1402   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1381:1403   */\n      iszero\n        /* \"#utility.yul\":1363:1404   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1351:1353   */\n      0x20\n        /* \"#utility.yul\":1336:1354   */\n      add\n      swap1\n        /* \"#utility.yul\":1318:1410   */\n      jump\t// out\n        /* \"#utility.yul\":1415:1817   */\n    tag_123:\n        /* \"#utility.yul\":1617:1619   */\n      0x20\n        /* \"#utility.yul\":1599:1620   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1656:1658   */\n      0x26\n        /* \"#utility.yul\":1636:1654   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1629:1659   */\n      mstore\n        /* \"#utility.yul\":1695:1729   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1690:1692   */\n      0x40\n        /* \"#utility.yul\":1675:1693   */\n      dup3\n      add\n        /* \"#utility.yul\":1668:1730   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1761:1763   */\n      0x60\n        /* \"#utility.yul\":1746:1764   */\n      dup3\n      add\n        /* \"#utility.yul\":1739:1775   */\n      mstore\n        /* \"#utility.yul\":1807:1810   */\n      0x80\n        /* \"#utility.yul\":1792:1811   */\n      add\n      swap1\n        /* \"#utility.yul\":1589:1817   */\n      jump\t// out\n        /* \"#utility.yul\":1822:2178   */\n    tag_133:\n        /* \"#utility.yul\":2024:2026   */\n      0x20\n        /* \"#utility.yul\":2006:2027   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2043:2061   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2036:2066   */\n      mstore\n        /* \"#utility.yul\":2102:2136   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2097:2099   */\n      0x40\n        /* \"#utility.yul\":2082:2100   */\n      dup3\n      add\n        /* \"#utility.yul\":2075:2137   */\n      mstore\n        /* \"#utility.yul\":2169:2171   */\n      0x60\n        /* \"#utility.yul\":2154:2172   */\n      add\n      swap1\n        /* \"#utility.yul\":1996:2178   */\n      jump\t// out\n        /* \"#utility.yul\":2183:2528   */\n    tag_115:\n        /* \"#utility.yul\":2385:2387   */\n      0x20\n        /* \"#utility.yul\":2367:2388   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2424:2426   */\n      0x15\n        /* \"#utility.yul\":2404:2422   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2397:2427   */\n      mstore\n      shl(0x58, 0x496e76616c6964206167656e742061646472657373)\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2443:2461   */\n      dup3\n      add\n        /* \"#utility.yul\":2436:2487   */\n      mstore\n        /* \"#utility.yul\":2519:2521   */\n      0x60\n        /* \"#utility.yul\":2504:2522   */\n      add\n      swap1\n        /* \"#utility.yul\":2357:2528   */\n      jump\t// out\n        /* \"#utility.yul\":2533:2710   */\n    tag_29:\n        /* \"#utility.yul\":2679:2704   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2652:2670   */\n      add\n      swap1\n        /* \"#utility.yul\":2634:2710   */\n      jump\t// out\n        /* \"#utility.yul\":2715:2899   */\n    tag_66:\n        /* \"#utility.yul\":2887:2891   */\n      0xff\n        /* \"#utility.yul\":2875:2892   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2857:2893   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2845:2847   */\n      0x20\n        /* \"#utility.yul\":2830:2848   */\n      add\n      swap1\n        /* \"#utility.yul\":2812:2899   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fb7d8634fff5ed2395c5eb4f58df7efb7ed18ad79b0a38202b4fa85b92b4b7e664736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600160005561002661002161002b565b61002f565b610081565b3390565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61072c806100906000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c80639e9b5f97116100a2578063e5061d8911610071578063e5061d891461023a578063ed1a8b451461024d578063f2fde38b14610260578063f5ff5c7614610273578063ff4c22541461027b57610115565b80639e9b5f97146101e1578063aa624ffa14610201578063bc5a318a14610214578063bcf685ed1461022757610115565b806369d70075116100e957806369d7007514610189578063715018a6146101a95780638da5cb5b146101b3578063943450dd146101bb5780639cb52525146101ce57610115565b80627b55621461011a5780630aa666c21461014357806329f2ebb91461015657806339c7fcef14610169575b600080fd5b61012d6101283660046105ed565b61028e565b60405161013a91906106df565b60405180910390f35b61012d6101513660046105ed565b6102bf565b61012d6101643660046105ed565b6102dc565b61017c610177366004610591565b6102f8565b60405161013a919061062a565b61019c610197366004610591565b61030d565b60405161013a9190610616565b6101b1610328565b005b61019c61033c565b61019c6101c9366004610591565b61034b565b61019c6101dc366004610591565b610366565b6101f46101ef366004610591565b610381565b60405161013a91906106e8565b6101f461020f366004610591565b610396565b61012d6102223660046105b2565b6103ab565b6101b1610235366004610591565b6103e9565b61012d6102483660046105ed565b610442565b61012d61025b3660046105ed565b61045e565b6101b161026e366004610591565b61047b565b61019c6104b5565b61012d6102893660046105ed565b6104c4565b600b60205281600052604060002081815481106102aa57600080fd5b90600052602060002001600091509150505481565b600a60209081526000928352604080842090915290825290205481565b600e60205281600052604060002081815481106102aa57600080fd5b60036020526000908152604090205460ff1681565b6004602052600090815260409020546001600160a01b031681565b6103306104e0565b61033a600061051f565b565b6001546001600160a01b031690565b6005602052600090815260409020546001600160a01b031681565b6006602052600090815260409020546001600160a01b031681565b60086020526000908152604090205460ff1681565b60076020526000908152604090205460ff1681565b600f60205282600052604060002060205281600052604060002081815481106103d357600080fd5b9060005260206000200160009250925050505481565b6103f16104e0565b6001600160a01b0381166104205760405162461bcd60e51b8152600401610417906106b0565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600c60205281600052604060002081815481106102aa57600080fd5b600960209081526000928352604080842090915290825290205481565b6104836104e0565b6001600160a01b0381166104a95760405162461bcd60e51b815260040161041790610635565b6104b28161051f565b50565b6002546001600160a01b031681565b600d60205281600052604060002081815481106102aa57600080fd5b6104e8610571565b6001600160a01b03166104f961033c565b6001600160a01b03161461033a5760405162461bcd60e51b81526004016104179061067b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b3390565b80356001600160a01b038116811461058c57600080fd5b919050565b6000602082840312156105a2578081fd5b6105ab82610575565b9392505050565b6000806000606084860312156105c6578182fd5b6105cf84610575565b92506105dd60208501610575565b9150604084013590509250925092565b600080604083850312156105ff578182fd5b61060883610575565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260159082015274496e76616c6964206167656e74206164647265737360581b604082015260600190565b90815260200190565b60ff9190911681526020019056fea2646970667358221220fb7d8634fff5ed2395c5eb4f58df7efb7ed18ad79b0a38202b4fa85b92b4b7e664736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x26 PUSH2 0x21 PUSH2 0x2B JUMP JUMPDEST PUSH2 0x2F JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x72C DUP1 PUSH2 0x90 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E9B5F97 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE5061D89 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE5061D89 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xED1A8B45 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xF5FF5C76 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xFF4C2254 EQ PUSH2 0x27B JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x9E9B5F97 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xAA624FFA EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xBC5A318A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x227 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x69D70075 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x69D70075 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x943450DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x9CB52525 EQ PUSH2 0x1CE JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0x7B5562 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xAA666C2 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29F2EBB9 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x39C7FCEF EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x12D PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x328 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x33C JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x19C PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x33A PUSH1 0x0 PUSH2 0x51F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x4B2 DUP2 PUSH2 0x51F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E8 PUSH2 0x571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F9 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0x575 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5C6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x5CF DUP5 PUSH2 0x575 JUMP JUMPDEST SWAP3 POP PUSH2 0x5DD PUSH1 0x20 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5FF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x608 DUP4 PUSH2 0x575 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206167656E742061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH30 0x8634FFF5ED2395C5EB4F58DF7EFB7ED18AD79B0A38202B4FA85B92B4B7E6 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "729:3265:8:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:5;1821:7;:22;929:32:4;948:12;:10;:12::i;:::-;929:18;:32::i;:::-;729:3265:8;;640:96:1;719:10;640:96;:::o;2419:187:4:-;2511:6;;;-1:-1:-1;;;;;2527:17:4;;;-1:-1:-1;;;;;;2527:17:4;;;;;;;2559:40;;2511:6;;;2527:17;2511:6;;2559:40;;2492:16;;2559:40;2419:187;;:::o;729:3265:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2901:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:10"
															},
															"nodeType": "YulIf",
															"src": "113:2:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:10",
														"type": ""
													}
												],
												"src": "14:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:10"
															},
															"nodeType": "YulIf",
															"src": "274:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:10",
														"type": ""
													}
												],
												"src": "194:198:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "501:238:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "547:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "556:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "564:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "549:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "549:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "522:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "531:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "518:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "518:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:32:10"
															},
															"nodeType": "YulIf",
															"src": "511:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "582:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "592:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "582:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "632:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "667:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "678:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "663:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "642:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:40:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "691:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "718:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "729:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "701:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "490:6:10",
														"type": ""
													}
												],
												"src": "397:342:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "831:179:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "877:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "886:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "894:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "879:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "879:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "879:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "852:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "861:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "848:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "873:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "844:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:32:10"
															},
															"nodeType": "YulIf",
															"src": "841:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "912:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "943:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "922:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:31:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "962:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "989:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1000:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "985:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "972:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "962:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "789:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "800:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "812:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "820:6:10",
														"type": ""
													}
												],
												"src": "744:266:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1116:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1126:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1138:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1149:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1126:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1183:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1199:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1204:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1195:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1195:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1208:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1191:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1191:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1161:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1085:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1096:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1107:4:10",
														"type": ""
													}
												],
												"src": "1015:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1328:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1340:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1351:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1336:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1336:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1328:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1370:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1395:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1388:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1388:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1381:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1381:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1363:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1363:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1287:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1298:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1309:4:10",
														"type": ""
													}
												],
												"src": "1223:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1589:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1606:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1599:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1651:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1629:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1679:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1690:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1675:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1675:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1695:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1668:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1750:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1761:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1746:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1766:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1739:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1784:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1796:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1792:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1784:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1566:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1580:4:10",
														"type": ""
													}
												],
												"src": "1415:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1996:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2024:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2006:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2047:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2058:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2043:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2043:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2036:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2036:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2086:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2097:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2082:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2082:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2102:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2146:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2158:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2154:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2154:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2146:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1973:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1987:4:10",
														"type": ""
													}
												],
												"src": "1822:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2367:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2367:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2408:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2419:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2404:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2424:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2397:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2447:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2458:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2443:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2443:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2463:23:10",
																		"type": "",
																		"value": "Invalid agent address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2436:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2436:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2508:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2496:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6695ab6c0fed1f1bec225452c9e8e46efdb8505a7d974ac410ebd8bac7f4616__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2334:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2348:4:10",
														"type": ""
													}
												],
												"src": "2183:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2634:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2644:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2656:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2652:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2644:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2686:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2697:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2679:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2603:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2614:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2625:4:10",
														"type": ""
													}
												],
												"src": "2533:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2822:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2834:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2830:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2822:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2864:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2879:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2875:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2857:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2857:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2781:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2792:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2803:4:10",
														"type": ""
													}
												],
												"src": "2715:184:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e6695ab6c0fed1f1bec225452c9e8e46efdb8505a7d974ac410ebd8bac7f4616__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid agent address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101155760003560e01c80639e9b5f97116100a2578063e5061d8911610071578063e5061d891461023a578063ed1a8b451461024d578063f2fde38b14610260578063f5ff5c7614610273578063ff4c22541461027b57610115565b80639e9b5f97146101e1578063aa624ffa14610201578063bc5a318a14610214578063bcf685ed1461022757610115565b806369d70075116100e957806369d7007514610189578063715018a6146101a95780638da5cb5b146101b3578063943450dd146101bb5780639cb52525146101ce57610115565b80627b55621461011a5780630aa666c21461014357806329f2ebb91461015657806339c7fcef14610169575b600080fd5b61012d6101283660046105ed565b61028e565b60405161013a91906106df565b60405180910390f35b61012d6101513660046105ed565b6102bf565b61012d6101643660046105ed565b6102dc565b61017c610177366004610591565b6102f8565b60405161013a919061062a565b61019c610197366004610591565b61030d565b60405161013a9190610616565b6101b1610328565b005b61019c61033c565b61019c6101c9366004610591565b61034b565b61019c6101dc366004610591565b610366565b6101f46101ef366004610591565b610381565b60405161013a91906106e8565b6101f461020f366004610591565b610396565b61012d6102223660046105b2565b6103ab565b6101b1610235366004610591565b6103e9565b61012d6102483660046105ed565b610442565b61012d61025b3660046105ed565b61045e565b6101b161026e366004610591565b61047b565b61019c6104b5565b61012d6102893660046105ed565b6104c4565b600b60205281600052604060002081815481106102aa57600080fd5b90600052602060002001600091509150505481565b600a60209081526000928352604080842090915290825290205481565b600e60205281600052604060002081815481106102aa57600080fd5b60036020526000908152604090205460ff1681565b6004602052600090815260409020546001600160a01b031681565b6103306104e0565b61033a600061051f565b565b6001546001600160a01b031690565b6005602052600090815260409020546001600160a01b031681565b6006602052600090815260409020546001600160a01b031681565b60086020526000908152604090205460ff1681565b60076020526000908152604090205460ff1681565b600f60205282600052604060002060205281600052604060002081815481106103d357600080fd5b9060005260206000200160009250925050505481565b6103f16104e0565b6001600160a01b0381166104205760405162461bcd60e51b8152600401610417906106b0565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600c60205281600052604060002081815481106102aa57600080fd5b600960209081526000928352604080842090915290825290205481565b6104836104e0565b6001600160a01b0381166104a95760405162461bcd60e51b815260040161041790610635565b6104b28161051f565b50565b6002546001600160a01b031681565b600d60205281600052604060002081815481106102aa57600080fd5b6104e8610571565b6001600160a01b03166104f961033c565b6001600160a01b03161461033a5760405162461bcd60e51b81526004016104179061067b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b3390565b80356001600160a01b038116811461058c57600080fd5b919050565b6000602082840312156105a2578081fd5b6105ab82610575565b9392505050565b6000806000606084860312156105c6578182fd5b6105cf84610575565b92506105dd60208501610575565b9150604084013590509250925092565b600080604083850312156105ff578182fd5b61060883610575565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260159082015274496e76616c6964206167656e74206164647265737360581b604082015260600190565b90815260200190565b60ff9190911681526020019056fea2646970667358221220fb7d8634fff5ed2395c5eb4f58df7efb7ed18ad79b0a38202b4fa85b92b4b7e664736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E9B5F97 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE5061D89 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE5061D89 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xED1A8B45 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xF5FF5C76 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xFF4C2254 EQ PUSH2 0x27B JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x9E9B5F97 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xAA624FFA EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xBC5A318A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x227 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x69D70075 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x69D70075 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x943450DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x9CB52525 EQ PUSH2 0x1CE JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0x7B5562 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xAA666C2 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x29F2EBB9 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x39C7FCEF EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x12D PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x328 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x33C JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x19C PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x33A PUSH1 0x0 PUSH2 0x51F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F1 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x4B2 DUP2 PUSH2 0x51F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E8 PUSH2 0x571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F9 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0x575 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5C6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x5CF DUP5 PUSH2 0x575 JUMP JUMPDEST SWAP3 POP PUSH2 0x5DD PUSH1 0x20 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5FF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x608 DUP4 PUSH2 0x575 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206167656E742061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH30 0x8634FFF5ED2395C5EB4F58DF7EFB7ED18AD79B0A38202B4FA85B92B4B7E6 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "729:3265:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9174:52:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9093:75;;;;;;:::i;:::-;;:::i;9351:55::-;;;;;;:::i;:::-;;:::i;8714:46::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8766:51::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1817:101:4:-;;;:::i;:::-;;1194:85;;;:::i;8823:41:7:-;;;;;;:::i;:::-;;:::i;8870:::-;;;;;;:::i;:::-;;:::i;8965:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8917:::-;;;;;;:::i;:::-;;:::i;9412:74::-;;;;;;:::i;:::-;;:::i;9621:154::-;;;;;;:::i;:::-;;:::i;9232:53::-;;;;;;:::i;:::-;;:::i;9013:74::-;;;;;;:::i;:::-;;:::i;2067:198:4:-;;;;;;:::i;:::-;;:::i;7958:20:7:-;;;:::i;9291:54::-;;;;;;:::i;:::-;;:::i;9174:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9093:75::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;9351:55::-;;;;;;;;;;;;;;;;;;;;8714:46;;;;;;;;;;;;;;;:::o;8766:51::-;;;;;;;;;;;;-1:-1:-1;;;;;8766:51:7;;:::o;1817:101:4:-;1087:13;:11;:13::i;:::-;1881:30:::1;1908:1;1881:18;:30::i;:::-;1817:101::o:0;1194:85::-;1266:6;;-1:-1:-1;;;;;1266:6:4;1194:85;:::o;8823:41:7:-;;;;;;;;;;;;-1:-1:-1;;;;;8823:41:7;;:::o;8870:::-;;;;;;;;;;;;-1:-1:-1;;;;;8870:41:7;;:::o;8965:42::-;;;;;;;;;;;;;;;:::o;8917:::-;;;;;;;;;;;;;;;:::o;9412:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9621:154::-;1087:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;9694:22:7;::::1;9686:56;;;;-1:-1:-1::0;;;9686:56:7::1;;;;;;;:::i;:::-;;;;;;;;;9752:5;:16:::0;;-1:-1:-1;;;;;;9752:16:7::1;-1:-1:-1::0;;;;;9752:16:7;;;::::1;::::0;;;::::1;::::0;;9621:154::o;9232:53::-;;;;;;;;;;;;;;;;;;;;9013:74;;;;;;;;;;;;;;;;;;;;;;;;:::o;2067:198:4:-;1087:13;:11;:13::i;:::-;-1:-1:-1;;;;;2155:22:4;::::1;2147:73;;;;-1:-1:-1::0;;;2147:73:4::1;;;;;;;:::i;:::-;2230:28;2249:8;2230:18;:28::i;:::-;2067:198:::0;:::o;7958:20:7:-;;;-1:-1:-1;;;;;7958:20:7;;:::o;9291:54::-;;;;;;;;;;;;;;;;;;;;1352:130:4;1426:12;:10;:12::i;:::-;-1:-1:-1;;;;;1415:23:4;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1415:23:4;;1407:68;;;;-1:-1:-1;;;1407:68:4;;;;;;;:::i;2419:187::-;2511:6;;;-1:-1:-1;;;;;2527:17:4;;;-1:-1:-1;;;;;;2527:17:4;;;;;;;2559:40;;2511:6;;;2527:17;2511:6;;2559:40;;2492:16;;2559:40;2419:187;;:::o;640:96:1:-;719:10;640:96;:::o;14:175:10:-;84:20;;-1:-1:-1;;;;;133:31:10;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:10:o;397:342::-;;;;543:2;531:9;522:7;518:23;514:32;511:2;;;564:6;556;549:22;511:2;592:31;613:9;592:31;:::i;:::-;582:41;;642:40;678:2;667:9;663:18;642:40;:::i;:::-;632:50;;729:2;718:9;714:18;701:32;691:42;;501:238;;;;;:::o;744:266::-;;;873:2;861:9;852:7;848:23;844:32;841:2;;;894:6;886;879:22;841:2;922:31;943:9;922:31;:::i;:::-;912:41;1000:2;985:18;;;;972:32;;-1:-1:-1;;;831:179:10:o;1015:203::-;-1:-1:-1;;;;;1179:32:10;;;;1161:51;;1149:2;1134:18;;1116:102::o;1223:187::-;1388:14;;1381:22;1363:41;;1351:2;1336:18;;1318:92::o;1415:402::-;1617:2;1599:21;;;1656:2;1636:18;;;1629:30;1695:34;1690:2;1675:18;;1668:62;-1:-1:-1;;;1761:2:10;1746:18;;1739:36;1807:3;1792:19;;1589:228::o;1822:356::-;2024:2;2006:21;;;2043:18;;;2036:30;2102:34;2097:2;2082:18;;2075:62;2169:2;2154:18;;1996:182::o;2183:345::-;2385:2;2367:21;;;2424:2;2404:18;;;2397:30;-1:-1:-1;;;2458:2:10;2443:18;;2436:51;2519:2;2504:18;;2357:171::o;2533:177::-;2679:25;;;2667:2;2652:18;;2634:76::o;2715:184::-;2887:4;2875:17;;;;2857:36;;2845:2;2830:18;;2812:87::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "367200",
								"executionCost": "42882",
								"totalCost": "410082"
							},
							"external": {
								"activeBuyOrders(address,uint256)": "2189",
								"activeLongPayouts(address,uint256)": "2275",
								"activeSellOrders(address,uint256)": "2187",
								"activeShortPayouts(address,uint256)": "2233",
								"agent()": "1158",
								"decimalsA(address)": "1315",
								"decimalsB(address)": "1293",
								"isValidListing(address)": "1354",
								"liquidityAddress(address)": "1317",
								"makerActiveOrders(address,address,uint256)": "infinite",
								"orderPendingAmounts(address,uint256)": "1389",
								"owner()": "1137",
								"payoutPendingAmounts(address,uint256)": "1391",
								"renounceOwnership()": "infinite",
								"setAgent(address)": "22249",
								"tokenA(address)": "1383",
								"tokenB(address)": "1405",
								"transferOwnership(address)": "23792"
							},
							"internal": {
								"_clearOrderData(address,uint256,bool)": "infinite",
								"_executeSingleOrder(address,struct SSMainPartial.OrderPrep memory,bool)": "infinite",
								"_handleOrderPrep(address,address,address,uint256,uint256,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 929,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 948,
									"end": 958,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 929,
									"end": 947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 729,
									"end": 3994,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb7d8634fff5ed2395c5eb4f58df7efb7ed18ad79b0a38202b4fa85b92b4b7e664736f6c63430008010033",
									".code": [
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "9E9B5F97"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "E5061D89"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "E5061D89"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "ED1A8B45"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "F5FF5C76"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "FF4C2254"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "9E9B5F97"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "AA624FFA"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "BC5A318A"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "BCF685ED"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "69D70075"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "69D70075"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "943450DD"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "9CB52525"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "7B5562"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "AA666C2"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "29F2EBB9"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "39C7FCEF"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 729,
											"end": 3994,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9694,
											"end": 9716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9694,
											"end": 9716,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2249,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1352,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 65,
											"end": 189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 65,
											"end": 189,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 397,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 397,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 545,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 531,
											"end": 540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 522,
											"end": 529,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 518,
											"end": 541,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 513,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 511,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 511,
											"end": 513,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 564,
											"end": 570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 556,
											"end": 562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 549,
											"end": 571,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 511,
											"end": 513,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 511,
											"end": 513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 592,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 592,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 592,
											"end": 623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 582,
											"end": 623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 582,
											"end": 623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 642,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 676,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 663,
											"end": 681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 642,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 642,
											"end": 682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 682,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 632,
											"end": 682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 729,
											"end": 731,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 714,
											"end": 732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 701,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 691,
											"end": 733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 691,
											"end": 733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 501,
											"end": 739,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 1010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 873,
											"end": 875,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 870,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 852,
											"end": 859,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 848,
											"end": 871,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 841,
											"end": 843,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 894,
											"end": 900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 879,
											"end": 901,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 841,
											"end": 843,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 922,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 922,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 922,
											"end": 953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1004,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 831,
											"end": 1010,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1218,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1015,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1211,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1218,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1223,
											"end": 1410,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1223,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1402,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1381,
											"end": 1403,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 1353,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1336,
											"end": 1354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1410,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1415,
											"end": 1817,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1415,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1659,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1729,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1690,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1730,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1775,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1810,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1792,
											"end": 1811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1817,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1822,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1822,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2027,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2178,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2183,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2426,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206167656E742061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2487,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2528,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2533,
											"end": 2710,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2533,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2634,
											"end": 2710,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2715,
											"end": 2899,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2715,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2847,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2830,
											"end": 2848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2899,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"activeBuyOrders(address,uint256)": "007b5562",
							"activeLongPayouts(address,uint256)": "ff4c2254",
							"activeSellOrders(address,uint256)": "e5061d89",
							"activeShortPayouts(address,uint256)": "29f2ebb9",
							"agent()": "f5ff5c76",
							"decimalsA(address)": "aa624ffa",
							"decimalsB(address)": "9e9b5f97",
							"isValidListing(address)": "39c7fcef",
							"liquidityAddress(address)": "69d70075",
							"makerActiveOrders(address,address,uint256)": "bc5a318a",
							"orderPendingAmounts(address,uint256)": "ed1a8b45",
							"owner()": "8da5cb5b",
							"payoutPendingAmounts(address,uint256)": "0aa666c2",
							"renounceOwnership()": "715018a6",
							"setAgent(address)": "bcf685ed",
							"tokenA(address)": "943450dd",
							"tokenB(address)": "9cb52525",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeBuyOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeLongPayouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeSellOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeShortPayouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalsA\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalsB\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidListing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"makerActiveOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderPendingAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payoutPendingAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/utils/SSOrderPartial.sol\":\"SSOrderPartial\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]},\"ShockSpace/utils/SSMainPartial.sol\":{\"keccak256\":\"0x43e9a02e1964b3c6f3d292ee069ad48d39602dd08bfe7663c2fe25436cd270c1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3c6e1b6ce25070fa1d067a4b6e7db881b4ea6890d10b6ba9a7abb24e067a7c0d\",\"dweb:/ipfs/QmSKJ8x9fb4Cyk6M4aM4Z8oabxwFJHEHGNHgVrJd3bpxX8\"]},\"ShockSpace/utils/SSOrderPartial.sol\":{\"keccak256\":\"0x0692728080048ea231b740f83ed1b2dff5cf8db34dd265814fb1dc0298845a80\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://4001c7bf6f0569cb15219170bf234e7af7757aa8be43b4d128465399f67b4d65\",\"dweb:/ipfs/QmbCwLgXphFAhhhkpsas4zXHF58VP5t6JT3ZBhfr23aQEY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 569,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 453,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1508,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "agent",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1564,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "isValidListing",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1568,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "liquidityAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1572,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "tokenA",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1576,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "tokenB",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1580,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "decimalsA",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint8)"
							},
							{
								"astId": 1584,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "decimalsB",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint8)"
							},
							{
								"astId": 1590,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "orderPendingAmounts",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1596,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "payoutPendingAmounts",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1601,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "activeBuyOrders",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1606,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "activeSellOrders",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1611,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "activeLongPayouts",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1616,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "activeShortPayouts",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1623,
								"contract": "ShockSpace/utils/SSOrderPartial.sol:SSOrderPartial",
								"label": "makerActiveOrders",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint8)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShockSpace/utils/SSSettlementPartial.sol": {
				"SSSettlementPartial": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeBuyOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeLongPayouts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeSellOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "activeShortPayouts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "agent",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "decimalsA",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "decimalsB",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "listing",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "executeBuyOrder",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "updateType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "structId",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "maxPrice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSListingTemplate.UpdateType[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "listing",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "executeLongPayout",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payoutType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "required",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSListingTemplate.PayoutUpdate[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "listing",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "executeSellOrder",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "updateType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "structId",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "maxPrice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPrice",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSListingTemplate.UpdateType[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "listing",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "orderId",
									"type": "uint256"
								}
							],
							"name": "executeShortPayout",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payoutType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "required",
											"type": "uint256"
										}
									],
									"internalType": "struct ISSListingTemplate.PayoutUpdate[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isValidListing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "makerActiveOrders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "orderPendingAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "payoutPendingAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAgent",
									"type": "address"
								}
							],
							"name": "setAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShockSpace/utils/SSSettlementPartial.sol\":2907:20390  contract SSSettlementPartial is SSOrderPartial {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"ShockSpace/imports/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"ShockSpace/imports/Ownable.sol\":929:961  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"ShockSpace/imports/Ownable.sol\":948:960  _msgSender() */\n  tag_7\n    /* \"ShockSpace/imports/Ownable.sol\":948:958  _msgSender */\n  tag_8\n    /* \"ShockSpace/imports/Ownable.sol\":948:960  _msgSender() */\n  jump\t// in\ntag_7:\n    /* \"ShockSpace/imports/Ownable.sol\":929:947  _transferOwnership */\n  tag_9\n    /* \"ShockSpace/imports/Ownable.sol\":929:961  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"ShockSpace/utils/SSSettlementPartial.sol\":2907:20390  contract SSSettlementPartial is SSOrderPartial {... */\n  jump(tag_10)\n    /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"ShockSpace/imports/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  swap2\n  and\n  swap2\n    /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n  dup3\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2492:2508  address oldOwner */\n  0x00\n  swap1\n    /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ShockSpace/utils/SSSettlementPartial.sol\":2907:20390  contract SSSettlementPartial is SSOrderPartial {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":2907:20390  contract SSSettlementPartial is SSOrderPartial {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9cb52525\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc285c607\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc285c607\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe5061d89\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xed1a8b45\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf5ff5c76\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xff4c2254\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x9cb52525\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9e9b5f97\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xaa624ffa\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xbc5a318a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbcf685ed\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x69d70075\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x69d70075\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6cb4ea85\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7601f9fe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x943450dd\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x7b5562\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0aa666c2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x29f2ebb9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39c7fcef\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5fbc13ef\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9174:9226  mapping(address => uint256[]) public activeBuyOrders */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9093:9168  mapping(address => mapping(uint256 => uint256)) public payoutPendingAmounts */\n    tag_4:\n      tag_28\n      tag_35\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9351:9406  mapping(address => uint256[]) public activeShortPayouts */\n    tag_5:\n      tag_28\n      tag_39\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8714:8760  mapping(address => bool) public isValidListing */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10904:12281  function executeSellOrder(... */\n    tag_7:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8766:8817  mapping(address => address) public liquidityAddress */\n    tag_8:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16019:16526  function executeLongPayout(... */\n    tag_9:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9526:10898  function executeBuyOrder(... */\n    tag_11:\n      tag_48\n      tag_67\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_54\n      tag_71\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8823:8864  mapping(address => address) public tokenA */\n    tag_13:\n      tag_54\n      tag_74\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8870:8911  mapping(address => address) public tokenB */\n    tag_14:\n      tag_54\n      tag_78\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8965:9007  mapping(address => uint8) public decimalsB */\n    tag_15:\n      tag_81\n      tag_82\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8917:8959  mapping(address => uint8) public decimalsA */\n    tag_16:\n      tag_81\n      tag_87\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9412:9486  mapping(address => mapping(address => uint256[])) public makerActiveOrders */\n    tag_17:\n      tag_28\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n    tag_18:\n      tag_64\n      tag_96\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16532:17039  function executeShortPayout(... */\n    tag_19:\n      tag_59\n      tag_99\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9232:9285  mapping(address => uint256[]) public activeSellOrders */\n    tag_20:\n      tag_28\n      tag_103\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9013:9087  mapping(address => mapping(uint256 => uint256)) public orderPendingAmounts */\n    tag_21:\n      tag_28\n      tag_107\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_64\n      tag_111\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":7958:7978  address public agent */\n    tag_23:\n      tag_54\n      tag_114\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9291:9345  mapping(address => uint256[]) public activeLongPayouts */\n    tag_24:\n      tag_28\n      tag_117\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9174:9226  mapping(address => uint256[]) public activeBuyOrders */\n    tag_31:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9093:9168  mapping(address => mapping(uint256 => uint256)) public payoutPendingAmounts */\n    tag_36:\n      0x0a\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9351:9406  mapping(address => uint256[]) public activeShortPayouts */\n    tag_40:\n      mstore(0x20, 0x0e)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8714:8760  mapping(address => bool) public isValidListing */\n    tag_45:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10904:12281  function executeSellOrder(... */\n    tag_51:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11247:11291  listingContract.getSellOrderPricing(orderId) */\n      mload(0x40)\n      shl(0xe3, 0x175743b9)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11026:11064  ISSListingTemplate.UpdateType[] memory */\n      0x60\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11132:11139  listing */\n      dup5\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11076:11110  ISSListingTemplate listingContract */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11247:11282  listingContract.getSellOrderPricing */\n      dup5\n      and\n      swap1\n      0xbaba1dc8\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11247:11291  listingContract.getSellOrderPricing(orderId) */\n      tag_125\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11283:11290  orderId */\n      dup10\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11247:11291  listingContract.getSellOrderPricing(orderId) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_125:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11348:11392  listingContract.getSellOrderAmounts(orderId) */\n      mload(0x40)\n      shl(0xe0, 0x60a3e765)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11224:11291  (maxPrice, minPrice) = listingContract.getSellOrderPricing(orderId) */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11305:11320  uint256 pending */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11348:11383  listingContract.getSellOrderAmounts */\n      dup6\n      and\n      swap1\n      0x60a3e765\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11348:11392  listingContract.getSellOrderAmounts(orderId) */\n      tag_131\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11384:11391  orderId */\n      dup11\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11348:11392  listingContract.getSellOrderAmounts(orderId) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_131:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_135:\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11334:11392  (pending, ) = listingContract.getSellOrderAmounts(orderId) */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11410:11422  pending == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11410:11437  pending == 0 || amount == 0 */\n      tag_136\n      jumpi\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11426:11437  amount == 0 */\n      dup6\n      iszero\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11410:11437  pending == 0 || amount == 0 */\n    tag_136:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11406:11517  if (pending == 0 || amount == 0) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11464:11502  new ISSListingTemplate.UpdateType[](0) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11500:11501  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11464:11502  new ISSListingTemplate.UpdateType[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_139)\n    tag_140:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_140\n      jumpi\n      swap1\n      pop\n    tag_139:\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11457:11502  return new ISSListingTemplate.UpdateType[](0) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_124)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11406:11517  if (pending == 0 || amount == 0) {... */\n    tag_137:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11531:11547  uint256 xBalance */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11549:11565  uint256 yBalance */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11573:11588  listingContract */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11573:11614  listingContract.listingVolumeBalancesView */\n      and\n      0x40d87ebe\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11573:11616  listingContract.listingVolumeBalancesView() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11530:11616  (uint256 xBalance, uint256 yBalance, , ) = listingContract.listingVolumeBalancesView() */\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11630:11649  uint256 impactPrice */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11663:11664  0 */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11652:11660  xBalance */\n      dup4\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11652:11664  xBalance > 0 */\n      gt\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11652:11710  xBalance > 0 ? (yBalance * 1e18) / (xBalance + amount) : 0 */\n      tag_148\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11709:11710  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11652:11710  xBalance > 0 ? (yBalance * 1e18) / (xBalance + amount) : 0 */\n      jump(tag_154)\n    tag_148:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11688:11705  xBalance + amount */\n      tag_150\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11699:11705  amount */\n      dup10\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11688:11696  xBalance */\n      dup5\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11688:11705  xBalance + amount */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11668:11683  yBalance * 1e18 */\n      tag_152\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11668:11676  yBalance */\n      dup4\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11679:11683  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11668:11683  yBalance * 1e18 */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11667:11706  (yBalance * 1e18) / (xBalance + amount) */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11630:11710  uint256 impactPrice = xBalance > 0 ? (yBalance * 1e18) / (xBalance + amount) : 0 */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11742:11750  maxPrice */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11728:11739  impactPrice */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11728:11750  impactPrice > maxPrice */\n      gt\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11728:11776  impactPrice > maxPrice || impactPrice < minPrice */\n      dup1\n      tag_156\n      jumpi\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11768:11776  minPrice */\n      dup5\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11754:11765  impactPrice */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11754:11776  impactPrice < minPrice */\n      lt\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11728:11776  impactPrice > maxPrice || impactPrice < minPrice */\n    tag_156:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11724:11856  if (impactPrice > maxPrice || impactPrice < minPrice) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11803:11841  new ISSListingTemplate.UpdateType[](0) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11839:11840  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11803:11841  new ISSListingTemplate.UpdateType[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_159)\n    tag_160:\n      tag_161\n      tag_142\n      jump\t// in\n    tag_161:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_160\n      jumpi\n      swap1\n      pop\n    tag_159:\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11796:11841  return new ISSListingTemplate.UpdateType[](0) */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_124)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11724:11856  if (impactPrice > maxPrice || impactPrice < minPrice) {... */\n    tag_157:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10904:12281  function executeSellOrder(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11889:11909  address tokenAddress */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11923:11937  uint8 decimals */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11951:11971  address makerAddress */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11985:12002  address recipient */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12016:12028  uint8 status */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12042:12064  uint256 amountReceived */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12078:12104  uint256 normalizedReceived */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12117:12163  _prepSellOrderUpdate(listing, orderId, amount) */\n      tag_162\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12138:12145  listing */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12147:12154  orderId */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12156:12162  amount */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12117:12137  _prepSellOrderUpdate */\n      tag_163\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12117:12163  _prepSellOrderUpdate(listing, orderId, amount) */\n      jump\t// in\n    tag_162:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":11875:12163  (... */\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12180:12274  _executeSellOrderUpdate(listing, orderId, normalizedReceived, makerAddress, recipient, status) */\n      tag_164\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12204:12211  listing */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12213:12220  orderId */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12222:12240  normalizedReceived */\n      dup4\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12242:12254  makerAddress */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12256:12265  recipient */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12267:12273  status */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12180:12203  _executeSellOrderUpdate */\n      tag_165\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12180:12274  _executeSellOrderUpdate(listing, orderId, normalizedReceived, makerAddress, recipient, status) */\n      jump\t// in\n    tag_164:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":12173:12274  return _executeSellOrderUpdate(listing, orderId, normalizedReceived, makerAddress, recipient, status) */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10904:12281  function executeSellOrder(... */\n    tag_124:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8766:8817  mapping(address => address) public liquidityAddress */\n    tag_56:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16019:16526  function executeLongPayout(... */\n    tag_61:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16296:16334  listingContract.getLongPayout(orderId) */\n      mload(0x40)\n      shl(0xe0, 0x91776ee7)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16118:16158  ISSListingTemplate.PayoutUpdate[] memory */\n      0x60\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16226:16233  listing */\n      dup4\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16170:16204  ISSListingTemplate listingContract */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16296:16325  listingContract.getLongPayout */\n      dup4\n      and\n      swap1\n      0x91776ee7\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16296:16334  listingContract.getLongPayout(orderId) */\n      tag_167\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16326:16333  orderId */\n      dup8\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16296:16334  listingContract.getLongPayout(orderId) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_167:\n      0xc0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16244:16334  ISSListingTemplate.LongPayoutStruct memory payout = listingContract.getLongPayout(orderId) */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16348:16354  payout */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16348:16363  payout.required */\n      0x40\n      add\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16367:16368  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16348:16368  payout.required == 0 */\n      eq\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16344:16442  if (payout.required == 0) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16391:16431  new ISSListingTemplate.PayoutUpdate[](0) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16429:16430  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16391:16431  new ISSListingTemplate.PayoutUpdate[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_175)\n    tag_176:\n      tag_177\n      tag_178\n      jump\t// in\n    tag_177:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_176\n      jumpi\n      swap1\n      pop\n    tag_175:\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16384:16431  return new ISSListingTemplate.PayoutUpdate[](0) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_166)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16344:16442  if (payout.required == 0) {... */\n    tag_173:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16458:16519  _processPayoutUpdate(listing, orderId, payout.required, true) */\n      tag_179\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16479:16486  listing */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16488:16495  orderId */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16497:16503  payout */\n      dup4\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16497:16512  payout.required */\n      0x40\n      add\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16514:16518  true */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16458:16478  _processPayoutUpdate */\n      tag_180\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16458:16519  _processPayoutUpdate(listing, orderId, payout.required, true) */\n      jump\t// in\n    tag_179:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16451:16519  return _processPayoutUpdate(listing, orderId, payout.required, true) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16019:16526  function executeLongPayout(... */\n    tag_166:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_182\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_183\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_182:\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1911  _transferOwnership(address(0)) */\n      tag_185\n        /* \"ShockSpace/imports/Ownable.sol\":1908:1909  0 */\n      0x00\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1899  _transferOwnership */\n      tag_186\n        /* \"ShockSpace/imports/Ownable.sol\":1881:1911  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_185:\n        /* \"ShockSpace/imports/Ownable.sol\":1817:1918  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9526:10898  function executeBuyOrder(... */\n    tag_68:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9868:9911  listingContract.getBuyOrderPricing(orderId) */\n      mload(0x40)\n      shl(0xe1, 0x04039aef)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9647:9685  ISSListingTemplate.UpdateType[] memory */\n      0x60\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9753:9760  listing */\n      dup5\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9697:9731  ISSListingTemplate listingContract */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9868:9902  listingContract.getBuyOrderPricing */\n      dup5\n      and\n      swap1\n      0x080735de\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9868:9911  listingContract.getBuyOrderPricing(orderId) */\n      tag_188\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9903:9910  orderId */\n      dup10\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9868:9911  listingContract.getBuyOrderPricing(orderId) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_188:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_192:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9968:10011  listingContract.getBuyOrderAmounts(orderId) */\n      mload(0x40)\n      shl(0xe2, 0xed8f31)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9845:9911  (maxPrice, minPrice) = listingContract.getBuyOrderPricing(orderId) */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9925:9940  uint256 pending */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9968:10002  listingContract.getBuyOrderAmounts */\n      dup6\n      and\n      swap1\n      0x03b63cc4\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9968:10011  listingContract.getBuyOrderAmounts(orderId) */\n      tag_193\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10003:10010  orderId */\n      dup11\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9968:10011  listingContract.getBuyOrderAmounts(orderId) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_193:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_197:\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9954:10011  (pending, ) = listingContract.getBuyOrderAmounts(orderId) */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10029:10041  pending == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10029:10056  pending == 0 || amount == 0 */\n      tag_198\n      jumpi\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10045:10056  amount == 0 */\n      dup6\n      iszero\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10029:10056  pending == 0 || amount == 0 */\n    tag_198:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10025:10136  if (pending == 0 || amount == 0) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10083:10121  new ISSListingTemplate.UpdateType[](0) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10119:10120  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10083:10121  new ISSListingTemplate.UpdateType[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_139)\n    tag_202:\n      tag_203\n      tag_142\n      jump\t// in\n    tag_203:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_202\n      jumpi\n      swap1\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10076:10121  return new ISSListingTemplate.UpdateType[](0) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_124)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10025:10136  if (pending == 0 || amount == 0) {... */\n    tag_199:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10150:10166  uint256 xBalance */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10168:10184  uint256 yBalance */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10192:10207  listingContract */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10192:10233  listingContract.listingVolumeBalancesView */\n      and\n      0x40d87ebe\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10192:10235  listingContract.listingVolumeBalancesView() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_207:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10149:10235  (uint256 xBalance, uint256 yBalance, , ) = listingContract.listingVolumeBalancesView() */\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10249:10268  uint256 impactPrice */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10282:10283  0 */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10271:10279  yBalance */\n      dup3\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10271:10283  yBalance > 0 */\n      gt\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10271:10329  yBalance > 0 ? (xBalance * 1e18) / (yBalance + amount) : 0 */\n      tag_208\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10328:10329  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10271:10329  yBalance > 0 ? (xBalance * 1e18) / (yBalance + amount) : 0 */\n      jump(tag_212)\n    tag_208:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10307:10324  yBalance + amount */\n      tag_210\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10318:10324  amount */\n      dup10\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10307:10315  yBalance */\n      dup4\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10307:10324  yBalance + amount */\n      tag_151\n      jump\t// in\n    tag_210:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10287:10302  xBalance * 1e18 */\n      tag_211\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10287:10295  xBalance */\n      dup5\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10298:10302  1e18 */\n      0x0de0b6b3a7640000\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10287:10302  xBalance * 1e18 */\n      tag_153\n      jump\t// in\n    tag_211:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10286:10325  (xBalance * 1e18) / (yBalance + amount) */\n      tag_212\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_212:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10249:10329  uint256 impactPrice = yBalance > 0 ? (xBalance * 1e18) / (yBalance + amount) : 0 */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10361:10369  maxPrice */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10347:10358  impactPrice */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10347:10369  impactPrice > maxPrice */\n      gt\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10347:10395  impactPrice > maxPrice || impactPrice < minPrice */\n      dup1\n      tag_213\n      jumpi\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10387:10395  minPrice */\n      dup5\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10373:10384  impactPrice */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10373:10395  impactPrice < minPrice */\n      lt\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10347:10395  impactPrice > maxPrice || impactPrice < minPrice */\n    tag_213:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10343:10475  if (impactPrice > maxPrice || impactPrice < minPrice) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10422:10460  new ISSListingTemplate.UpdateType[](0) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10458:10459  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10422:10460  new ISSListingTemplate.UpdateType[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_159)\n    tag_217:\n      tag_218\n      tag_142\n      jump\t// in\n    tag_218:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_217\n      jumpi\n      swap1\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10415:10460  return new ISSListingTemplate.UpdateType[](0) */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_124)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10343:10475  if (impactPrice > maxPrice || impactPrice < minPrice) {... */\n    tag_214:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9526:10898  function executeBuyOrder(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10508:10528  address tokenAddress */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10542:10556  uint8 decimals */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10570:10590  address makerAddress */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10604:10621  address recipient */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10635:10647  uint8 status */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10661:10683  uint256 amountReceived */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10697:10723  uint256 normalizedReceived */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10736:10781  _prepBuyOrderUpdate(listing, orderId, amount) */\n      tag_219\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10756:10763  listing */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10765:10772  orderId */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10774:10780  amount */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10736:10755  _prepBuyOrderUpdate */\n      tag_220\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10736:10781  _prepBuyOrderUpdate(listing, orderId, amount) */\n      jump\t// in\n    tag_219:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10494:10781  (... */\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10798:10891  _executeBuyOrderUpdate(listing, orderId, normalizedReceived, makerAddress, recipient, status) */\n      tag_164\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10821:10828  listing */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10830:10837  orderId */\n      dup13\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10839:10857  normalizedReceived */\n      dup4\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10859:10871  makerAddress */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10873:10882  recipient */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10884:10890  status */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10798:10820  _executeBuyOrderUpdate */\n      tag_222\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":10798:10891  _executeBuyOrderUpdate(listing, orderId, normalizedReceived, makerAddress, recipient, status) */\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"ShockSpace/imports/Ownable.sol\":1266:1272  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"ShockSpace/imports/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8823:8864  mapping(address => address) public tokenA */\n    tag_75:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8870:8911  mapping(address => address) public tokenB */\n    tag_79:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8965:9007  mapping(address => uint8) public decimalsB */\n    tag_83:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":8917:8959  mapping(address => uint8) public decimalsA */\n    tag_88:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9412:9486  mapping(address => mapping(address => uint256[])) public makerActiveOrders */\n    tag_93:\n      mstore(0x20, 0x0f)\n      dup3\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n    tag_97:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_227\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_183\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9694:9716  newAgent != address(0) */\n      dup2\n      and\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9686:9742  require(newAgent != address(0), \"Invalid agent address\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9752:9757  agent */\n      0x02\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9752:9768  agent = newAgent */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9621:9775  function setAgent(address newAgent) external onlyOwner {... */\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16532:17039  function executeShortPayout(... */\n    tag_100:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16811:16850  listingContract.getShortPayout(orderId) */\n      mload(0x40)\n      shl(0xe2, 0x31e520db)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16632:16672  ISSListingTemplate.PayoutUpdate[] memory */\n      0x60\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16740:16747  listing */\n      dup4\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16684:16718  ISSListingTemplate listingContract */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16811:16841  listingContract.getShortPayout */\n      dup4\n      and\n      swap1\n      0xc794836c\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16811:16850  listingContract.getShortPayout(orderId) */\n      tag_233\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16842:16849  orderId */\n      dup8\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16811:16850  listingContract.getShortPayout(orderId) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_233:\n      0xc0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_237:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16758:16850  ISSListingTemplate.ShortPayoutStruct memory payout = listingContract.getShortPayout(orderId) */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16864:16870  payout */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16864:16877  payout.amount */\n      0x40\n      add\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16881:16882  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16864:16882  payout.amount == 0 */\n      eq\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16860:16956  if (payout.amount == 0) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16905:16945  new ISSListingTemplate.PayoutUpdate[](0) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16943:16944  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16905:16945  new ISSListingTemplate.PayoutUpdate[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_175)\n    tag_242:\n      tag_243\n      tag_178\n      jump\t// in\n    tag_243:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_242\n      jumpi\n      swap1\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16898:16945  return new ISSListingTemplate.PayoutUpdate[](0) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_166)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16860:16956  if (payout.amount == 0) {... */\n    tag_239:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16972:17032  _processPayoutUpdate(listing, orderId, payout.amount, false) */\n      tag_179\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16993:17000  listing */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":17002:17009  orderId */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":17011:17017  payout */\n      dup4\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":17011:17024  payout.amount */\n      0x40\n      add\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":17026:17031  false */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16972:16992  _processPayoutUpdate */\n      tag_180\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":16972:17032  _processPayoutUpdate(listing, orderId, payout.amount, false) */\n      jump\t// in\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9232:9285  mapping(address => uint256[]) public activeSellOrders */\n    tag_104:\n      mstore(0x20, 0x0c)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9013:9087  mapping(address => mapping(uint256 => uint256)) public orderPendingAmounts */\n    tag_108:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_112:\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_248\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1098  _checkOwner */\n      tag_183\n        /* \"ShockSpace/imports/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":2155:2177  newOwner != address(0) */\n      dup2\n      and\n        /* \"ShockSpace/imports/Ownable.sol\":2147:2220  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_252\n      jump\t// in\n    tag_250:\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2258  _transferOwnership(newOwner) */\n      tag_253\n        /* \"ShockSpace/imports/Ownable.sol\":2249:2257  newOwner */\n      dup2\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2248  _transferOwnership */\n      tag_186\n        /* \"ShockSpace/imports/Ownable.sol\":2230:2258  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_253:\n        /* \"ShockSpace/imports/Ownable.sol\":2067:2265  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":7958:7978  address public agent */\n    tag_114:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"ShockSpace/utils/SSMainPartial.sol\":9291:9345  mapping(address => uint256[]) public activeLongPayouts */\n    tag_118:\n      mstore(0x20, 0x0d)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6516:7202  function _prepSellOrderUpdate(... */\n    tag_163:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6653:6673  address tokenAddress */\n      0x00\n      dup1\n      dup1\n      dup1\n      dup1\n      dup1\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6917:6924  listing */\n      dup10\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6962:6998  _getTokenAndDecimals(listing, false) */\n      tag_257\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6917:6924  listing */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6653:6673  address tokenAddress */\n      dup4\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6962:6982  _getTokenAndDecimals */\n      tag_258\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6962:6998  _getTokenAndDecimals(listing, false) */\n      jump\t// in\n    tag_257:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7044:7085  listingContract.getSellOrderCore(orderId) */\n      mload(0x40)\n      shl(0xe1, 0x4abfd7bf)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6935:6998  (tokenAddress, decimals) = _getTokenAndDecimals(listing, false) */\n      swap2\n      swap10\n      pop\n      swap8\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7044:7076  listingContract.getSellOrderCore */\n      dup3\n      and\n      swap1\n      0x957faf7e\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7044:7085  listingContract.getSellOrderCore(orderId) */\n      tag_259\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7077:7084  orderId */\n      dup14\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7044:7085  listingContract.getSellOrderCore(orderId) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_259:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_263\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7008:7085  (makerAddress, recipient, status) = listingContract.getSellOrderCore(orderId) */\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7134:7195  _executeTransaction(listing, tokenAddress, amount, recipient) */\n      tag_265\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7154:7161  listing */\n      dup12\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7163:7175  tokenAddress */\n      dup10\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7177:7183  amount */\n      dup12\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7008:7085  (makerAddress, recipient, status) = listingContract.getSellOrderCore(orderId) */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7134:7153  _executeTransaction */\n      tag_266\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7134:7195  _executeTransaction(listing, tokenAddress, amount, recipient) */\n      jump\t// in\n    tag_265:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6516:7202  function _prepSellOrderUpdate(... */\n      swap9\n      swap13\n      swap8\n      swap12\n      pop\n      swap6\n      swap10\n      pop\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7095:7195  (amountReceived, normalizedReceived) = _executeTransaction(listing, tokenAddress, amount, recipient) */\n      swap4\n      swap5\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6516:7202  function _prepSellOrderUpdate(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8009:8806  function _executeSellOrderUpdate(... */\n    tag_165:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8231:8269  ISSListingTemplate.UpdateType[] memory */\n      0x60\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8285:8308  normalizedReceived == 0 */\n      dup5\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8281:8380  if (normalizedReceived == 0) {... */\n      tag_268\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8331:8369  new ISSListingTemplate.UpdateType[](0) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8367:8368  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8331:8369  new ISSListingTemplate.UpdateType[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_270)\n    tag_271:\n      tag_272\n      tag_142\n      jump\t// in\n    tag_272:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_271\n      jumpi\n      swap1\n      pop\n    tag_270:\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8324:8369  return new ISSListingTemplate.UpdateType[](0) */\n      swap1\n      pop\n      jump(tag_267)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8281:8380  if (normalizedReceived == 0) {... */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8413:8441  orderPendingAmounts[listing] */\n      dup8\n      and\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8389:8410  uint256 pendingAmount */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8413:8441  orderPendingAmounts[listing] */\n      swap1\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8413:8432  orderPendingAmounts */\n      0x09\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8413:8441  orderPendingAmounts[listing] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8413:8450  orderPendingAmounts[listing][orderId] */\n      dup10\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8509:8706  _createOrderUpdates(... */\n      tag_273\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8442:8449  orderId */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8563:8581  normalizedReceived */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8595:8607  makerAddress */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8621:8630  recipient */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8644:8650  status */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8389:8410  uint256 pendingAmount */\n      dup7\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8413:8450  orderPendingAmounts[listing][orderId] */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8509:8528  _createOrderUpdates */\n      tag_274\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8509:8706  _createOrderUpdates(... */\n      jump\t// in\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8744  orderPendingAmounts[listing] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8735  orderPendingAmounts */\n      0x09\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8744  orderPendingAmounts[listing] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8753  orderPendingAmounts[listing][orderId] */\n      dup13\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8775  orderPendingAmounts[listing][orderId] -= normalizedReceived */\n      dup1\n      sload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8460:8706  ISSListingTemplate.UpdateType[] memory updates = _createOrderUpdates(... */\n      swap3\n      swap4\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8757:8775  normalizedReceived */\n      dup10\n      swap3\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8753  orderPendingAmounts[listing][orderId] */\n      swap1\n      swap2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8744  orderPendingAmounts[listing] */\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8775  orderPendingAmounts[listing][orderId] -= normalizedReceived */\n      tag_275\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8757:8775  normalizedReceived */\n      dup5\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8716:8775  orderPendingAmounts[listing][orderId] -= normalizedReceived */\n      tag_276\n      jump\t// in\n    tag_275:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8792:8799  updates */\n      swap1\n      swap3\n      pop\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8009:8806  function _executeSellOrderUpdate(... */\n    tag_267:\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8812:9520  function _processPayoutUpdate(... */\n    tag_180:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9144:9184  new ISSListingTemplate.PayoutUpdate[](1) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9182:9183  1 */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9144:9184  new ISSListingTemplate.PayoutUpdate[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8961:9001  ISSListingTemplate.PayoutUpdate[] memory */\n      0x60\n      swap2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9069:9076  listing */\n      dup7\n      swap2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9013:9047  ISSListingTemplate listingContract */\n      0x00\n      swap2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9144:9184  new ISSListingTemplate.PayoutUpdate[](1) */\n      dup2\n      0x20\n      add\n    tag_280:\n      tag_281\n      tag_178\n      jump\t// in\n    tag_281:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_280\n      jumpi\n      swap1\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9087:9184  ISSListingTemplate.PayoutUpdate[] memory payoutUpdates = new ISSListingTemplate.PayoutUpdate[](1) */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9213:9361  ISSListingTemplate.PayoutUpdate({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9271:9277  isLong */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9271:9285  isLong ? 0 : 1 */\n      tag_282\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9284:9285  1 */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9271:9285  isLong ? 0 : 1 */\n      jump(tag_283)\n    tag_282:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9280:9281  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9271:9285  isLong ? 0 : 1 */\n    tag_283:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9213:9361  ISSListingTemplate.PayoutUpdate({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9318:9319  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9213:9361  ISSListingTemplate.PayoutUpdate({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9344:9350  amount */\n      dup7\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9213:9361  ISSListingTemplate.PayoutUpdate({... */\n      dup2\n      mstore\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9194:9207  payoutUpdates */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9208:9209  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9194:9210  payoutUpdates[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_284\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_284:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9194:9361  payoutUpdates[0] = ISSListingTemplate.PayoutUpdate({... */\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9371:9425  listingContract.ssUpdate(address(this), payoutUpdates) */\n      mload(0x40)\n      shl(0xe0, 0x88413c17)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9371:9395  listingContract.ssUpdate */\n      dup4\n      and\n      swap1\n      0x88413c17\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9371:9425  listingContract.ssUpdate(address(this), payoutUpdates) */\n      tag_285\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9404:9408  this */\n      address\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9411:9424  payoutUpdates */\n      dup6\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9371:9425  listingContract.ssUpdate(address(this), payoutUpdates) */\n      0x04\n      add\n      tag_286\n      jump\t// in\n    tag_285:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_287:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_289\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_289:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9435:9464  payoutPendingAmounts[listing] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9435:9455  payoutPendingAmounts */\n      0x0a\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9435:9464  payoutPendingAmounts[listing] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9435:9473  payoutPendingAmounts[listing][orderId] */\n      dup10\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9435:9483  payoutPendingAmounts[listing][orderId] -= amount */\n      dup1\n      sload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9477:9483  amount */\n      dup8\n      swap3\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9435:9464  payoutPendingAmounts[listing] */\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9435:9483  payoutPendingAmounts[listing][orderId] -= amount */\n      tag_290\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9477:9483  amount */\n      dup5\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9435:9483  payoutPendingAmounts[listing][orderId] -= amount */\n      tag_276\n      jump\t// in\n    tag_290:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":9500:9513  payoutUpdates */\n      swap1\n      swap8\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":8812:9520  function _processPayoutUpdate(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/imports/Ownable.sol\":1352:1482  function _checkOwner() internal view virtual {... */\n    tag_183:\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1438  _msgSender() */\n      tag_292\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1436  _msgSender */\n      tag_293\n        /* \"ShockSpace/imports/Ownable.sol\":1426:1438  _msgSender() */\n      jump\t// in\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1438  owner() == _msgSender() */\n      and\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1422  owner() */\n      tag_294\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1420  owner */\n      tag_71\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1422  owner() */\n      jump\t// in\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":1415:1438  owner() == _msgSender() */\n      and\n      eq\n        /* \"ShockSpace/imports/Ownable.sol\":1407:1475  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_297\n      jump\t// in\n        /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_186:\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      swap2\n      and\n      swap2\n        /* \"ShockSpace/imports/Ownable.sol\":2527:2544  _owner = newOwner */\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2511:2517  _owner */\n      dup3\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2492:2508  address oldOwner */\n      0x00\n      swap1\n        /* \"ShockSpace/imports/Ownable.sol\":2559:2599  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"ShockSpace/imports/Ownable.sol\":2419:2606  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5827:6510  function _prepBuyOrderUpdate(... */\n    tag_220:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5963:5983  address tokenAddress */\n      0x00\n      dup1\n      dup1\n      dup1\n      dup1\n      dup1\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6227:6234  listing */\n      dup10\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6272:6307  _getTokenAndDecimals(listing, true) */\n      tag_300\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6227:6234  listing */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6302:6306  true */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6272:6292  _getTokenAndDecimals */\n      tag_258\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6272:6307  _getTokenAndDecimals(listing, true) */\n      jump\t// in\n    tag_300:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6353:6393  listingContract.getBuyOrderCore(orderId) */\n      mload(0x40)\n      shl(0xe0, 0x4b66cd4b)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6245:6307  (tokenAddress, decimals) = _getTokenAndDecimals(listing, true) */\n      swap2\n      swap10\n      pop\n      swap8\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6353:6384  listingContract.getBuyOrderCore */\n      dup3\n      and\n      swap1\n      0x4b66cd4b\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6353:6393  listingContract.getBuyOrderCore(orderId) */\n      tag_259\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6385:6392  orderId */\n      dup14\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":6353:6393  listingContract.getBuyOrderCore(orderId) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7208:8003  function _executeBuyOrderUpdate(... */\n    tag_222:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7429:7467  ISSListingTemplate.UpdateType[] memory */\n      0x60\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7483:7506  normalizedReceived == 0 */\n      dup5\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7479:7578  if (normalizedReceived == 0) {... */\n      tag_308\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7529:7567  new ISSListingTemplate.UpdateType[](0) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7565:7566  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7529:7567  new ISSListingTemplate.UpdateType[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_270)\n    tag_311:\n      tag_312\n      tag_142\n      jump\t// in\n    tag_312:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_311\n      jumpi\n      swap1\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7522:7567  return new ISSListingTemplate.UpdateType[](0) */\n      swap1\n      pop\n      jump(tag_267)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7479:7578  if (normalizedReceived == 0) {... */\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7611:7639  orderPendingAmounts[listing] */\n      dup8\n      and\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7587:7608  uint256 pendingAmount */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7611:7639  orderPendingAmounts[listing] */\n      swap1\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7611:7630  orderPendingAmounts */\n      0x09\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7611:7639  orderPendingAmounts[listing] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7611:7648  orderPendingAmounts[listing][orderId] */\n      dup10\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7707:7903  _createOrderUpdates(... */\n      tag_273\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7640:7647  orderId */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7761:7779  normalizedReceived */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7793:7805  makerAddress */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7819:7828  recipient */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7842:7848  status */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7862:7866  true */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7611:7648  orderPendingAmounts[listing][orderId] */\n      dup9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7707:7726  _createOrderUpdates */\n      tag_274\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":7707:7903  _createOrderUpdates(... */\n      jump\t// in\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3534:3817  function _getTokenAndDecimals(... */\n    tag_258:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3638:3658  address tokenAddress */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3660:3674  uint8 decimals */\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3701:3706  isBuy */\n      dup3\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3701:3742  isBuy ? tokenB[listing] : tokenA[listing] */\n      tag_316\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3727:3742  tokenA[listing] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3727:3733  tokenA */\n      0x05\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3727:3742  tokenA[listing] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3701:3742  isBuy ? tokenB[listing] : tokenA[listing] */\n      jump(tag_317)\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3709:3724  tokenB[listing] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3709:3715  tokenB */\n      0x06\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3709:3724  tokenB[listing] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3701:3742  isBuy ? tokenB[listing] : tokenA[listing] */\n    tag_317:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3686:3742  tokenAddress = isBuy ? tokenB[listing] : tokenA[listing] */\n      swap2\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3763:3768  isBuy */\n      dup3\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3763:3810  isBuy ? decimalsB[listing] : decimalsA[listing] */\n      tag_318\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3792:3810  decimalsA[listing] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3792:3801  decimalsA */\n      0x07\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3792:3810  decimalsA[listing] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3763:3810  isBuy ? decimalsB[listing] : decimalsA[listing] */\n      jump(tag_319)\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3771:3789  decimalsB[listing] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3771:3780  decimalsB */\n      0x08\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3771:3789  decimalsB[listing] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3763:3810  isBuy ? decimalsB[listing] : decimalsA[listing] */\n    tag_319:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3752:3810  decimals = isBuy ? decimalsB[listing] : decimalsA[listing] */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3534:3817  function _getTokenAndDecimals(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3823:4737  function _executeTransaction(... */\n    tag_266:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3982:4004  uint256 amountReceived */\n      0x00\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4100:4107  listing */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3982:4004  uint256 amountReceived */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4135:4161  tokenAddress == address(0) */\n      dup8\n      and\n      iszero\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4135:4200  tokenAddress == address(0) ? 18 : IERC20(tokenAddress).decimals() */\n      tag_321\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4176:4188  tokenAddress */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4169:4198  IERC20(tokenAddress).decimals */\n      and\n      0x313ce567\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4169:4200  IERC20(tokenAddress).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_322:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_324\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_324:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_325\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4135:4200  tokenAddress == address(0) ? 18 : IERC20(tokenAddress).decimals() */\n      jump(tag_327)\n    tag_321:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4164:4166  18 */\n      0x12\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4135:4200  tokenAddress == address(0) ? 18 : IERC20(tokenAddress).decimals() */\n    tag_327:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4118:4200  uint8 decimals = tokenAddress == address(0) ? 18 : IERC20(tokenAddress).decimals() */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4210:4228  uint256 preBalance */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4231:4257  tokenAddress == address(0) */\n      dup9\n      and\n      iszero\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4231:4329  tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this)) */\n      tag_328\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4284:4329  IERC20(tokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4284:4314  IERC20(tokenAddress).balanceOf */\n      dup10\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4284:4329  IERC20(tokenAddress).balanceOf(address(this)) */\n      tag_329\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4323:4327  this */\n      address\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4284:4329  IERC20(tokenAddress).balanceOf(address(this)) */\n      0x04\n      add\n      tag_58\n      jump\t// in\n    tag_329:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_332\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_332:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_333\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4231:4329  tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this)) */\n      jump(tag_335)\n    tag_328:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4260:4281  address(this).balance */\n      selfbalance\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4231:4329  tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this)) */\n    tag_335:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4339:4411  listingContract.transact(address(this), tokenAddress, amount, recipient) */\n      mload(0x40)\n      shl(0xe0, 0xf9b44c85)\n      dup2\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4210:4329  uint256 preBalance = tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4339:4363  listingContract.transact */\n      dup5\n      and\n      swap1\n      0xf9b44c85\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4339:4411  listingContract.transact(address(this), tokenAddress, amount, recipient) */\n      tag_336\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4372:4376  this */\n      address\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4379:4391  tokenAddress */\n      dup13\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4393:4399  amount */\n      dup13\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4401:4410  recipient */\n      dup13\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4339:4411  listingContract.transact(address(this), tokenAddress, amount, recipient) */\n      0x04\n      add\n      tag_337\n      jump\t// in\n    tag_336:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4421:4440  uint256 postBalance */\n      0x00\n      swap3\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4443:4469  tokenAddress == address(0) */\n      dup10\n      and\n      iszero\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4443:4541  tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this)) */\n      tag_341\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4496:4541  IERC20(tokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4496:4526  IERC20(tokenAddress).balanceOf */\n      dup11\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4496:4541  IERC20(tokenAddress).balanceOf(address(this)) */\n      tag_342\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4535:4539  this */\n      address\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4496:4541  IERC20(tokenAddress).balanceOf(address(this)) */\n      0x04\n      add\n      tag_58\n      jump\t// in\n    tag_342:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_343:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_345\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_345:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_346\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_346:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4443:4541  tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this)) */\n      jump(tag_347)\n    tag_341:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4472:4493  address(this).balance */\n      selfbalance\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4443:4541  tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this)) */\n    tag_347:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4421:4541  uint256 postBalance = tokenAddress == address(0) ? address(this).balance : IERC20(tokenAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4582:4592  preBalance */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4568:4579  postBalance */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4568:4592  postBalance > preBalance */\n      gt\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4568:4623  postBalance > preBalance ? postBalance - preBalance : 0 */\n      tag_348\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4622:4623  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4568:4623  postBalance > preBalance ? postBalance - preBalance : 0 */\n      jump(tag_350)\n    tag_348:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4595:4619  postBalance - preBalance */\n      tag_350\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4609:4619  preBalance */\n      dup3\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4595:4606  postBalance */\n      dup3\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4595:4619  postBalance - preBalance */\n      tag_276\n      jump\t// in\n    tag_350:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4551:4623  amountReceived = postBalance > preBalance ? postBalance - preBalance : 0 */\n      swap6\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4671:4672  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4654:4668  amountReceived */\n      dup7\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4654:4672  amountReceived > 0 */\n      gt\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4654:4730  amountReceived > 0 ? listingContract.normalize(amountReceived, decimals) : 0 */\n      tag_351\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4729:4730  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4654:4730  amountReceived > 0 ? listingContract.normalize(amountReceived, decimals) : 0 */\n      jump(tag_358)\n    tag_351:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4675:4726  listingContract.normalize(amountReceived, decimals) */\n      mload(0x40)\n      shl(0xe0, 0x41ef492b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4675:4700  listingContract.normalize */\n      dup6\n      and\n      swap1\n      0x41ef492b\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4675:4726  listingContract.normalize(amountReceived, decimals) */\n      tag_353\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4701:4715  amountReceived */\n      dup10\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4717:4725  decimals */\n      dup8\n      swap1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4675:4726  listingContract.normalize(amountReceived, decimals) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_353:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_355\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_355:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_357\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_357:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_358\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_358:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4633:4730  normalizedReceived = amountReceived > 0 ? listingContract.normalize(amountReceived, decimals) : 0 */\n      swap5\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":3823:4737  function _executeTransaction(... */\n      pop\n      pop\n      pop\n      pop\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4743:5821  function _createOrderUpdates(... */\n    tag_274:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5091:5129  new ISSListingTemplate.UpdateType[](2) */\n      0x40\n      dup1\n      mload\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5127:5128  2 */\n      0x02\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5091:5129  new ISSListingTemplate.UpdateType[](2) */\n      dup1\n      dup3\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4992:5030  ISSListingTemplate.UpdateType[] memory */\n      0x60\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5091:5129  new ISSListingTemplate.UpdateType[](2) */\n      dup3\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5042:5088  ISSListingTemplate.UpdateType[] memory updates */\n      0x00\n      swap2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5091:5129  new ISSListingTemplate.UpdateType[](2) */\n      swap1\n      dup2\n      0x20\n      add\n    tag_362:\n      tag_363\n      tag_142\n      jump\t// in\n    tag_363:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_362\n      jumpi\n      swap1\n      pop\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5042:5129  ISSListingTemplate.UpdateType[] memory updates = new ISSListingTemplate.UpdateType[](2) */\n      swap1\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5208:5213  isBuy */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5208:5221  isBuy ? 1 : 2 */\n      tag_364\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5220:5221  2 */\n      0x02\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5208:5221  isBuy ? 1 : 2 */\n      jump(tag_365)\n    tag_364:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5216:5217  1 */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5208:5221  isBuy ? 1 : 2 */\n    tag_365:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5245:5246  2 */\n      0x02\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5267:5274  orderId */\n      dup11\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5295:5313  normalizedReceived */\n      dup10\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5341:5342  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5376:5377  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5402:5403  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5427:5428  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5152:5439  ISSListingTemplate.UpdateType({... */\n      dup2\n      mstore\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5139:5146  updates */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5147:5148  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5139:5149  updates[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_366\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_366:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5139:5439  updates[0] = ISSListingTemplate.UpdateType({... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5518:5523  isBuy */\n      dup6\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5518:5531  isBuy ? 1 : 2 */\n      tag_367\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5530:5531  2 */\n      0x02\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5518:5531  isBuy ? 1 : 2 */\n      jump(tag_368)\n    tag_367:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5526:5527  1 */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5518:5531  isBuy ? 1 : 2 */\n    tag_368:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5555:5556  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5577:5584  orderId */\n      dup11\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5605:5611  status */\n      dup7\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5605:5616  status == 1 */\n      0xff\n      and\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5615:5616  1 */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5605:5616  status == 1 */\n      eq\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5605:5655  status == 1 && normalizedReceived >= pendingAmount */\n      dup1\n      iszero\n      tag_369\n      jumpi\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5642:5655  pendingAmount */\n      dup5\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5620:5638  normalizedReceived */\n      dup11\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5620:5655  normalizedReceived >= pendingAmount */\n      lt\n      iszero\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5605:5655  status == 1 && normalizedReceived >= pendingAmount */\n    tag_369:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5605:5663  status == 1 && normalizedReceived >= pendingAmount ? 3 : 2 */\n      tag_370\n      jumpi\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5662:5663  2 */\n      0x02\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5605:5663  status == 1 && normalizedReceived >= pendingAmount ? 3 : 2 */\n      jump(tag_371)\n    tag_370:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5658:5659  3 */\n      0x03\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5605:5663  status == 1 && normalizedReceived >= pendingAmount ? 3 : 2 */\n    tag_371:\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5683:5695  makerAddress */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5720:5729  recipient */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5753:5754  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5778:5779  0 */\n      0x00\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5462:5790  ISSListingTemplate.UpdateType({... */\n      dup2\n      mstore\n      pop\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5449:5456  updates */\n      dup2\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5457:5458  1 */\n      0x01\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5449:5459  updates[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_372\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_372:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5449:5790  updates[1] = ISSListingTemplate.UpdateType({... */\n      mstore\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":5807:5814  updates */\n      swap9\n        /* \"ShockSpace/utils/SSSettlementPartial.sol\":4743:5821  function _createOrderUpdates(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_293:\n        /* \"ShockSpace/imports/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ShockSpace/imports/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_142:\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n      and(0xff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_178:\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:156   */\n    tag_375:\n        /* \"#utility.yul\":95:108   */\n      dup1\n      mload\n        /* \"#utility.yul\":117:150   */\n      tag_377\n        /* \"#utility.yul\":95:108   */\n      dup2\n        /* \"#utility.yul\":117:150   */\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":76:156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":161:1071   */\n    tag_379:\n      0x00\n        /* \"#utility.yul\":286:290   */\n      0xc0\n        /* \"#utility.yul\":274:283   */\n      dup3\n        /* \"#utility.yul\":269:272   */\n      dup5\n        /* \"#utility.yul\":265:284   */\n      sub\n        /* \"#utility.yul\":261:291   */\n      slt\n        /* \"#utility.yul\":258:260   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":308:313   */\n      dup1\n        /* \"#utility.yul\":301:306   */\n      dup2\n        /* \"#utility.yul\":294:314   */\n      revert\n        /* \"#utility.yul\":258:260   */\n    tag_381:\n        /* \"#utility.yul\":345:347   */\n      0x40\n        /* \"#utility.yul\":339:348   */\n      mload\n        /* \"#utility.yul\":387:391   */\n      0xc0\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":375:392   */\n      add\n        /* \"#utility.yul\":458:464   */\n      dup2\n        /* \"#utility.yul\":446:456   */\n      dup2\n        /* \"#utility.yul\":443:465   */\n      lt\n        /* \"#utility.yul\":422:440   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":410:420   */\n      dup3\n        /* \"#utility.yul\":407:441   */\n      gt\n        /* \"#utility.yul\":404:466   */\n      or\n        /* \"#utility.yul\":401:403   */\n      iszero\n      tag_382\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":489:524   */\n      dup4\n      mstore\n        /* \"#utility.yul\":547:551   */\n      0x41\n        /* \"#utility.yul\":544:545   */\n      0x04\n        /* \"#utility.yul\":537:552   */\n      mstore\n        /* \"#utility.yul\":579:583   */\n      0x24\n        /* \"#utility.yul\":496:501   */\n      dup4\n        /* \"#utility.yul\":565:584   */\n      revert\n        /* \"#utility.yul\":401:403   */\n    tag_382:\n        /* \"#utility.yul\":610:612   */\n      0x40\n        /* \"#utility.yul\":603:625   */\n      mstore\n        /* \"#utility.yul\":643:649   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":673:715   */\n      tag_383\n        /* \"#utility.yul\":705:714   */\n      dup4\n        /* \"#utility.yul\":673:715   */\n      tag_375\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":665:671   */\n      dup2\n        /* \"#utility.yul\":658:716   */\n      mstore\n        /* \"#utility.yul\":749:800   */\n      tag_384\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":785:794   */\n      dup5\n        /* \"#utility.yul\":781:799   */\n      add\n        /* \"#utility.yul\":749:800   */\n      tag_375\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":744:746   */\n      0x20\n        /* \"#utility.yul\":736:742   */\n      dup3\n        /* \"#utility.yul\":732:747   */\n      add\n        /* \"#utility.yul\":725:801   */\n      mstore\n        /* \"#utility.yul\":855:857   */\n      0x40\n        /* \"#utility.yul\":844:853   */\n      dup4\n        /* \"#utility.yul\":840:858   */\n      add\n        /* \"#utility.yul\":834:859   */\n      mload\n        /* \"#utility.yul\":829:831   */\n      0x40\n        /* \"#utility.yul\":821:827   */\n      dup3\n        /* \"#utility.yul\":817:832   */\n      add\n        /* \"#utility.yul\":810:860   */\n      mstore\n        /* \"#utility.yul\":914:916   */\n      0x60\n        /* \"#utility.yul\":903:912   */\n      dup4\n        /* \"#utility.yul\":899:917   */\n      add\n        /* \"#utility.yul\":893:918   */\n      mload\n        /* \"#utility.yul\":888:890   */\n      0x60\n        /* \"#utility.yul\":880:886   */\n      dup3\n        /* \"#utility.yul\":876:891   */\n      add\n        /* \"#utility.yul\":869:919   */\n      mstore\n        /* \"#utility.yul\":974:977   */\n      0x80\n        /* \"#utility.yul\":963:972   */\n      dup4\n        /* \"#utility.yul\":959:978   */\n      add\n        /* \"#utility.yul\":953:979   */\n      mload\n        /* \"#utility.yul\":947:950   */\n      0x80\n        /* \"#utility.yul\":939:945   */\n      dup3\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":928:980   */\n      mstore\n        /* \"#utility.yul\":1014:1064   */\n      tag_385\n        /* \"#utility.yul\":1059:1062   */\n      0xa0\n        /* \"#utility.yul\":1048:1057   */\n      dup5\n        /* \"#utility.yul\":1044:1063   */\n      add\n        /* \"#utility.yul\":1014:1064   */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1008:1011   */\n      0xa0\n        /* \"#utility.yul\":1000:1006   */\n      dup3\n        /* \"#utility.yul\":996:1012   */\n      add\n        /* \"#utility.yul\":989:1065   */\n      mstore\n      pop\n        /* \"#utility.yul\":248:1071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1076:1238   */\n    tag_386:\n        /* \"#utility.yul\":1155:1168   */\n      dup1\n      mload\n        /* \"#utility.yul\":1208:1212   */\n      0xff\n        /* \"#utility.yul\":1197:1213   */\n      dup2\n      and\n        /* \"#utility.yul\":1187:1214   */\n      dup2\n      eq\n        /* \"#utility.yul\":1177:1179   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1228:1229   */\n      0x00\n        /* \"#utility.yul\":1225:1226   */\n      dup1\n        /* \"#utility.yul\":1218:1230   */\n      revert\n        /* \"#utility.yul\":1243:1502   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1343:1352   */\n      dup3\n        /* \"#utility.yul\":1334:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1353   */\n      sub\n        /* \"#utility.yul\":1326:1358   */\n      slt\n        /* \"#utility.yul\":1323:1325   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":1376:1382   */\n      dup1\n        /* \"#utility.yul\":1368:1374   */\n      dup2\n        /* \"#utility.yul\":1361:1383   */\n      revert\n        /* \"#utility.yul\":1323:1325   */\n    tag_390:\n        /* \"#utility.yul\":1420:1429   */\n      dup2\n        /* \"#utility.yul\":1407:1430   */\n      calldataload\n        /* \"#utility.yul\":1439:1472   */\n      tag_124\n        /* \"#utility.yul\":1466:1471   */\n      dup2\n        /* \"#utility.yul\":1439:1472   */\n      tag_378\n      jump\t// in\n        /* \"#utility.yul\":1507:1977   */\n    tag_92:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1653:1655   */\n      0x60\n        /* \"#utility.yul\":1641:1650   */\n      dup5\n        /* \"#utility.yul\":1632:1639   */\n      dup7\n        /* \"#utility.yul\":1628:1651   */\n      sub\n        /* \"#utility.yul\":1624:1656   */\n      slt\n        /* \"#utility.yul\":1621:1623   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":1674:1680   */\n      dup2\n        /* \"#utility.yul\":1666:1672   */\n      dup3\n        /* \"#utility.yul\":1659:1681   */\n      revert\n        /* \"#utility.yul\":1621:1623   */\n    tag_393:\n        /* \"#utility.yul\":1718:1727   */\n      dup4\n        /* \"#utility.yul\":1705:1728   */\n      calldataload\n        /* \"#utility.yul\":1737:1770   */\n      tag_394\n        /* \"#utility.yul\":1764:1769   */\n      dup2\n        /* \"#utility.yul\":1737:1770   */\n      tag_378\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1789:1794   */\n      swap3\n      pop\n        /* \"#utility.yul\":1846:1848   */\n      0x20\n        /* \"#utility.yul\":1831:1849   */\n      dup5\n      add\n        /* \"#utility.yul\":1818:1850   */\n      calldataload\n        /* \"#utility.yul\":1859:1894   */\n      tag_395\n        /* \"#utility.yul\":1818:1850   */\n      dup2\n        /* \"#utility.yul\":1859:1894   */\n      tag_378\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":1611:1977   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1913:1920   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1967:1969   */\n      0x40\n        /* \"#utility.yul\":1952:1970   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1939:1971   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1611:1977   */\n      jump\t// out\n        /* \"#utility.yul\":1982:2464   */\n    tag_264:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x60\n        /* \"#utility.yul\":2125:2134   */\n      dup5\n        /* \"#utility.yul\":2116:2123   */\n      dup7\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2107   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":2158:2164   */\n      dup3\n        /* \"#utility.yul\":2150:2156   */\n      dup4\n        /* \"#utility.yul\":2143:2165   */\n      revert\n        /* \"#utility.yul\":2105:2107   */\n    tag_397:\n        /* \"#utility.yul\":2195:2204   */\n      dup4\n        /* \"#utility.yul\":2189:2205   */\n      mload\n        /* \"#utility.yul\":2214:2247   */\n      tag_398\n        /* \"#utility.yul\":2241:2246   */\n      dup2\n        /* \"#utility.yul\":2214:2247   */\n      tag_378\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2316:2318   */\n      0x20\n        /* \"#utility.yul\":2301:2319   */\n      dup6\n      add\n        /* \"#utility.yul\":2295:2320   */\n      mload\n        /* \"#utility.yul\":2266:2271   */\n      swap1\n      swap4\n      pop\n        /* \"#utility.yul\":2329:2364   */\n      tag_399\n        /* \"#utility.yul\":2295:2320   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      tag_378\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2383:2390   */\n      swap2\n      pop\n        /* \"#utility.yul\":2409:2458   */\n      tag_400\n        /* \"#utility.yul\":2454:2456   */\n      0x40\n        /* \"#utility.yul\":2439:2457   */\n      dup6\n      add\n        /* \"#utility.yul\":2409:2458   */\n      tag_386\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2399:2458   */\n      swap1\n      pop\n        /* \"#utility.yul\":2095:2464   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2469:2796   */\n    tag_30:\n      0x00\n      dup1\n        /* \"#utility.yul\":2598:2600   */\n      0x40\n        /* \"#utility.yul\":2586:2595   */\n      dup4\n        /* \"#utility.yul\":2577:2584   */\n      dup6\n        /* \"#utility.yul\":2573:2596   */\n      sub\n        /* \"#utility.yul\":2569:2601   */\n      slt\n        /* \"#utility.yul\":2566:2568   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":2619:2625   */\n      dup2\n        /* \"#utility.yul\":2611:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2626   */\n      revert\n        /* \"#utility.yul\":2566:2568   */\n    tag_402:\n        /* \"#utility.yul\":2663:2672   */\n      dup3\n        /* \"#utility.yul\":2650:2673   */\n      calldataload\n        /* \"#utility.yul\":2682:2715   */\n      tag_403\n        /* \"#utility.yul\":2709:2714   */\n      dup2\n        /* \"#utility.yul\":2682:2715   */\n      tag_378\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2734:2739   */\n      swap5\n        /* \"#utility.yul\":2786:2788   */\n      0x20\n        /* \"#utility.yul\":2771:2789   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2758:2790   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2556:2796   */\n      jump\t// out\n        /* \"#utility.yul\":2801:3196   */\n    tag_50:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2947:2949   */\n      0x60\n        /* \"#utility.yul\":2935:2944   */\n      dup5\n        /* \"#utility.yul\":2926:2933   */\n      dup7\n        /* \"#utility.yul\":2922:2945   */\n      sub\n        /* \"#utility.yul\":2918:2950   */\n      slt\n        /* \"#utility.yul\":2915:2917   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2968:2974   */\n      dup3\n        /* \"#utility.yul\":2960:2966   */\n      dup4\n        /* \"#utility.yul\":2953:2975   */\n      revert\n        /* \"#utility.yul\":2915:2917   */\n    tag_405:\n        /* \"#utility.yul\":3012:3021   */\n      dup4\n        /* \"#utility.yul\":2999:3022   */\n      calldataload\n        /* \"#utility.yul\":3031:3064   */\n      tag_406\n        /* \"#utility.yul\":3058:3063   */\n      dup2\n        /* \"#utility.yul\":3031:3064   */\n      tag_378\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3083:3088   */\n      swap6\n        /* \"#utility.yul\":3135:3137   */\n      0x20\n        /* \"#utility.yul\":3120:3138   */\n      dup6\n      add\n        /* \"#utility.yul\":3107:3139   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3186:3188   */\n      0x40\n        /* \"#utility.yul\":3171:3189   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":3158:3190   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2905:3196   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3201:3482   */\n    tag_172:\n      0x00\n        /* \"#utility.yul\":3358:3361   */\n      0xc0\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3337:3344   */\n      dup5\n        /* \"#utility.yul\":3333:3356   */\n      sub\n        /* \"#utility.yul\":3329:3362   */\n      slt\n        /* \"#utility.yul\":3326:3328   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3380:3386   */\n      dup1\n        /* \"#utility.yul\":3372:3378   */\n      dup2\n        /* \"#utility.yul\":3365:3387   */\n      revert\n        /* \"#utility.yul\":3326:3328   */\n    tag_408:\n        /* \"#utility.yul\":3408:3476   */\n      tag_124\n        /* \"#utility.yul\":3468:3475   */\n      dup4\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3408:3476   */\n      tag_379\n      jump\t// in\n        /* \"#utility.yul\":3774:3968   */\n    tag_334:\n      0x00\n        /* \"#utility.yul\":3897:3899   */\n      0x20\n        /* \"#utility.yul\":3885:3894   */\n      dup3\n        /* \"#utility.yul\":3876:3883   */\n      dup5\n        /* \"#utility.yul\":3872:3895   */\n      sub\n        /* \"#utility.yul\":3868:3900   */\n      slt\n        /* \"#utility.yul\":3865:3867   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":3918:3924   */\n      dup1\n        /* \"#utility.yul\":3910:3916   */\n      dup2\n        /* \"#utility.yul\":3903:3925   */\n      revert\n        /* \"#utility.yul\":3865:3867   */\n    tag_414:\n      pop\n        /* \"#utility.yul\":3946:3962   */\n      mload\n      swap2\n        /* \"#utility.yul\":3855:3968   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3973:4228   */\n    tag_130:\n      0x00\n      dup1\n        /* \"#utility.yul\":4113:4115   */\n      0x40\n        /* \"#utility.yul\":4101:4110   */\n      dup4\n        /* \"#utility.yul\":4092:4099   */\n      dup6\n        /* \"#utility.yul\":4088:4111   */\n      sub\n        /* \"#utility.yul\":4084:4116   */\n      slt\n        /* \"#utility.yul\":4081:4083   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":4134:4140   */\n      dup2\n        /* \"#utility.yul\":4126:4132   */\n      dup3\n        /* \"#utility.yul\":4119:4141   */\n      revert\n        /* \"#utility.yul\":4081:4083   */\n    tag_416:\n      pop\n      pop\n        /* \"#utility.yul\":4162:4178   */\n      dup1\n      mload\n        /* \"#utility.yul\":4218:4220   */\n      0x20\n        /* \"#utility.yul\":4203:4221   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4197:4222   */\n      mload\n        /* \"#utility.yul\":4162:4178   */\n      swap1\n      swap3\n        /* \"#utility.yul\":4197:4222   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":4071:4228   */\n      jump\t// out\n        /* \"#utility.yul\":4233:4611   */\n    tag_147:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":4407:4410   */\n      0x80\n        /* \"#utility.yul\":4395:4404   */\n      dup6\n        /* \"#utility.yul\":4386:4393   */\n      dup8\n        /* \"#utility.yul\":4382:4405   */\n      sub\n        /* \"#utility.yul\":4378:4411   */\n      slt\n        /* \"#utility.yul\":4375:4377   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":4429:4435   */\n      dup1\n        /* \"#utility.yul\":4421:4427   */\n      dup2\n        /* \"#utility.yul\":4414:4436   */\n      revert\n        /* \"#utility.yul\":4375:4377   */\n    tag_418:\n      pop\n      pop\n        /* \"#utility.yul\":4457:4473   */\n      dup3\n      mload\n        /* \"#utility.yul\":4513:4515   */\n      0x20\n        /* \"#utility.yul\":4498:4516   */\n      dup5\n      add\n        /* \"#utility.yul\":4492:4517   */\n      mload\n        /* \"#utility.yul\":4557:4559   */\n      0x40\n        /* \"#utility.yul\":4542:4560   */\n      dup6\n      add\n        /* \"#utility.yul\":4536:4561   */\n      mload\n        /* \"#utility.yul\":4601:4603   */\n      0x60\n        /* \"#utility.yul\":4586:4604   */\n      swap1\n      swap6\n      add\n        /* \"#utility.yul\":4580:4605   */\n      mload\n        /* \"#utility.yul\":4457:4473   */\n      swap2\n      swap7\n        /* \"#utility.yul\":4492:4517   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":4580:4605   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":4365:4611   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4616:4832   */\n    tag_326:\n      0x00\n        /* \"#utility.yul\":4737:4739   */\n      0x20\n        /* \"#utility.yul\":4725:4734   */\n      dup3\n        /* \"#utility.yul\":4716:4723   */\n      dup5\n        /* \"#utility.yul\":4712:4735   */\n      sub\n        /* \"#utility.yul\":4708:4740   */\n      slt\n        /* \"#utility.yul\":4705:4707   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":4758:4764   */\n      dup1\n        /* \"#utility.yul\":4750:4756   */\n      dup2\n        /* \"#utility.yul\":4743:4765   */\n      revert\n        /* \"#utility.yul\":4705:4707   */\n    tag_420:\n        /* \"#utility.yul\":4786:4826   */\n      tag_124\n        /* \"#utility.yul\":4816:4825   */\n      dup3\n        /* \"#utility.yul\":4786:4826   */\n      tag_386\n      jump\t// in\n        /* \"#utility.yul\":4837:4943   */\n    tag_422:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4905:4936   */\n      and\n        /* \"#utility.yul\":4893:4937   */\n      swap1\n      mstore\n        /* \"#utility.yul\":4883:4943   */\n      jump\t// out\n        /* \"#utility.yul\":4948:5608   */\n    tag_424:\n      0x00\n        /* \"#utility.yul\":5058:5063   */\n      dup2\n        /* \"#utility.yul\":5052:5064   */\n      mload\n        /* \"#utility.yul\":5085:5091   */\n      dup1\n        /* \"#utility.yul\":5080:5083   */\n      dup5\n        /* \"#utility.yul\":5073:5092   */\n      mstore\n        /* \"#utility.yul\":5111:5115   */\n      0x20\n        /* \"#utility.yul\":5140:5142   */\n      dup1\n        /* \"#utility.yul\":5135:5138   */\n      dup6\n        /* \"#utility.yul\":5131:5143   */\n      add\n        /* \"#utility.yul\":5124:5143   */\n      swap5\n      pop\n        /* \"#utility.yul\":5177:5179   */\n      dup1\n        /* \"#utility.yul\":5170:5175   */\n      dup5\n        /* \"#utility.yul\":5166:5180   */\n      add\n        /* \"#utility.yul\":5198:5201   */\n      dup4\n        /* \"#utility.yul\":5210:5583   */\n    tag_426:\n        /* \"#utility.yul\":5224:5230   */\n      dup4\n        /* \"#utility.yul\":5221:5222   */\n      dup2\n        /* \"#utility.yul\":5218:5231   */\n      lt\n        /* \"#utility.yul\":5210:5583   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":5283:5296   */\n      dup2\n      mload\n        /* \"#utility.yul\":5325:5334   */\n      dup1\n      mload\n        /* \"#utility.yul\":5336:5340   */\n      0xff\n        /* \"#utility.yul\":5321:5341   */\n      and\n        /* \"#utility.yul\":5309:5342   */\n      dup9\n      mstore\n        /* \"#utility.yul\":5386:5397   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":5380:5398   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5376:5420   */\n      and\n        /* \"#utility.yul\":5362:5374   */\n      dup5\n      dup10\n      add\n        /* \"#utility.yul\":5355:5421   */\n      mstore\n        /* \"#utility.yul\":5444:5448   */\n      0x40\n        /* \"#utility.yul\":5488:5499   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":5482:5500   */\n      mload\n        /* \"#utility.yul\":5468:5480   */\n      swap1\n      dup9\n      add\n        /* \"#utility.yul\":5461:5501   */\n      mstore\n        /* \"#utility.yul\":5530:5534   */\n      0x60\n        /* \"#utility.yul\":5521:5535   */\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":5558:5573   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5417:5418   */\n      0x01\n        /* \"#utility.yul\":5239:5248   */\n      add\n        /* \"#utility.yul\":5210:5583   */\n      jump(tag_426)\n    tag_428:\n      pop\n        /* \"#utility.yul\":5599:5602   */\n      swap5\n      swap6\n        /* \"#utility.yul\":5028:5608   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5613:5816   */\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5777:5809   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5759:5810   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5747:5749   */\n      0x20\n        /* \"#utility.yul\":5732:5750   */\n      add\n      swap1\n        /* \"#utility.yul\":5714:5816   */\n      jump\t// out\n        /* \"#utility.yul\":5821:6277   */\n    tag_337:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6108:6123   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":6090:6124   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6160:6175   */\n      swap3\n      dup5\n      and\n        /* \"#utility.yul\":6155:6157   */\n      0x20\n        /* \"#utility.yul\":6140:6158   */\n      dup5\n      add\n        /* \"#utility.yul\":6133:6176   */\n      mstore\n        /* \"#utility.yul\":6207:6209   */\n      0x40\n        /* \"#utility.yul\":6192:6210   */\n      dup4\n      add\n        /* \"#utility.yul\":6185:6219   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6255:6270   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6250:6252   */\n      0x60\n        /* \"#utility.yul\":6235:6253   */\n      dup3\n      add\n        /* \"#utility.yul\":6228:6271   */\n      mstore\n        /* \"#utility.yul\":6039:6042   */\n      0x80\n        /* \"#utility.yul\":6024:6043   */\n      add\n      swap1\n        /* \"#utility.yul\":6006:6277   */\n      jump\t// out\n        /* \"#utility.yul\":6282:6719   */\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6549:6581   */\n      dup4\n      and\n        /* \"#utility.yul\":6531:6582   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6618:6620   */\n      0x40\n        /* \"#utility.yul\":6613:6615   */\n      0x20\n        /* \"#utility.yul\":6598:6616   */\n      dup3\n      add\n        /* \"#utility.yul\":6591:6621   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6282:6719   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6638:6713   */\n      tag_432\n      swap1\n        /* \"#utility.yul\":6694:6712   */\n      dup4\n      add\n        /* \"#utility.yul\":6686:6692   */\n      dup5\n        /* \"#utility.yul\":6638:6713   */\n      tag_424\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6630:6713   */\n      swap5\n        /* \"#utility.yul\":6521:6719   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6724:7064   */\n    tag_63:\n      0x00\n        /* \"#utility.yul\":6963:6965   */\n      0x20\n        /* \"#utility.yul\":6952:6961   */\n      dup3\n        /* \"#utility.yul\":6945:6966   */\n      mstore\n        /* \"#utility.yul\":6983:7058   */\n      tag_124\n        /* \"#utility.yul\":7054:7056   */\n      0x20\n        /* \"#utility.yul\":7043:7052   */\n      dup4\n        /* \"#utility.yul\":7039:7057   */\n      add\n        /* \"#utility.yul\":7031:7037   */\n      dup5\n        /* \"#utility.yul\":6983:7058   */\n      tag_424\n      jump\t// in\n        /* \"#utility.yul\":7069:8453   */\n    tag_53:\n        /* \"#utility.yul\":7296:7298   */\n      0x20\n        /* \"#utility.yul\":7348:7369   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7418:7431   */\n      dup3\n      mload\n        /* \"#utility.yul\":7321:7339   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":7440:7462   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7069:8453   */\n      0x00\n      swap2\n        /* \"#utility.yul\":7296:7298   */\n      swap1\n        /* \"#utility.yul\":7481:7483   */\n      0x40\n      swap1\n        /* \"#utility.yul\":7499:7517   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7540:7555   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":7069:8453   */\n      dup6\n        /* \"#utility.yul\":7586:8427   */\n    tag_436:\n        /* \"#utility.yul\":7600:7606   */\n      dup3\n        /* \"#utility.yul\":7597:7598   */\n      dup2\n        /* \"#utility.yul\":7594:7607   */\n      lt\n        /* \"#utility.yul\":7586:8427   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":7659:7672   */\n      dup2\n      mload\n        /* \"#utility.yul\":7728:7737   */\n      dup1\n      mload\n        /* \"#utility.yul\":7695:7699   */\n      0xff\n        /* \"#utility.yul\":7724:7742   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":7712:7743   */\n      dup7\n      mstore\n        /* \"#utility.yul\":7787:7798   */\n      dup8\n      dup3\n      add\n        /* \"#utility.yul\":7781:7799   */\n      mload\n        /* \"#utility.yul\":7777:7804   */\n      and\n        /* \"#utility.yul\":7763:7775   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":7756:7805   */\n      mstore\n        /* \"#utility.yul\":7845:7856   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":7839:7857   */\n      mload\n        /* \"#utility.yul\":7825:7837   */\n      dup7\n      dup7\n      add\n        /* \"#utility.yul\":7818:7858   */\n      mstore\n        /* \"#utility.yul\":7881:7885   */\n      0x60\n        /* \"#utility.yul\":7925:7936   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7919:7937   */\n      mload\n        /* \"#utility.yul\":7905:7917   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":7898:7938   */\n      mstore\n        /* \"#utility.yul\":7961:7965   */\n      0x80\n        /* \"#utility.yul\":8009:8020   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8003:8021   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7999:8043   */\n      and\n        /* \"#utility.yul\":7985:7997   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":7978:8044   */\n      mstore\n        /* \"#utility.yul\":8031:8034   */\n      0xa0\n        /* \"#utility.yul\":8110:8121   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8104:8122   */\n      mload\n        /* \"#utility.yul\":8135:8183   */\n      tag_439\n        /* \"#utility.yul\":8170:8182   */\n      dup3\n      dup9\n      add\n        /* \"#utility.yul\":8104:8122   */\n      dup3\n        /* \"#utility.yul\":8135:8183   */\n      tag_422\n      jump\t// in\n    tag_439:\n      pop\n      pop\n        /* \"#utility.yul\":8206:8210   */\n      0xc0\n        /* \"#utility.yul\":8250:8261   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8244:8262   */\n      mload\n        /* \"#utility.yul\":8230:8242   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":8223:8263   */\n      mstore\n        /* \"#utility.yul\":8286:8290   */\n      0xe0\n        /* \"#utility.yul\":8330:8341   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8324:8342   */\n      mload\n        /* \"#utility.yul\":8310:8322   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":8303:8343   */\n      mstore\n        /* \"#utility.yul\":8372:8378   */\n      0x0100\n        /* \"#utility.yul\":8363:8379   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":8402:8417   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7622:7623   */\n      0x01\n        /* \"#utility.yul\":7615:7624   */\n      add\n        /* \"#utility.yul\":7586:8427   */\n      jump(tag_436)\n    tag_438:\n      pop\n        /* \"#utility.yul\":8444:8447   */\n      swap2\n      swap8\n        /* \"#utility.yul\":7276:8453   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8458:8645   */\n    tag_47:\n        /* \"#utility.yul\":8623:8637   */\n      swap1\n      iszero\n        /* \"#utility.yul\":8616:8638   */\n      iszero\n        /* \"#utility.yul\":8598:8639   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8586:8588   */\n      0x20\n        /* \"#utility.yul\":8571:8589   */\n      add\n      swap1\n        /* \"#utility.yul\":8553:8645   */\n      jump\t// out\n        /* \"#utility.yul\":8650:9052   */\n    tag_252:\n        /* \"#utility.yul\":8852:8854   */\n      0x20\n        /* \"#utility.yul\":8834:8855   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8891:8893   */\n      0x26\n        /* \"#utility.yul\":8871:8889   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8864:8894   */\n      mstore\n        /* \"#utility.yul\":8930:8964   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8925:8927   */\n      0x40\n        /* \"#utility.yul\":8910:8928   */\n      dup3\n      add\n        /* \"#utility.yul\":8903:8965   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8996:8998   */\n      0x60\n        /* \"#utility.yul\":8981:8999   */\n      dup3\n      add\n        /* \"#utility.yul\":8974:9010   */\n      mstore\n        /* \"#utility.yul\":9042:9045   */\n      0x80\n        /* \"#utility.yul\":9027:9046   */\n      add\n      swap1\n        /* \"#utility.yul\":8824:9052   */\n      jump\t// out\n        /* \"#utility.yul\":9057:9413   */\n    tag_297:\n        /* \"#utility.yul\":9259:9261   */\n      0x20\n        /* \"#utility.yul\":9241:9262   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9278:9296   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9271:9301   */\n      mstore\n        /* \"#utility.yul\":9337:9371   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9332:9334   */\n      0x40\n        /* \"#utility.yul\":9317:9335   */\n      dup3\n      add\n        /* \"#utility.yul\":9310:9372   */\n      mstore\n        /* \"#utility.yul\":9404:9406   */\n      0x60\n        /* \"#utility.yul\":9389:9407   */\n      add\n      swap1\n        /* \"#utility.yul\":9231:9413   */\n      jump\t// out\n        /* \"#utility.yul\":9418:9763   */\n    tag_231:\n        /* \"#utility.yul\":9620:9622   */\n      0x20\n        /* \"#utility.yul\":9602:9623   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9659:9661   */\n      0x15\n        /* \"#utility.yul\":9639:9657   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9632:9662   */\n      mstore\n      shl(0x58, 0x496e76616c6964206167656e742061646472657373)\n        /* \"#utility.yul\":9693:9695   */\n      0x40\n        /* \"#utility.yul\":9678:9696   */\n      dup3\n      add\n        /* \"#utility.yul\":9671:9722   */\n      mstore\n        /* \"#utility.yul\":9754:9756   */\n      0x60\n        /* \"#utility.yul\":9739:9757   */\n      add\n      swap1\n        /* \"#utility.yul\":9592:9763   */\n      jump\t// out\n        /* \"#utility.yul\":9768:9945   */\n    tag_33:\n        /* \"#utility.yul\":9914:9939   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":9902:9904   */\n      0x20\n        /* \"#utility.yul\":9887:9905   */\n      add\n      swap1\n        /* \"#utility.yul\":9869:9945   */\n      jump\t// out\n        /* \"#utility.yul\":9950:10205   */\n    tag_354:\n        /* \"#utility.yul\":10120:10145   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":10193:10197   */\n      0xff\n        /* \"#utility.yul\":10181:10198   */\n      and\n        /* \"#utility.yul\":10176:10178   */\n      0x20\n        /* \"#utility.yul\":10161:10179   */\n      dup3\n      add\n        /* \"#utility.yul\":10154:10199   */\n      mstore\n        /* \"#utility.yul\":10108:10110   */\n      0x40\n        /* \"#utility.yul\":10093:10111   */\n      add\n      swap1\n        /* \"#utility.yul\":10075:10205   */\n      jump\t// out\n        /* \"#utility.yul\":10210:10394   */\n    tag_85:\n        /* \"#utility.yul\":10382:10386   */\n      0xff\n        /* \"#utility.yul\":10370:10387   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":10352:10388   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10340:10342   */\n      0x20\n        /* \"#utility.yul\":10325:10343   */\n      add\n      swap1\n        /* \"#utility.yul\":10307:10394   */\n      jump\t// out\n        /* \"#utility.yul\":10399:10527   */\n    tag_151:\n      0x00\n        /* \"#utility.yul\":10470:10471   */\n      dup3\n        /* \"#utility.yul\":10466:10472   */\n      not\n        /* \"#utility.yul\":10463:10464   */\n      dup3\n        /* \"#utility.yul\":10460:10473   */\n      gt\n        /* \"#utility.yul\":10457:10459   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":10476:10494   */\n      tag_449\n      tag_450\n      jump\t// in\n    tag_449:\n      pop\n        /* \"#utility.yul\":10512:10521   */\n      add\n      swap1\n        /* \"#utility.yul\":10447:10527   */\n      jump\t// out\n        /* \"#utility.yul\":10532:10749   */\n    tag_155:\n      0x00\n        /* \"#utility.yul\":10598:10599   */\n      dup3\n        /* \"#utility.yul\":10588:10590   */\n      tag_452\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":10623:10654   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10677:10681   */\n      0x12\n        /* \"#utility.yul\":10674:10675   */\n      0x04\n        /* \"#utility.yul\":10667:10682   */\n      mstore\n        /* \"#utility.yul\":10705:10709   */\n      0x24\n        /* \"#utility.yul\":10630:10631   */\n      dup2\n        /* \"#utility.yul\":10695:10710   */\n      revert\n        /* \"#utility.yul\":10588:10590   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":10734:10743   */\n      div\n      swap1\n        /* \"#utility.yul\":10578:10749   */\n      jump\t// out\n        /* \"#utility.yul\":10754:10922   */\n    tag_153:\n      0x00\n        /* \"#utility.yul\":10860:10861   */\n      dup2\n        /* \"#utility.yul\":10856:10857   */\n      0x00\n        /* \"#utility.yul\":10852:10858   */\n      not\n        /* \"#utility.yul\":10848:10862   */\n      div\n        /* \"#utility.yul\":10845:10846   */\n      dup4\n        /* \"#utility.yul\":10842:10863   */\n      gt\n        /* \"#utility.yul\":10837:10838   */\n      dup3\n        /* \"#utility.yul\":10830:10839   */\n      iszero\n        /* \"#utility.yul\":10823:10840   */\n      iszero\n        /* \"#utility.yul\":10819:10864   */\n      and\n        /* \"#utility.yul\":10816:10818   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":10867:10885   */\n      tag_455\n      tag_450\n      jump\t// in\n    tag_455:\n      pop\n        /* \"#utility.yul\":10907:10916   */\n      mul\n      swap1\n        /* \"#utility.yul\":10806:10922   */\n      jump\t// out\n        /* \"#utility.yul\":10927:11052   */\n    tag_276:\n      0x00\n        /* \"#utility.yul\":10995:10996   */\n      dup3\n        /* \"#utility.yul\":10992:10993   */\n      dup3\n        /* \"#utility.yul\":10989:10997   */\n      lt\n        /* \"#utility.yul\":10986:10988   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":11000:11018   */\n      tag_458\n      tag_450\n      jump\t// in\n    tag_458:\n      pop\n        /* \"#utility.yul\":11037:11046   */\n      sub\n      swap1\n        /* \"#utility.yul\":10976:11052   */\n      jump\t// out\n        /* \"#utility.yul\":11057:11184   */\n    tag_450:\n        /* \"#utility.yul\":11118:11128   */\n      0x4e487b71\n        /* \"#utility.yul\":11113:11116   */\n      0xe0\n        /* \"#utility.yul\":11109:11129   */\n      shl\n        /* \"#utility.yul\":11106:11107   */\n      0x00\n        /* \"#utility.yul\":11099:11130   */\n      mstore\n        /* \"#utility.yul\":11149:11153   */\n      0x11\n        /* \"#utility.yul\":11146:11147   */\n      0x04\n        /* \"#utility.yul\":11139:11154   */\n      mstore\n        /* \"#utility.yul\":11173:11177   */\n      0x24\n        /* \"#utility.yul\":11170:11171   */\n      0x00\n        /* \"#utility.yul\":11163:11178   */\n      revert\n        /* \"#utility.yul\":11189:11322   */\n    tag_378:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11266:11297   */\n      dup2\n      and\n        /* \"#utility.yul\":11256:11298   */\n      dup2\n      eq\n        /* \"#utility.yul\":11246:11248   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":11312:11313   */\n      0x00\n        /* \"#utility.yul\":11309:11310   */\n      dup1\n        /* \"#utility.yul\":11302:11314   */\n      revert\n\n    auxdata: 0xa2646970667358221220c8cec9be44cec4b22c6ae634ee8d9bd3c325983dd5a228df054835b7161b0c9064736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x26 PUSH2 0x21 PUSH2 0x2B JUMP JUMPDEST PUSH2 0x2F JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1B7E DUP1 PUSH2 0x90 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CB52525 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC285C607 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC285C607 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xE5061D89 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xED1A8B45 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xF5FF5C76 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xFF4C2254 EQ PUSH2 0x30D JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x9CB52525 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x9E9B5F97 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xAA624FFA EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xBC5A318A EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x2A6 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x69D70075 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x69D70075 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x6CB4EA85 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x7601F9FE EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x943450DD EQ PUSH2 0x23A JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0x7B5562 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xAA666C2 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x29F2EBB9 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x39C7FCEF EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x5FBC13EF EQ PUSH2 0x1B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x351 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x21D PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x21D PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x175743B9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP5 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xBABA1DC8 SWAP1 PUSH2 0x3D5 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x400 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x60A3E765 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x60A3E765 SWAP1 PUSH2 0x458 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x483 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x4B5 JUMPI POP DUP6 ISZERO JUMPDEST ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4D0 JUMPI SWAP1 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH2 0x63E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40D87EBE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x547 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x581 JUMPI PUSH1 0x0 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x58B DUP10 DUP5 PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x59D DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT DUP1 PUSH2 0x5B6 JUMPI POP DUP5 DUP2 LT JUMPDEST ISZERO PUSH2 0x5FB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x5D9 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5D1 JUMPI SWAP1 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x63E JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x617 DUP13 DUP13 DUP13 PUSH2 0xC71 JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP PUSH2 0x633 DUP13 DUP13 DUP4 DUP9 DUP9 DUP9 PUSH2 0xD2D JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x91776EE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x91776EE7 SWAP1 PUSH2 0x694 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x724 JUMP JUMPDEST PUSH2 0x711 PUSH2 0x15C5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x709 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH2 0x73F DUP6 DUP6 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH2 0xDED JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x752 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x75C PUSH1 0x0 PUSH2 0xF6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4039AEF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP5 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x80735DE SWAP1 PUSH2 0x794 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xED8F31 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x3B63CC4 SWAP1 PUSH2 0x816 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x841 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x873 JUMPI POP DUP6 ISZERO JUMPDEST ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x896 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x88E JUMPI SWAP1 POP POP SWAP5 POP POP POP POP POP PUSH2 0x63E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40D87EBE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x93E JUMPI PUSH1 0x0 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x948 DUP10 DUP4 PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x95A DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT DUP1 PUSH2 0x973 JUMPI POP DUP5 DUP2 LT JUMPDEST ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x996 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x98E JUMPI SWAP1 POP POP SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x63E JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9D3 DUP13 DUP13 DUP13 PUSH2 0xFBC JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP PUSH2 0x633 DUP13 DUP13 DUP4 DUP9 DUP9 DUP9 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAA4 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31E520DB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xC794836C SWAP1 PUSH2 0xB29 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB79 SWAP2 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x724 JUMP JUMPDEST PUSH2 0xBA6 PUSH2 0x15C5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB9E JUMPI SWAP1 POP POP SWAP3 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH2 0x73F DUP6 DUP6 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x0 PUSH2 0xDED JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC14 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH2 0xC43 DUP2 PUSH2 0xF6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP10 PUSH2 0xC84 DUP2 DUP4 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4ABFD7BF PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP10 POP SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x957FAF7E SWAP1 PUSH2 0xCB5 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD05 SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0xD18 DUP12 DUP10 DUP12 DUP9 PUSH2 0x1107 JUMP JUMPDEST SWAP9 SWAP13 SWAP8 SWAP12 POP SWAP6 SWAP10 POP SWAP4 SWAP8 POP SWAP2 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH2 0xD6D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0xD52 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD4A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 PUSH2 0xDA1 DUP9 DUP9 DUP9 DUP9 DUP9 DUP7 DUP9 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP10 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xDD9 SWAP1 DUP5 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP7 SWAP2 PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE11 PUSH2 0x15C5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE09 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH2 0xE3D JUMPI PUSH1 0x1 PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE7D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x88413C17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x88413C17 SWAP1 PUSH2 0xEB6 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xF1B SWAP1 DUP5 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF33 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF44 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP10 PUSH2 0xFD0 DUP2 PUSH1 0x1 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B66CD4B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP10 POP SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x4B66CD4B SWAP1 PUSH2 0xCB5 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH2 0x1040 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x1026 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x101E JUMPI SWAP1 POP POP SWAP1 POP PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 PUSH2 0xDA1 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x1 DUP9 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x109D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 POP DUP3 PUSH2 0x10E1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x1191 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1168 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x12 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x1228 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x11D3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1223 SWAP2 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x122A JUMP JUMPDEST SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF9B44C85 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xF9B44C85 SWAP1 PUSH2 0x125F SWAP1 ADDRESS SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x128D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x12CF SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131F SWAP2 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST SELFBALANCE JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x1336 JUMPI PUSH1 0x0 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x1340 DUP3 DUP3 PUSH2 0x1B06 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP7 GT PUSH2 0x1351 JUMPI PUSH1 0x0 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x41EF492B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x41EF492B SWAP1 PUSH2 0x137F SWAP1 DUP10 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x17BB JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1400 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x13F8 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH2 0x142D JUMPI PUSH1 0x2 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x149B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH2 0x14BE JUMPI PUSH1 0x2 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x14EC JUMPI POP DUP5 DUP11 LT ISZERO JUMPDEST PUSH2 0x14F7 JUMPI PUSH1 0x2 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x3 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x15F0 DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1606 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1635 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x1644 DUP4 PUSH2 0x15E5 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1652 PUSH1 0x20 DUP5 ADD PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1681 PUSH1 0xA0 DUP5 ADD PUSH2 0x168D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x15F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x63E DUP2 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16CE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x16D9 DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x16E9 DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x1719 DUP2 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x172A DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1738 PUSH1 0x40 DUP6 ADD PUSH2 0x168D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1753 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x175E DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1780 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x178B DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x63E DUP4 DUP4 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17CC JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x180B JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 SWAP1 SWAP6 ADD MLOAD SWAP2 SWAP7 SWAP1 SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x63E DUP3 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A3 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0xFF AND DUP9 MSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP10 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1865 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1911 SWAP1 DUP4 ADD DUP5 PUSH2 0x1852 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x63E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19C5 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0xFF SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD PUSH2 0x199C DUP3 DUP9 ADD DUP3 PUSH2 0x1845 JUMP JUMPDEST POP POP PUSH1 0xC0 DUP2 DUP2 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1949 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206167656E742061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC2 PUSH2 0x1B1D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AE2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B01 JUMPI PUSH2 0x1B01 PUSH2 0x1B1D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B18 JUMPI PUSH2 0x1B18 PUSH2 0x1B1D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC43 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xCE 0xC9 0xBE DIFFICULTY 0xCE 0xC4 0xB2 0x2C PUSH11 0xE634EE8D9BD3C325983DD5 LOG2 0x28 0xDF SDIV 0x48 CALLDATALOAD 0xB7 AND SHL 0xC SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "2907:17483:9:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:5;1821:7;:22;929:32:4;948:12;:10;:12::i;:::-;929:18;:32::i;:::-;2907:17483:9;;640:96:1;719:10;640:96;:::o;2419:187:4:-;2511:6;;;-1:-1:-1;;;;;2527:17:4;;;-1:-1:-1;;;;;;2527:17:4;;;;;;;2559:40;;2511:6;;;2527:17;2511:6;;2559:40;;2492:16;;2559:40;2419:187;;:::o;2907:17483:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11324:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "144:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "117:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "117:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:10",
														"type": ""
													}
												],
												"src": "14:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "248:823:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "292:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "301:5:10"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "308:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "294:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "294:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "294:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "269:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "274:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "265:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "286:4:10",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:30:10"
															},
															"nodeType": "YulIf",
															"src": "258:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "325:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "339:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "329:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "357:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "387:4:10",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "375:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:17:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "361:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "475:119:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "496:5:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "507:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "512:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "503:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "503:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "489:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "489:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "489:35:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "544:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "547:4:10",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "537:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "537:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "537:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "572:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "579:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "565:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "565:19:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "565:19:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "410:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "422:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "407:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "407:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "446:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "458:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "443:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "404:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "404:62:10"
															},
															"nodeType": "YulIf",
															"src": "401:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "614:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "634:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "643:6:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "634:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "673:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "673:42:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "736:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "744:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "785:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "796:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:18:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "749:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "749:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "725:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:76:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "725:76:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "821:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "829:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "817:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "817:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "844:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "855:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "840:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "840:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "834:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:25:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "810:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "810:50:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "888:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "876:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "876:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "903:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "914:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "899:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "899:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "893:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:25:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:50:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "939:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "947:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "963:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "974:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "959:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "959:19:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "953:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "953:26:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:52:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1000:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1008:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "996:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "996:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1048:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1059:3:10",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1044:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1044:19:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1014:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1014:50:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "989:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "989:76:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "989:76:10"
														}
													]
												},
												"name": "abi_decode_t_struct$_LongPayoutStruct_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "219:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "230:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "238:5:10",
														"type": ""
													}
												],
												"src": "161:910:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1136:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1146:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1161:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1155:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1146:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1216:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1225:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1228:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1218:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1218:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1218:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1190:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1201:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1208:4:10",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1197:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1197:16:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1187:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1187:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1180:35:10"
															},
															"nodeType": "YulIf",
															"src": "1177:2:10"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1115:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1126:5:10",
														"type": ""
													}
												],
												"src": "1076:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:189:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1368:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1376:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1334:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1343:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1330:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:32:10"
															},
															"nodeType": "YulIf",
															"src": "1323:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1394:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1407:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1398:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1466:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1439:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1439:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1481:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1491:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1481:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1279:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1290:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1302:6:10",
														"type": ""
													}
												],
												"src": "1243:259:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1611:366:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1657:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1666:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1674:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1659:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1659:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1659:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1632:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1641:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1628:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1653:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1624:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:32:10"
															},
															"nodeType": "YulIf",
															"src": "1621:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1692:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1718:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1705:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1696:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1764:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1737:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1737:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1779:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1789:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1803:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1835:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1846:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1831:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1818:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1807:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1886:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1859:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1859:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1903:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1913:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1929:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1956:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1967:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1952:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1952:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1939:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1929:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1561:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1572:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1584:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1592:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1600:6:10",
														"type": ""
													}
												],
												"src": "1507:470:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:369:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2150:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2158:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2143:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:10"
															},
															"nodeType": "YulIf",
															"src": "2105:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2176:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2195:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2189:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2180:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2241:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2214:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2214:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2214:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2256:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2266:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2280:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2316:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2295:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:25:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2284:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2356:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2329:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2329:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2373:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2383:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2399:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2443:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2454:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2439:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2439:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint8_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2409:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:49:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2399:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2045:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2056:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2068:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2076:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2084:6:10",
														"type": ""
													}
												],
												"src": "1982:482:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2556:240:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2602:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2611:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2619:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2604:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2604:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2604:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2577:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2598:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2569:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:32:10"
															},
															"nodeType": "YulIf",
															"src": "2566:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2637:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2641:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2709:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2682:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2682:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2724:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2734:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2748:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2775:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2786:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2771:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2771:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2758:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2758:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2748:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2514:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2525:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2537:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2545:6:10",
														"type": ""
													}
												],
												"src": "2469:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:291:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2951:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2960:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2968:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2953:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2953:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2953:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2926:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2935:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2922:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2922:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2947:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2918:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2918:32:10"
															},
															"nodeType": "YulIf",
															"src": "2915:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2986:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3012:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2999:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2990:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3031:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3031:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3073:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3083:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3097:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3124:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3135:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3120:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3120:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3107:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3097:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3148:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3158:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3148:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2855:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2866:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2878:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2886:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2894:6:10",
														"type": ""
													}
												],
												"src": "2801:395:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3316:166:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3363:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3372:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3380:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3365:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3365:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3365:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3337:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3346:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3333:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3333:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3329:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3329:33:10"
															},
															"nodeType": "YulIf",
															"src": "3326:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3398:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3457:9:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3468:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_struct$_LongPayoutStruct_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3408:48:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:68:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_LongPayoutStruct_$1041_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3282:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3293:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3305:6:10",
														"type": ""
													}
												],
												"src": "3201:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:166:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3650:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3659:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3667:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3652:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3652:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3652:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3620:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3620:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:33:10"
															},
															"nodeType": "YulIf",
															"src": "3613:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3685:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3744:9:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3755:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_struct$_LongPayoutStruct_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3695:48:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3695:68:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_ShortPayoutStruct_$1054_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3569:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3580:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3592:6:10",
														"type": ""
													}
												],
												"src": "3487:282:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3855:113:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3901:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3910:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3918:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3903:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3903:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3876:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3885:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3872:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3897:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3868:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:32:10"
															},
															"nodeType": "YulIf",
															"src": "3865:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3936:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3952:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3946:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3936:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3821:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3832:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3844:6:10",
														"type": ""
													}
												],
												"src": "3774:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4071:157:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4117:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4126:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4134:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4119:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4119:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4119:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4092:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4101:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4113:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4084:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:32:10"
															},
															"nodeType": "YulIf",
															"src": "4081:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4152:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4168:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4162:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4187:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4207:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4218:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4203:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4203:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4197:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4197:25:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4029:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4040:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4052:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4060:6:10",
														"type": ""
													}
												],
												"src": "3973:255:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:246:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4412:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "4421:6:10"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "4429:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4414:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4414:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4414:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4386:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4395:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4382:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4378:33:10"
															},
															"nodeType": "YulIf",
															"src": "4375:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4447:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4463:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4457:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4482:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4502:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4513:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4498:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4498:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4492:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:25:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4526:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4546:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4557:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4542:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4542:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4536:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:25:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4526:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4570:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4590:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4601:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4586:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4586:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4580:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4580:25:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4570:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4307:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4318:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4330:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4338:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4346:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4354:6:10",
														"type": ""
													}
												],
												"src": "4233:378:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4695:137:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4741:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4750:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4758:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4743:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4743:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4743:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4716:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4725:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4712:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4737:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4708:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4708:32:10"
															},
															"nodeType": "YulIf",
															"src": "4705:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4776:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4816:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint8_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4786:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4786:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4672:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4684:6:10",
														"type": ""
													}
												],
												"src": "4616:216:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4883:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4900:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4909:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4924:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4929:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4920:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4920:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4933:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4916:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4905:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4905:31:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4893:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4893:44:10"
														}
													]
												},
												"name": "abi_encode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4867:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4874:3:10",
														"type": ""
													}
												],
												"src": "4837:106:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5028:580:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5038:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5058:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5052:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5042:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5080:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5085:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5073:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5073:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5073:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5101:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5111:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5105:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5124:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5140:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5124:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5152:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5170:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5177:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5156:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5189:12:10",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "5198:3:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5193:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5259:324:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5273:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5289:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5283:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5283:13:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "5277:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5316:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "5331:2:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5325:5:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5325:9:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5336:4:10",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5321:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5321:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5309:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5309:33:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5309:33:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5366:3:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "5371:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5362:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_2",
																											"nodeType": "YulIdentifier",
																											"src": "5390:2:10"
																										},
																										{
																											"name": "_1",
																											"nodeType": "YulIdentifier",
																											"src": "5394:2:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5386:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5386:11:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5380:5:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5380:18:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5408:3:10",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5413:1:10",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5404:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5404:11:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5417:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "5400:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5400:19:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5376:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5376:44:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5355:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5355:66:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5355:66:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5434:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5444:4:10",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "5438:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5472:3:10"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "5477:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5468:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5468:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "5492:2:10"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5496:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5488:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5488:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5482:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5482:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5461:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5461:40:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5461:40:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5514:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5525:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5530:4:10",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5521:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5521:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5514:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5548:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5562:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5570:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5558:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5558:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5548:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5221:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5218:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5232:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5234:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5243:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5246:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5239:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5239:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5234:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5214:3:10",
																"statements": []
															},
															"src": "5210:373:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5592:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5599:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5592:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_PayoutUpdate_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5005:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5012:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5020:3:10",
														"type": ""
													}
												],
												"src": "4948:660:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5714:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5724:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5736:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5747:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5732:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5732:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5724:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5766:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5781:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5797:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5802:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5793:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5793:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5806:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5789:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5789:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5777:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5759:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5759:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5759:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5683:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5694:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5705:4:10",
														"type": ""
													}
												],
												"src": "5613:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6006:271:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6016:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6028:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6039:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6024:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6016:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6052:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6070:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6075:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6066:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6066:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6056:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6097:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6112:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6120:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6108:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6090:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6144:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6155:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6140:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6164:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6172:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6160:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6160:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6133:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6133:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6133:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6212:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6239:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6250:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "6259:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6267:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6255:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6255:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:43:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5951:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5962:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5970:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5978:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5986:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5997:4:10",
														"type": ""
													}
												],
												"src": "5821:456:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6521:198:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6538:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6569:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6574:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6565:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6565:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6578:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6561:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6561:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6549:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6531:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6531:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6613:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6598:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6598:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6618:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6630:83:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6686:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6698:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6709:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6694:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6694:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_PayoutUpdate_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6638:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:75:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6630:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr__to_t_address_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6482:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6493:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6501:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6512:4:10",
														"type": ""
													}
												],
												"src": "6282:437:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6935:129:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6952:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6963:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6945:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6945:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6945:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6975:83:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7031:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7043:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7054:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_PayoutUpdate_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6983:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6983:75:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6975:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6904:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6915:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6926:4:10",
														"type": ""
													}
												],
												"src": "6724:340:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7276:1177:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7286:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7296:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7290:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7307:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7325:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7336:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7321:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:18:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7311:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7355:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7366:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7348:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7378:17:10",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "7389:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "7382:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7404:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7424:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7418:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7418:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7408:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7447:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7455:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7440:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7440:22:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7471:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7481:2:10",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "7475:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7492:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7503:9:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7514:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7499:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7499:18:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7526:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7544:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7552:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7540:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7540:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7530:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7564:13:10",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "7573:4:10"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7568:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7635:792:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7649:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7665:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7659:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7659:13:10"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "7653:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7685:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7695:4:10",
																			"type": "",
																			"value": "0xff"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "7689:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7719:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7734:2:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7728:5:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7728:9:10"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "7739:2:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7724:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7724:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7712:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7712:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7712:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7767:3:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "7772:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7763:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7763:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "7791:2:10"
																										},
																										{
																											"name": "_1",
																											"nodeType": "YulIdentifier",
																											"src": "7795:2:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7787:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7787:11:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7781:5:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7781:18:10"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "7801:2:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7777:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7777:27:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7756:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7756:49:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7756:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7829:3:10"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "7834:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7825:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7825:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7849:2:10"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "7853:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7845:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7845:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7839:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7839:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7818:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7818:40:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7818:40:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7871:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7881:4:10",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "7875:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7909:3:10"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "7914:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7905:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7905:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "7929:2:10"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "7933:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7925:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7925:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7919:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7919:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7898:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7898:40:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7898:40:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7951:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7961:4:10",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "7955:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7989:3:10"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "7994:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7985:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7985:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "8013:2:10"
																										},
																										{
																											"name": "_6",
																											"nodeType": "YulIdentifier",
																											"src": "8017:2:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "8009:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8009:11:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "8003:5:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8003:18:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8031:3:10",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8036:1:10",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "8027:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8027:11:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8040:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "8023:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8023:19:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7999:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7999:44:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7978:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7978:66:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7978:66:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8057:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8067:4:10",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "8061:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8084:38:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "8114:2:10"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "8118:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8110:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8110:11:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8104:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8104:18:10"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulTypedName",
																				"src": "8088:12:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memberValue0",
																					"nodeType": "YulIdentifier",
																					"src": "8156:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "8174:3:10"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "8179:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8170:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8170:12:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "8135:20:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8135:48:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8135:48:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8196:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8206:4:10",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nodeType": "YulTypedName",
																				"src": "8200:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "8234:3:10"
																						},
																						{
																							"name": "_8",
																							"nodeType": "YulIdentifier",
																							"src": "8239:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8230:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8230:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "8254:2:10"
																								},
																								{
																									"name": "_8",
																									"nodeType": "YulIdentifier",
																									"src": "8258:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8250:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8250:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8244:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8244:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8223:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8223:40:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:40:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8276:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8286:4:10",
																			"type": "",
																			"value": "0xe0"
																		},
																		"variables": [
																			{
																				"name": "_9",
																				"nodeType": "YulTypedName",
																				"src": "8280:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "8314:3:10"
																						},
																						{
																							"name": "_9",
																							"nodeType": "YulIdentifier",
																							"src": "8319:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8310:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8310:12:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "8334:2:10"
																								},
																								{
																									"name": "_9",
																									"nodeType": "YulIdentifier",
																									"src": "8338:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8330:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8330:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8324:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8324:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8303:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8303:40:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8303:40:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8356:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8367:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8372:6:10",
																					"type": "",
																					"value": "0x0100"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8363:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8363:16:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8356:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8392:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8406:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8414:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8402:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8402:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8392:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7597:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7600:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7594:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7608:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7610:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7619:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7622:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7615:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7615:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7610:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7590:3:10",
																"statements": []
															},
															"src": "7586:841:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8436:11:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8444:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8436:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7245:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7256:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7267:4:10",
														"type": ""
													}
												],
												"src": "7069:1384:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8553:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8563:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8575:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8586:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8571:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8571:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8563:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8605:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "8630:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8623:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8623:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8616:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8616:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8598:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8598:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8522:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8533:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8544:4:10",
														"type": ""
													}
												],
												"src": "8458:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8824:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8841:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8852:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8834:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8834:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8834:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8875:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8886:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8871:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8891:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8864:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8914:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8925:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8910:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8910:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8930:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8903:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8903:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8903:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8985:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8996:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8981:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8981:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9001:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8974:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8974:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9019:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9031:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9042:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9027:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9027:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9019:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8801:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8815:4:10",
														"type": ""
													}
												],
												"src": "8650:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9231:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9248:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9259:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9241:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9241:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9241:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9282:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9293:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9278:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9278:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9298:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9271:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9271:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9271:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9321:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9332:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9317:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9317:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9337:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9310:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9310:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9381:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9393:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9404:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9389:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9381:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9208:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9222:4:10",
														"type": ""
													}
												],
												"src": "9057:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9592:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9609:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9620:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9602:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9602:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9602:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9643:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9654:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9639:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9639:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9659:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9632:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9632:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9632:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9682:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9693:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9678:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9678:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9698:23:10",
																		"type": "",
																		"value": "Invalid agent address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9671:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9671:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9671:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9731:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9743:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9754:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9739:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9731:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6695ab6c0fed1f1bec225452c9e8e46efdb8505a7d974ac410ebd8bac7f4616__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9569:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9583:4:10",
														"type": ""
													}
												],
												"src": "9418:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9869:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9879:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9891:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9902:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9887:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9887:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9879:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9921:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9932:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9914:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9914:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9838:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9849:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9860:4:10",
														"type": ""
													}
												],
												"src": "9768:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10075:130:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10085:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10097:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10108:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10085:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10127:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10138:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10120:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10120:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10165:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10176:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10161:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10161:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10185:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10193:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10181:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10181:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10154:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10154:45:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10047:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10055:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10066:4:10",
														"type": ""
													}
												],
												"src": "9950:255:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10307:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10317:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10329:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10340:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10325:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10325:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10317:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10359:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10374:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10382:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10370:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10370:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10352:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10352:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10352:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10276:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10287:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10298:4:10",
														"type": ""
													}
												],
												"src": "10210:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10447:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10474:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10476:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10476:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10476:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10463:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10470:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10466:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10466:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10460:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10460:13:10"
															},
															"nodeType": "YulIf",
															"src": "10457:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10505:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10516:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10519:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10512:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10512:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10505:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10430:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10433:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10439:3:10",
														"type": ""
													}
												],
												"src": "10399:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10578:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10609:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "10630:1:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10637:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10642:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10633:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10633:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10623:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10623:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10623:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10674:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10677:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10667:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10667:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10667:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "10702:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10705:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10695:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10695:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10695:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10598:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10591:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10591:9:10"
															},
															"nodeType": "YulIf",
															"src": "10588:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10729:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10738:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10741:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10734:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10729:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10563:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10566:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10572:1:10",
														"type": ""
													}
												],
												"src": "10532:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10806:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10865:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10867:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10867:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10867:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10837:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10830:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10830:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10823:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10823:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10845:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10856:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10852:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10852:6:10"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10860:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10848:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10848:14:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10842:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10842:21:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10819:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10819:45:10"
															},
															"nodeType": "YulIf",
															"src": "10816:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10896:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10911:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10914:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10907:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10907:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10896:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10785:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10788:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10794:7:10",
														"type": ""
													}
												],
												"src": "10754:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10976:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10998:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11000:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11000:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11000:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10992:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10995:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10989:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10989:8:10"
															},
															"nodeType": "YulIf",
															"src": "10986:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11029:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11041:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11044:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11037:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11037:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11029:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10958:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10961:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10967:4:10",
														"type": ""
													}
												],
												"src": "10927:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11106:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11113:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11118:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11109:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11109:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11099:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11099:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11099:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11146:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11149:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11139:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11139:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11139:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11170:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11173:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11163:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11163:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11163:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11057:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11236:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11300:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11309:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11312:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11302:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11302:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11302:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11259:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11270:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11285:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11290:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "11281:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11281:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11294:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "11277:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11277:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "11266:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11266:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11256:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11256:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11249:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:50:10"
															},
															"nodeType": "YulIf",
															"src": "11246:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11225:5:10",
														"type": ""
													}
												],
												"src": "11189:133:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_struct$_LongPayoutStruct_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0xc0) { revert(value, value) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(value, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(value, 0x24)\n        }\n        mstore(64, newFreePtr)\n        value := memPtr\n        mstore(memPtr, abi_decode_t_address_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_t_address_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), mload(add(headStart, 64)))\n        mstore(add(memPtr, 96), mload(add(headStart, 96)))\n        mstore(add(memPtr, 128), mload(add(headStart, 128)))\n        mstore(add(memPtr, 160), abi_decode_t_uint8_fromMemory(add(headStart, 160)))\n    }\n    function abi_decode_t_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_t_uint8_fromMemory(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_struct$_LongPayoutStruct_$1041_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value0, value0) }\n        value0 := abi_decode_t_struct$_LongPayoutStruct_fromMemory(headStart, dataEnd)\n    }\n    function abi_decode_tuple_t_struct$_ShortPayoutStruct_$1054_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value0, value0) }\n        value0 := abi_decode_t_struct$_LongPayoutStruct_fromMemory(headStart, dataEnd)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_uint8_fromMemory(headStart)\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_array$_t_struct$_PayoutUpdate_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _2 := mload(srcPtr)\n            mstore(pos, and(mload(_2), 0xff))\n            mstore(add(pos, _1), and(mload(add(_2, _1)), sub(shl(160, 1), 1)))\n            let _3 := 0x40\n            mstore(add(pos, _3), mload(add(_2, _3)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr__to_t_address_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_array$_t_struct$_PayoutUpdate_$dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_struct$_PayoutUpdate_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            let _4 := 0xff\n            mstore(pos, and(mload(_3), _4))\n            mstore(add(pos, _1), and(mload(add(_3, _1)), _4))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _5 := 0x60\n            mstore(add(pos, _5), mload(add(_3, _5)))\n            let _6 := 0x80\n            mstore(add(pos, _6), and(mload(add(_3, _6)), sub(shl(160, 1), 1)))\n            let _7 := 0xa0\n            let memberValue0 := mload(add(_3, _7))\n            abi_encode_t_address(memberValue0, add(pos, _7))\n            let _8 := 0xc0\n            mstore(add(pos, _8), mload(add(_3, _8)))\n            let _9 := 0xe0\n            mstore(add(pos, _9), mload(add(_3, _9)))\n            pos := add(pos, 0x0100)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e6695ab6c0fed1f1bec225452c9e8e46efdb8505a7d974ac410ebd8bac7f4616__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid agent address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9CB52525 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC285C607 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC285C607 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xE5061D89 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xED1A8B45 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xF5FF5C76 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xFF4C2254 EQ PUSH2 0x30D JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x9CB52525 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x9E9B5F97 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xAA624FFA EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xBC5A318A EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x2A6 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x69D70075 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x69D70075 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x6CB4EA85 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x7601F9FE EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x943450DD EQ PUSH2 0x23A JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0x7B5562 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xAA666C2 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x29F2EBB9 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x39C7FCEF EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x5FBC13EF EQ PUSH2 0x1B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x351 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x21D PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x208 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x21D PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x175743B9 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP5 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xBABA1DC8 SWAP1 PUSH2 0x3D5 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x400 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x60A3E765 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x60A3E765 SWAP1 PUSH2 0x458 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x483 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x4B5 JUMPI POP DUP6 ISZERO JUMPDEST ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4D0 JUMPI SWAP1 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH2 0x63E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40D87EBE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x547 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x581 JUMPI PUSH1 0x0 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x58B DUP10 DUP5 PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x59D DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT DUP1 PUSH2 0x5B6 JUMPI POP DUP5 DUP2 LT JUMPDEST ISZERO PUSH2 0x5FB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x5D9 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5D1 JUMPI SWAP1 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x63E JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x617 DUP13 DUP13 DUP13 PUSH2 0xC71 JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP PUSH2 0x633 DUP13 DUP13 DUP4 DUP9 DUP9 DUP9 PUSH2 0xD2D JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x91776EE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x91776EE7 SWAP1 PUSH2 0x694 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x724 JUMP JUMPDEST PUSH2 0x711 PUSH2 0x15C5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x709 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH2 0x73F DUP6 DUP6 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH2 0xDED JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x752 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x75C PUSH1 0x0 PUSH2 0xF6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4039AEF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP5 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x80735DE SWAP1 PUSH2 0x794 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xED8F31 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x3B63CC4 SWAP1 PUSH2 0x816 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x841 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x873 JUMPI POP DUP6 ISZERO JUMPDEST ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x896 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x88E JUMPI SWAP1 POP POP SWAP5 POP POP POP POP POP PUSH2 0x63E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40D87EBE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST POP POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x93E JUMPI PUSH1 0x0 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x948 DUP10 DUP4 PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x95A DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AE7 JUMP JUMPDEST PUSH2 0x964 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT DUP1 PUSH2 0x973 JUMPI POP DUP5 DUP2 LT JUMPDEST ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x996 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x98E JUMPI SWAP1 POP POP SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x63E JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9D3 DUP13 DUP13 DUP13 PUSH2 0xFBC JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP PUSH2 0x633 DUP13 DUP13 DUP4 DUP9 DUP9 DUP9 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAA4 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31E520DB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xC794836C SWAP1 PUSH2 0xB29 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB79 SWAP2 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x724 JUMP JUMPDEST PUSH2 0xBA6 PUSH2 0x15C5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB9E JUMPI SWAP1 POP POP SWAP3 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH2 0x73F DUP6 DUP6 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x0 PUSH2 0xDED JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC14 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH2 0xC43 DUP2 PUSH2 0xF6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP10 PUSH2 0xC84 DUP2 DUP4 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4ABFD7BF PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP10 POP SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x957FAF7E SWAP1 PUSH2 0xCB5 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD05 SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP PUSH2 0xD18 DUP12 DUP10 DUP12 DUP9 PUSH2 0x1107 JUMP JUMPDEST SWAP9 SWAP13 SWAP8 SWAP12 POP SWAP6 SWAP10 POP SWAP4 SWAP8 POP SWAP2 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH2 0xD6D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0xD52 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD4A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 PUSH2 0xDA1 DUP9 DUP9 DUP9 DUP9 DUP9 DUP7 DUP9 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP10 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xDD9 SWAP1 DUP5 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP7 SWAP2 PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE11 PUSH2 0x15C5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE09 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH2 0xE3D JUMPI PUSH1 0x1 PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE7D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x88413C17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x88413C17 SWAP1 PUSH2 0xEB6 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xF1B SWAP1 DUP5 SWAP1 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF33 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF44 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP10 PUSH2 0xFD0 DUP2 PUSH1 0x1 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B66CD4B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP10 POP SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x4B66CD4B SWAP1 PUSH2 0xCB5 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH2 0x1040 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x1026 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x101E JUMPI SWAP1 POP POP SWAP1 POP PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 PUSH2 0xDA1 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x1 DUP9 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x109D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 POP DUP3 PUSH2 0x10E1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x1191 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1168 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x182B JUMP JUMPDEST PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x12 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x1228 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x11D3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1223 SWAP2 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x122A JUMP JUMPDEST SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF9B44C85 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xF9B44C85 SWAP1 PUSH2 0x125F SWAP1 ADDRESS SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x128D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x12CF SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131F SWAP2 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST SELFBALANCE JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x1336 JUMPI PUSH1 0x0 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x1340 DUP3 DUP3 PUSH2 0x1B06 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP7 GT PUSH2 0x1351 JUMPI PUSH1 0x0 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x41EF492B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x41EF492B SWAP1 PUSH2 0x137F SWAP1 DUP10 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x17BB JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1400 PUSH2 0x1568 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x13F8 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH2 0x142D JUMPI PUSH1 0x2 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x149B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH2 0x14BE JUMPI PUSH1 0x2 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x14EC JUMPI POP DUP5 DUP11 LT ISZERO JUMPDEST PUSH2 0x14F7 JUMPI PUSH1 0x2 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x3 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x15F0 DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1606 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1635 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x1644 DUP4 PUSH2 0x15E5 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1652 PUSH1 0x20 DUP5 ADD PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1681 PUSH1 0xA0 DUP5 ADD PUSH2 0x168D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x15F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x63E DUP2 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16CE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x16D9 DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x16E9 DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x1719 DUP2 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x172A DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1738 PUSH1 0x40 DUP6 ADD PUSH2 0x168D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1753 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x175E DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1780 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x178B DUP2 PUSH2 0x1B33 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x63E DUP4 DUP4 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17CC JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x180B JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 SWAP1 SWAP6 ADD MLOAD SWAP2 SWAP7 SWAP1 SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x63E DUP3 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A3 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0xFF AND DUP9 MSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP10 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1865 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1911 SWAP1 DUP4 ADD DUP5 PUSH2 0x1852 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x63E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19C5 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0xFF SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD PUSH2 0x199C DUP3 DUP9 ADD DUP3 PUSH2 0x1845 JUMP JUMPDEST POP POP PUSH1 0xC0 DUP2 DUP2 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1949 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206167656E742061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC2 PUSH2 0x1B1D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AE2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B01 JUMPI PUSH2 0x1B01 PUSH2 0x1B1D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B18 JUMPI PUSH2 0x1B18 PUSH2 0x1B1D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC43 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xCE 0xC9 0xBE DIFFICULTY 0xCE 0xC4 0xB2 0x2C PUSH11 0xE634EE8D9BD3C325983DD5 LOG2 0x28 0xDF SDIV 0x48 CALLDATALOAD 0xB7 AND SHL 0xC SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "2907:17483:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9174:52:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9093:75;;;;;;:::i;:::-;;:::i;9351:55::-;;;;;;:::i;:::-;;:::i;8714:46::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10904:1377:9:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8766:51:7:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16019:507:9:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1817:101:4:-;;;:::i;:::-;;9526:1372:9;;;;;;:::i;:::-;;:::i;1194:85:4:-;;;:::i;8823:41:7:-;;;;;;:::i;:::-;;:::i;8870:::-;;;;;;:::i;:::-;;:::i;8965:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8917:::-;;;;;;:::i;:::-;;:::i;9412:74::-;;;;;;:::i;:::-;;:::i;9621:154::-;;;;;;:::i;:::-;;:::i;16532:507:9:-;;;;;;:::i;:::-;;:::i;9232:53:7:-;;;;;;:::i;:::-;;:::i;9013:74::-;;;;;;:::i;:::-;;:::i;2067:198:4:-;;;;;;:::i;:::-;;:::i;7958:20:7:-;;;:::i;9291:54::-;;;;;;:::i;:::-;;:::i;9174:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9093:75::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;9351:55::-;;;;;;;;;;;;;;;;;;;;8714:46;;;;;;;;;;;;;;;:::o;10904:1377:9:-;11247:44;;-1:-1:-1;;;11247:44:9;;11026:38;;11132:7;;11076:34;;;;-1:-1:-1;;;;;11247:35:9;;;;;:44;;11283:7;;11247:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11348;;-1:-1:-1;;;11348:44:9;;11224:67;;-1:-1:-1;11224:67:9;-1:-1:-1;11305:15:9;;-1:-1:-1;;;;;11348:35:9;;;;;:44;;11384:7;;11348:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11334:58:9;-1:-1:-1;11410:12:9;;;:27;;-1:-1:-1;11426:11:9;;11410:27;11406:111;;;11464:38;;;11500:1;11464:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11457:45;;;;;;;;11406:111;11531:16;11549;11573:15;-1:-1:-1;;;;;11573:41:9;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11530:86;;;;;;11630:19;11663:1;11652:8;:12;:58;;11709:1;11652:58;;;11688:17;11699:6;11688:8;:17;:::i;:::-;11668:15;:8;11679:4;11668:15;:::i;:::-;11667:39;;;;:::i;:::-;11630:80;;11742:8;11728:11;:22;:48;;;;11768:8;11754:11;:22;11728:48;11724:132;;;11803:38;;;11839:1;11803:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11796:45;;;;;;;;;;;11724:132;10904:1377;;;;;;11889:20;11923:14;11951:20;11985:17;12016:12;12042:22;12078:26;12117:46;12138:7;12147;12156:6;12117:20;:46::i;:::-;11875:288;;;;;;;;;;;;;;12180:94;12204:7;12213;12222:18;12242:12;12256:9;12267:6;12180:23;:94::i;:::-;12173:101;;;;;;;;;;10904:1377;;;;;;:::o;8766:51:7:-;;;;;;;;;;;;-1:-1:-1;;;;;8766:51:7;;:::o;16019:507:9:-;16296:38;;-1:-1:-1;;;16296:38:9;;16118:40;;16226:7;;16170:34;;-1:-1:-1;;;;;16296:29:9;;;;;:38;;16326:7;;16296:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16244:90;;16348:6;:15;;;16367:1;16348:20;16344:98;;;16391:40;;;16429:1;16391:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16384:47;;;;;;16344:98;16458:61;16479:7;16488;16497:6;:15;;;16514:4;16458:20;:61::i;:::-;16451:68;;;;16019:507;;;;;:::o;1817:101:4:-;1087:13;:11;:13::i;:::-;1881:30:::1;1908:1;1881:18;:30::i;:::-;1817:101::o:0;9526:1372:9:-;9868:43;;-1:-1:-1;;;9868:43:9;;9647:38;;9753:7;;9697:34;;;;-1:-1:-1;;;;;9868:34:9;;;;;:43;;9903:7;;9868:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9968;;-1:-1:-1;;;9968:43:9;;9845:66;;-1:-1:-1;9845:66:9;-1:-1:-1;9925:15:9;;-1:-1:-1;;;;;9968:34:9;;;;;:43;;10003:7;;9968:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9954:57:9;-1:-1:-1;10029:12:9;;;:27;;-1:-1:-1;10045:11:9;;10029:27;10025:111;;;10083:38;;;10119:1;10083:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10076:45;;;;;;;;10025:111;10150:16;10168;10192:15;-1:-1:-1;;;;;10192:41:9;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10149:86;;;;;;10249:19;10282:1;10271:8;:12;:58;;10328:1;10271:58;;;10307:17;10318:6;10307:8;:17;:::i;:::-;10287:15;:8;10298:4;10287:15;:::i;:::-;10286:39;;;;:::i;:::-;10249:80;;10361:8;10347:11;:22;:48;;;;10387:8;10373:11;:22;10347:48;10343:132;;;10422:38;;;10458:1;10422:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10415:45;;;;;;;;;;;10343:132;9526:1372;;;;;;10508:20;10542:14;10570:20;10604:17;10635:12;10661:22;10697:26;10736:45;10756:7;10765;10774:6;10736:19;:45::i;:::-;10494:287;;;;;;;;;;;;;;10798:93;10821:7;10830;10839:18;10859:12;10873:9;10884:6;10798:22;:93::i;1194:85:4:-;1266:6;;-1:-1:-1;;;;;1266:6:4;1194:85;:::o;8823:41:7:-;;;;;;;;;;;;-1:-1:-1;;;;;8823:41:7;;:::o;8870:::-;;;;;;;;;;;;-1:-1:-1;;;;;8870:41:7;;:::o;8965:42::-;;;;;;;;;;;;;;;:::o;8917:::-;;;;;;;;;;;;;;;:::o;9412:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9621:154::-;1087:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;9694:22:7;::::1;9686:56;;;;-1:-1:-1::0;;;9686:56:7::1;;;;;;;:::i;:::-;;;;;;;;;9752:5;:16:::0;;-1:-1:-1;;;;;;9752:16:7::1;-1:-1:-1::0;;;;;9752:16:7;;;::::1;::::0;;;::::1;::::0;;9621:154::o;16532:507:9:-;16811:39;;-1:-1:-1;;;16811:39:9;;16632:40;;16740:7;;16684:34;;-1:-1:-1;;;;;16811:30:9;;;;;:39;;16842:7;;16811:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16758:92;;16864:6;:13;;;16881:1;16864:18;16860:96;;;16905:40;;;16943:1;16905:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16898:47;;;;;;16860:96;16972:60;16993:7;17002;17011:6;:13;;;17026:5;16972:20;:60::i;9232:53:7:-;;;;;;;;;;;;;;;;;;;;9013:74;;;;;;;;;;;;;;;;;;;;;;;;:::o;2067:198:4:-;1087:13;:11;:13::i;:::-;-1:-1:-1;;;;;2155:22:4;::::1;2147:73;;;;-1:-1:-1::0;;;2147:73:4::1;;;;;;;:::i;:::-;2230:28;2249:8;2230:18;:28::i;:::-;2067:198:::0;:::o;7958:20:7:-;;;-1:-1:-1;;;;;7958:20:7;;:::o;9291:54::-;;;;;;;;;;;;;;;;;;;;6516:686:9;6653:20;;;;;;;6917:7;6962:36;6917:7;6653:20;6962;:36::i;:::-;7044:41;;-1:-1:-1;;;7044:41:9;;6935:63;;-1:-1:-1;6935:63:9;-1:-1:-1;;;;;;7044:32:9;;;;;:41;;7077:7;;7044:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7008:77;;-1:-1:-1;7008:77:9;-1:-1:-1;7008:77:9;-1:-1:-1;7134:61:9;7154:7;7163:12;7177:6;7008:77;7134:19;:61::i;:::-;6516:686;;;;-1:-1:-1;6516:686:9;;-1:-1:-1;6516:686:9;;-1:-1:-1;6516:686:9;;7095:100;;6516:686;-1:-1:-1;;;6516:686:9:o;8009:797::-;8231:38;8285:23;8281:99;;8331:38;;;8367:1;8331:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8324:45;;;;8281:99;-1:-1:-1;;;;;8413:28:9;;8389:21;8413:28;;;:19;:28;;;;;;;;:37;;;;;;;;;;8509:197;8442:7;8563:18;8595:12;8621:9;8644:6;8389:21;8413:37;8509:19;:197::i;:::-;-1:-1:-1;;;;;8716:28:9;;;;;;:19;:28;;;;;;;;:37;;;;;;;;:59;;8460:246;;-1:-1:-1;8757:18:9;;8716:37;;:28;:59;;8757:18;;8716:59;:::i;:::-;;;;-1:-1:-1;8792:7:9;;-1:-1:-1;;;8009:797:9;;;;;;;;;:::o;8812:708::-;9144:40;;;9182:1;9144:40;;;;;;;;;8961;;9069:7;;9013:34;;9144:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9087:97;;9213:148;;;;;;;;9271:6;:14;;9284:1;9271:14;;;9280:1;9271:14;9213:148;;;;;;9318:1;-1:-1:-1;;;;;9213:148:9;;;;;9344:6;9213:148;;;9194:13;9208:1;9194:16;;;;;;-1:-1:-1;;;9194:16:9;;;;;;;;;;;;;;;;;;:167;9371:54;;-1:-1:-1;;;9371:54:9;;-1:-1:-1;;;;;9371:24:9;;;;;:54;;9404:4;;9411:13;;9371:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;9435:29:9;;;;;;:20;:29;;;;;;;;:38;;;;;;;;:48;;9477:6;;9435:29;:48;;9477:6;;9435:48;:::i;:::-;;;;-1:-1:-1;9500:13:9;;8812:708;-1:-1:-1;;;;;;;8812:708:9:o;1352:130:4:-;1426:12;:10;:12::i;:::-;-1:-1:-1;;;;;1415:23:4;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1415:23:4;;1407:68;;;;-1:-1:-1;;;1407:68:4;;;;;;;:::i;2419:187::-;2511:6;;;-1:-1:-1;;;;;2527:17:4;;;-1:-1:-1;;;;;;2527:17:4;;;;;;;2559:40;;2511:6;;;2527:17;2511:6;;2559:40;;2492:16;;2559:40;2419:187;;:::o;5827:683:9:-;5963:20;;;;;;;6227:7;6272:35;6227:7;6302:4;6272:20;:35::i;:::-;6353:40;;-1:-1:-1;;;6353:40:9;;6245:62;;-1:-1:-1;6245:62:9;-1:-1:-1;;;;;;6353:31:9;;;;;:40;;6385:7;;6353:40;;;:::i;7208:795::-;7429:38;7483:23;7479:99;;7529:38;;;7565:1;7529:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7522:45;;;;7479:99;-1:-1:-1;;;;;7611:28:9;;7587:21;7611:28;;;:19;:28;;;;;;;;:37;;;;;;;;;;7707:196;7640:7;7761:18;7793:12;7819:9;7842:6;7862:4;7611:37;7707:19;:196::i;3534:283::-;3638:20;3660:14;3701:5;:41;;-1:-1:-1;;;;;3727:15:9;;;;;;;:6;:15;;;;;;;3701:41;;;-1:-1:-1;;;;;3709:15:9;;;;;;;:6;:15;;;;;;;3701:41;3686:56;;3763:5;:47;;-1:-1:-1;;;;;3792:18:9;;;;;;:9;:18;;;;;;;;3763:47;;;-1:-1:-1;;;;;3771:18:9;;;;;;:9;:18;;;;;;;;3763:47;3752:58;;3534:283;;;;;:::o;3823:914::-;3982:22;;4100:7;3982:22;-1:-1:-1;;;;;4135:26:9;;;:65;;4176:12;-1:-1:-1;;;;;4169:29:9;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4135:65;;;4164:2;4135:65;4118:82;-1:-1:-1;4210:18:9;-1:-1:-1;;;;;4231:26:9;;;:98;;4284:45;;-1:-1:-1;;;4284:45:9;;-1:-1:-1;;;;;4284:30:9;;;;;:45;;4323:4;;4284:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4231:98;;;4260:21;4231:98;4339:72;;-1:-1:-1;;;4339:72:9;;4210:119;;-1:-1:-1;;;;;;4339:24:9;;;;;:72;;4372:4;;4379:12;;4393:6;;4401:9;;4339:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4421:19:9;;-1:-1:-1;;;;;;;;4443:26:9;;;:98;;4496:45;;-1:-1:-1;;;4496:45:9;;-1:-1:-1;;;;;4496:30:9;;;;;:45;;4535:4;;4496:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4443:98;;;4472:21;4443:98;4421:120;;4582:10;4568:11;:24;:55;;4622:1;4568:55;;;4595:24;4609:10;4595:11;:24;:::i;:::-;4551:72;;4671:1;4654:14;:18;:76;;4729:1;4654:76;;;4675:51;;-1:-1:-1;;;4675:51:9;;-1:-1:-1;;;;;4675:25:9;;;;;:51;;4701:14;;4717:8;;4675:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4633:97;;3823:914;;;;;;;;;;;:::o;4743:1078::-;5091:38;;;5127:1;5091:38;;;4992;5091;;;;;;5042:46;;5091:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5042:87;;5152:287;;;;;;;;5208:5;:13;;5220:1;5208:13;;;5216:1;5208:13;5152:287;;;;;;5245:1;5152:287;;;;;;5267:7;5152:287;;;;5295:18;5152:287;;;;5341:1;-1:-1:-1;;;;;5152:287:9;;;;;5376:1;-1:-1:-1;;;;;5152:287:9;;;;;5402:1;5152:287;;;;5427:1;5152:287;;;5139:7;5147:1;5139:10;;;;;;-1:-1:-1;;;5139:10:9;;;;;;;;;;;;;;:300;;;;5462:328;;;;;;;;5518:5;:13;;5530:1;5518:13;;;5526:1;5518:13;5462:328;;;;;;5555:1;5462:328;;;;;;5577:7;5462:328;;;;5605:6;:11;;5615:1;5605:11;:50;;;;;5642:13;5620:18;:35;;5605:50;:58;;5662:1;5605:58;;;5658:1;5605:58;5462:328;;;;;;5683:12;-1:-1:-1;;;;;5462:328:9;;;;;5720:9;-1:-1:-1;;;;;5462:328:9;;;;;5753:1;5462:328;;;;5778:1;5462:328;;;5449:7;5457:1;5449:10;;;;;;-1:-1:-1;;;5449:10:9;;;;;;;;;;;;;;;;;;:341;5807:7;4743:1078;-1:-1:-1;;;;;;;;4743:1078:9:o;640:96:1:-;719:10;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:142:10:-;95:13;;117:33;95:13;117:33;:::i;:::-;76:80;;;:::o;161:910::-;;286:4;274:9;269:3;265:19;261:30;258:2;;;308:5;301;294:20;258:2;345;339:9;387:4;379:6;375:17;458:6;446:10;443:22;422:18;410:10;407:34;404:62;401:2;;;-1:-1:-1;;;489:35:10;;547:4;544:1;537:15;579:4;496:5;565:19;401:2;610;603:22;643:6;-1:-1:-1;643:6:10;673:42;705:9;673:42;:::i;:::-;665:6;658:58;749:51;796:2;785:9;781:18;749:51;:::i;:::-;744:2;736:6;732:15;725:76;855:2;844:9;840:18;834:25;829:2;821:6;817:15;810:50;914:2;903:9;899:18;893:25;888:2;880:6;876:15;869:50;974:3;963:9;959:19;953:26;947:3;939:6;935:16;928:52;1014:50;1059:3;1048:9;1044:19;1014:50;:::i;:::-;1008:3;1000:6;996:16;989:76;;248:823;;;;:::o;1076:162::-;1155:13;;1208:4;1197:16;;1187:27;;1177:2;;1228:1;1225;1218:12;1243:259;;1355:2;1343:9;1334:7;1330:23;1326:32;1323:2;;;1376:6;1368;1361:22;1323:2;1420:9;1407:23;1439:33;1466:5;1439:33;:::i;1507:470::-;;;;1653:2;1641:9;1632:7;1628:23;1624:32;1621:2;;;1674:6;1666;1659:22;1621:2;1718:9;1705:23;1737:33;1764:5;1737:33;:::i;:::-;1789:5;-1:-1:-1;1846:2:10;1831:18;;1818:32;1859:35;1818:32;1859:35;:::i;:::-;1611:366;;1913:7;;-1:-1:-1;;;1967:2:10;1952:18;;;;1939:32;;1611:366::o;1982:482::-;;;;2137:2;2125:9;2116:7;2112:23;2108:32;2105:2;;;2158:6;2150;2143:22;2105:2;2195:9;2189:16;2214:33;2241:5;2214:33;:::i;:::-;2316:2;2301:18;;2295:25;2266:5;;-1:-1:-1;2329:35:10;2295:25;2329:35;:::i;:::-;2383:7;-1:-1:-1;2409:49:10;2454:2;2439:18;;2409:49;:::i;:::-;2399:59;;2095:369;;;;;:::o;2469:327::-;;;2598:2;2586:9;2577:7;2573:23;2569:32;2566:2;;;2619:6;2611;2604:22;2566:2;2663:9;2650:23;2682:33;2709:5;2682:33;:::i;:::-;2734:5;2786:2;2771:18;;;;2758:32;;-1:-1:-1;;;2556:240:10:o;2801:395::-;;;;2947:2;2935:9;2926:7;2922:23;2918:32;2915:2;;;2968:6;2960;2953:22;2915:2;3012:9;2999:23;3031:33;3058:5;3031:33;:::i;:::-;3083:5;3135:2;3120:18;;3107:32;;-1:-1:-1;3186:2:10;3171:18;;;3158:32;;2905:291;-1:-1:-1;;;2905:291:10:o;3201:281::-;;3358:3;3346:9;3337:7;3333:23;3329:33;3326:2;;;3380:6;3372;3365:22;3326:2;3408:68;3468:7;3457:9;3408:68;:::i;3774:194::-;;3897:2;3885:9;3876:7;3872:23;3868:32;3865:2;;;3918:6;3910;3903:22;3865:2;-1:-1:-1;3946:16:10;;3855:113;-1:-1:-1;3855:113:10:o;3973:255::-;;;4113:2;4101:9;4092:7;4088:23;4084:32;4081:2;;;4134:6;4126;4119:22;4081:2;-1:-1:-1;;4162:16:10;;4218:2;4203:18;;;4197:25;4162:16;;4197:25;;-1:-1:-1;4071:157:10:o;4233:378::-;;;;;4407:3;4395:9;4386:7;4382:23;4378:33;4375:2;;;4429:6;4421;4414:22;4375:2;-1:-1:-1;;4457:16:10;;4513:2;4498:18;;4492:25;4557:2;4542:18;;4536:25;4601:2;4586:18;;;4580:25;4457:16;;4492:25;;-1:-1:-1;4580:25:10;;-1:-1:-1;4365:246:10;-1:-1:-1;4365:246:10:o;4616:216::-;;4737:2;4725:9;4716:7;4712:23;4708:32;4705:2;;;4758:6;4750;4743:22;4705:2;4786:40;4816:9;4786:40;:::i;4837:106::-;-1:-1:-1;;;;;4905:31:10;4893:44;;4883:60::o;4948:660::-;;5058:5;5052:12;5085:6;5080:3;5073:19;5111:4;5140:2;5135:3;5131:12;5124:19;;5177:2;5170:5;5166:14;5198:3;5210:373;5224:6;5221:1;5218:13;5210:373;;;5283:13;;5325:9;;5336:4;5321:20;5309:33;;5386:11;;;5380:18;-1:-1:-1;;;;;5376:44:10;5362:12;;;5355:66;5444:4;5488:11;;;5482:18;5468:12;;;5461:40;5530:4;5521:14;;;;5558:15;;;;5417:1;5239:9;5210:373;;;-1:-1:-1;5599:3:10;;5028:580;-1:-1:-1;;;;;5028:580:10:o;5613:203::-;-1:-1:-1;;;;;5777:32:10;;;;5759:51;;5747:2;5732:18;;5714:102::o;5821:456::-;-1:-1:-1;;;;;6108:15:10;;;6090:34;;6160:15;;;6155:2;6140:18;;6133:43;6207:2;6192:18;;6185:34;;;;6255:15;;;6250:2;6235:18;;6228:43;6039:3;6024:19;;6006:271::o;6282:437::-;-1:-1:-1;;;;;6549:32:10;;6531:51;;6618:2;6613;6598:18;;6591:30;;;6282:437;;6638:75;;6694:18;;6686:6;6638:75;:::i;:::-;6630:83;6521:198;-1:-1:-1;;;;6521:198:10:o;6724:340::-;;6963:2;6952:9;6945:21;6983:75;7054:2;7043:9;7039:18;7031:6;6983:75;:::i;7069:1384::-;7296:2;7348:21;;;7418:13;;7321:18;;;7440:22;;;7069:1384;;7296:2;7481;;7499:18;;;;7540:15;;;7069:1384;7586:841;7600:6;7597:1;7594:13;7586:841;;;7659:13;;7728:9;;7695:4;7724:18;;;7712:31;;7787:11;;;7781:18;7777:27;7763:12;;;7756:49;7845:11;;;7839:18;7825:12;;;7818:40;7881:4;7925:11;;;7919:18;7905:12;;;7898:40;7961:4;8009:11;;;8003:18;-1:-1:-1;;;;;7999:44:10;7985:12;;;7978:66;8031:3;8110:11;;;8104:18;8135:48;8170:12;;;8104:18;8135:48;:::i;:::-;-1:-1:-1;;8206:4:10;8250:11;;;8244:18;8230:12;;;8223:40;8286:4;8330:11;;;8324:18;8310:12;;;8303:40;8372:6;8363:16;;;;8402:15;;;;7622:1;7615:9;7586:841;;;-1:-1:-1;8444:3:10;;7276:1177;-1:-1:-1;;;;;;;7276:1177:10:o;8458:187::-;8623:14;;8616:22;8598:41;;8586:2;8571:18;;8553:92::o;8650:402::-;8852:2;8834:21;;;8891:2;8871:18;;;8864:30;8930:34;8925:2;8910:18;;8903:62;-1:-1:-1;;;8996:2:10;8981:18;;8974:36;9042:3;9027:19;;8824:228::o;9057:356::-;9259:2;9241:21;;;9278:18;;;9271:30;9337:34;9332:2;9317:18;;9310:62;9404:2;9389:18;;9231:182::o;9418:345::-;9620:2;9602:21;;;9659:2;9639:18;;;9632:30;-1:-1:-1;;;9693:2:10;9678:18;;9671:51;9754:2;9739:18;;9592:171::o;9768:177::-;9914:25;;;9902:2;9887:18;;9869:76::o;9950:255::-;10120:25;;;10193:4;10181:17;10176:2;10161:18;;10154:45;10108:2;10093:18;;10075:130::o;10210:184::-;10382:4;10370:17;;;;10352:36;;10340:2;10325:18;;10307:87::o;10399:128::-;;10470:1;10466:6;10463:1;10460:13;10457:2;;;10476:18;;:::i;:::-;-1:-1:-1;10512:9:10;;10447:80::o;10532:217::-;;10598:1;10588:2;;-1:-1:-1;;;10623:31:10;;10677:4;10674:1;10667:15;10705:4;10630:1;10695:15;10588:2;-1:-1:-1;10734:9:10;;10578:171::o;10754:168::-;;10860:1;10856;10852:6;10848:14;10845:1;10842:21;10837:1;10830:9;10823:17;10819:45;10816:2;;;10867:18;;:::i;:::-;-1:-1:-1;10907:9:10;;10806:116::o;10927:125::-;;10995:1;10992;10989:8;10986:2;;;11000:18;;:::i;:::-;-1:-1:-1;11037:9:10;;10976:76::o;11057:127::-;11118:10;11113:3;11109:20;11106:1;11099:31;11149:4;11146:1;11139:15;11173:4;11170:1;11163:15;11189:133;-1:-1:-1;;;;;11266:31:10;;11256:42;;11246:2;;11312:1;11309;11302:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1407600",
								"executionCost": "43942",
								"totalCost": "1451542"
							},
							"external": {
								"activeBuyOrders(address,uint256)": "2183",
								"activeLongPayouts(address,uint256)": "2291",
								"activeSellOrders(address,uint256)": "2203",
								"activeShortPayouts(address,uint256)": "2227",
								"agent()": "1180",
								"decimalsA(address)": "1331",
								"decimalsB(address)": "1309",
								"executeBuyOrder(address,uint256,uint256)": "infinite",
								"executeLongPayout(address,uint256)": "infinite",
								"executeSellOrder(address,uint256,uint256)": "infinite",
								"executeShortPayout(address,uint256)": "infinite",
								"isValidListing(address)": "1348",
								"liquidityAddress(address)": "1311",
								"makerActiveOrders(address,address,uint256)": "infinite",
								"orderPendingAmounts(address,uint256)": "1405",
								"owner()": "1181",
								"payoutPendingAmounts(address,uint256)": "1385",
								"renounceOwnership()": "infinite",
								"setAgent(address)": "22265",
								"tokenA(address)": "1421",
								"tokenB(address)": "1311",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_computeImpact(address,uint256,bool)": "infinite",
								"_createOrderUpdates(uint256,uint256,address,address,uint8,bool,uint256)": "infinite",
								"_executeBuyOrderUpdate(address,uint256,uint256,address,address,uint8)": "infinite",
								"_executeSellOrderUpdate(address,uint256,uint256,address,address,uint8)": "infinite",
								"_executeTransaction(address,address,uint256,address)": "infinite",
								"_getTokenAndDecimals(address,bool)": "1892",
								"_prepBuyOrderUpdate(address,uint256,uint256)": "infinite",
								"_prepSellOrderUpdate(address,uint256,uint256)": "infinite",
								"_processPayoutUpdate(address,uint256,uint256,bool)": "infinite",
								"executeBuyOrders(address,uint256)": "infinite",
								"executeLongPayouts(address,uint256)": "infinite",
								"executeSellOrders(address,uint256)": "infinite",
								"executeShortPayouts(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 929,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 948,
									"end": 958,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 948,
									"end": 960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 929,
									"end": 947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2559,
									"end": 2599,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2419,
									"end": 2606,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2907,
									"end": 20390,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8cec9be44cec4b22c6ae634ee8d9bd3c325983dd5a228df054835b7161b0c9064736f6c63430008010033",
									".code": [
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "9CB52525"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "C285C607"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "C285C607"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "E5061D89"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "ED1A8B45"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "F5FF5C76"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "FF4C2254"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "9CB52525"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "9E9B5F97"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "AA624FFA"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "BC5A318A"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "BCF685ED"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "69D70075"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "69D70075"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "6CB4EA85"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "7601F9FE"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "943450DD"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "7B5562"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "AA666C2"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "29F2EBB9"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "39C7FCEF"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "5FBC13EF"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 20390,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9226,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9093,
											"end": 9168,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8714,
											"end": 8760,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "175743B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11026,
											"end": 11064,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11026,
											"end": 11064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11132,
											"end": 11139,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11132,
											"end": 11139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11076,
											"end": 11110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "PUSH",
											"source": 9,
											"value": "BABA1DC8"
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11290,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11290,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 11247,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60A3E765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11291,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11224,
											"end": 11291,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11224,
											"end": 11291,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11305,
											"end": 11320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11305,
											"end": 11320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11348,
											"end": 11383,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11383,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11383,
											"name": "PUSH",
											"source": 9,
											"value": "60A3E765"
										},
										{
											"begin": 11348,
											"end": 11383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11384,
											"end": 11391,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 11384,
											"end": 11391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 11348,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11334,
											"end": 11392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11410,
											"end": 11422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11410,
											"end": 11422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11410,
											"end": 11422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11410,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 11410,
											"end": 11437,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11426,
											"end": 11437,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11426,
											"end": 11437,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11410,
											"end": 11437,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 11410,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11517,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 11406,
											"end": 11517,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11500,
											"end": 11501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11502,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 11457,
											"end": 11502,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11517,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 11406,
											"end": 11517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11549,
											"end": 11565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11588,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11573,
											"end": 11614,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11614,
											"name": "PUSH",
											"source": 9,
											"value": "40D87EBE"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 11573,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11630,
											"end": 11649,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11664,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11660,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 11652,
											"end": 11710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11709,
											"end": 11710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11710,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11710,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 11652,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 11699,
											"end": 11705,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11696,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 11688,
											"end": 11705,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11688,
											"end": 11705,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 11688,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 11668,
											"end": 11676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11679,
											"end": 11683,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11630,
											"end": 11710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11630,
											"end": 11710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11742,
											"end": 11750,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11728,
											"end": 11739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11728,
											"end": 11750,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11728,
											"end": 11776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11728,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 11728,
											"end": 11776,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11728,
											"end": 11776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11768,
											"end": 11776,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11765,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11776,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11728,
											"end": 11776,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 11728,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11724,
											"end": 11856,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11724,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 11724,
											"end": 11856,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11839,
											"end": 11840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 11796,
											"end": 11841,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11724,
											"end": 11856,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 11724,
											"end": 11856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11889,
											"end": 11909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11923,
											"end": 11937,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11971,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11985,
											"end": 12002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12016,
											"end": 12028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12042,
											"end": 12064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12117,
											"end": 12163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12138,
											"end": 12145,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 12147,
											"end": 12154,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 12156,
											"end": 12162,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 12117,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 12117,
											"end": 12163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12117,
											"end": 12163,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12117,
											"end": 12163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 11875,
											"end": 12163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12204,
											"end": 12211,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 12213,
											"end": 12220,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12242,
											"end": 12254,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12256,
											"end": 12265,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12273,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12180,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 12281,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8817,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91776EE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16118,
											"end": 16158,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16118,
											"end": 16158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16233,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16226,
											"end": 16233,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16170,
											"end": 16204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16170,
											"end": 16204,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "PUSH",
											"source": 9,
											"value": "91776EE7"
										},
										{
											"begin": 16296,
											"end": 16325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16326,
											"end": 16333,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16326,
											"end": 16333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16244,
											"end": 16334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16244,
											"end": 16334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16348,
											"end": 16354,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16367,
											"end": 16368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16348,
											"end": 16368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16344,
											"end": 16442,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16344,
											"end": 16442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 16344,
											"end": 16442,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16429,
											"end": 16430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16384,
											"end": 16431,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16384,
											"end": 16431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16384,
											"end": 16431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16384,
											"end": 16431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16384,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 16384,
											"end": 16431,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16344,
											"end": 16442,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 16344,
											"end": 16442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 16479,
											"end": 16486,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16488,
											"end": 16495,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16497,
											"end": 16503,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16497,
											"end": 16512,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16497,
											"end": 16512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16497,
											"end": 16512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16514,
											"end": 16518,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16458,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 16458,
											"end": 16519,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16458,
											"end": 16519,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 16458,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16451,
											"end": 16519,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16451,
											"end": 16519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16451,
											"end": 16519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16451,
											"end": 16519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16526,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1881,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1918,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4039AEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9647,
											"end": 9685,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9647,
											"end": 9685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9753,
											"end": 9760,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9753,
											"end": 9760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9697,
											"end": 9731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9731,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9868,
											"end": 9902,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9902,
											"name": "PUSH",
											"source": 9,
											"value": "80735DE"
										},
										{
											"begin": 9868,
											"end": 9902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 9868,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "ED8F31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9845,
											"end": 9911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9845,
											"end": 9911,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9845,
											"end": 9911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9925,
											"end": 9940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9925,
											"end": 9940,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9968,
											"end": 10002,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10002,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10002,
											"name": "PUSH",
											"source": 9,
											"value": "3B63CC4"
										},
										{
											"begin": 9968,
											"end": 10002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9968,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9954,
											"end": 10011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10029,
											"end": 10041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10029,
											"end": 10041,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10029,
											"end": 10041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10029,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10029,
											"end": 10056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10045,
											"end": 10056,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10045,
											"end": 10056,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10029,
											"end": 10056,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10029,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10025,
											"end": 10136,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10025,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 10025,
											"end": 10136,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10121,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 10076,
											"end": 10121,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10025,
											"end": 10136,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 10025,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10207,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10192,
											"end": 10233,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10233,
											"name": "PUSH",
											"source": 9,
											"value": "40D87EBE"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 10192,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10149,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10149,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10149,
											"end": 10235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10149,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10149,
											"end": 10235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10149,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10283,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10283,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 10271,
											"end": 10329,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 10271,
											"end": 10329,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10329,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 10271,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10318,
											"end": 10324,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10315,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 10307,
											"end": 10324,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10307,
											"end": 10324,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10307,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 10287,
											"end": 10295,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10298,
											"end": 10302,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 10286,
											"end": 10325,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10286,
											"end": 10325,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10286,
											"end": 10325,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 10286,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10369,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10347,
											"end": 10358,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10347,
											"end": 10369,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10347,
											"end": 10395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10347,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 10347,
											"end": 10395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10347,
											"end": 10395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10395,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10395,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10347,
											"end": 10395,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 10347,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10343,
											"end": 10475,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10343,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 10343,
											"end": 10475,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10458,
											"end": 10459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10422,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 10415,
											"end": 10460,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10343,
											"end": 10475,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 10343,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9526,
											"end": 10898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10542,
											"end": 10556,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10604,
											"end": 10621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10635,
											"end": 10647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10697,
											"end": 10723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10756,
											"end": 10763,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 10765,
											"end": 10772,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10780,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 10736,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10736,
											"end": 10781,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10736,
											"end": 10781,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10736,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 10821,
											"end": 10828,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 10830,
											"end": 10837,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 10839,
											"end": 10857,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10859,
											"end": 10871,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10873,
											"end": 10882,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10884,
											"end": 10890,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 10798,
											"end": 10891,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8864,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8911,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 9007,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8917,
											"end": 8959,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9486,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9694,
											"end": 9716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9694,
											"end": 9716,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 9686,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9768,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9775,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 16532,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31E520DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16632,
											"end": 16672,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16632,
											"end": 16672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16740,
											"end": 16747,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16740,
											"end": 16747,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16684,
											"end": 16718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16684,
											"end": 16718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16811,
											"end": 16841,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16841,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16841,
											"name": "PUSH",
											"source": 9,
											"value": "C794836C"
										},
										{
											"begin": 16811,
											"end": 16841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16842,
											"end": 16849,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16842,
											"end": 16849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 16811,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16864,
											"end": 16870,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16864,
											"end": 16877,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16864,
											"end": 16877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16864,
											"end": 16877,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16881,
											"end": 16882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16864,
											"end": 16882,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16860,
											"end": 16956,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16860,
											"end": 16956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 16860,
											"end": 16956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16943,
											"end": 16944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16905,
											"end": 16945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16945,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 16898,
											"end": 16945,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16860,
											"end": 16956,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 16860,
											"end": 16956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16972,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 16993,
											"end": 17000,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17002,
											"end": 17009,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17011,
											"end": 17017,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17011,
											"end": 17024,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17011,
											"end": 17024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17011,
											"end": 17024,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17026,
											"end": 17031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16972,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 16972,
											"end": 17032,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9285,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9013,
											"end": 9087,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2147,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2249,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2230,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2265,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9345,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6917,
											"end": 6924,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6917,
											"end": 6924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6962,
											"end": 6998,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6962,
											"end": 6998,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6962,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4ABFD7BF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 6998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 6998,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6935,
											"end": 6998,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "PUSH",
											"source": 9,
											"value": "957FAF7E"
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7084,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 7044,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7008,
											"end": 7085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7008,
											"end": 7085,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7008,
											"end": 7085,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7008,
											"end": 7085,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7134,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 7154,
											"end": 7161,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7175,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7183,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 7008,
											"end": 7085,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 7134,
											"end": 7195,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7134,
											"end": 7195,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 7134,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP13",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7195,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7195,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 7202,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8231,
											"end": 8269,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8285,
											"end": 8308,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 8281,
											"end": 8380,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8367,
											"end": 8368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8324,
											"end": 8369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8324,
											"end": 8369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8324,
											"end": 8369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 8324,
											"end": 8369,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8380,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 8281,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8432,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 8442,
											"end": 8449,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8563,
											"end": 8581,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8607,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8621,
											"end": 8630,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8644,
											"end": 8650,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8410,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8450,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 8509,
											"end": 8706,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8509,
											"end": 8706,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 8509,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8735,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8706,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8775,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8792,
											"end": 8799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 8799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8806,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8812,
											"end": 9520,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 8812,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9076,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9013,
											"end": 9047,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9087,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9087,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9277,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9271,
											"end": 9285,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 9285,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9271,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9271,
											"end": 9285,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9271,
											"end": 9285,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9271,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9271,
											"end": 9285,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9271,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9344,
											"end": 9350,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9208,
											"end": 9209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88413C17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9371,
											"end": 9395,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9395,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9395,
											"name": "PUSH",
											"source": 9,
											"value": "88413C17"
										},
										{
											"begin": 9371,
											"end": 9395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9404,
											"end": 9408,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9404,
											"end": 9408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9411,
											"end": 9424,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9411,
											"end": 9424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 9371,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9455,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9473,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9473,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9473,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9473,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9473,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9483,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9483,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9483,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9435,
											"end": 9483,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9500,
											"end": 9513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9500,
											"end": 9513,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9520,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8812,
											"end": 9520,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1352,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2606,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5827,
											"end": 6510,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5827,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6227,
											"end": 6234,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6227,
											"end": 6234,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6306,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6272,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6272,
											"end": 6307,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6307,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6272,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B66CD4B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6307,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6245,
											"end": 6307,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6307,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "PUSH",
											"source": 9,
											"value": "4B66CD4B"
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6392,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7208,
											"end": 8003,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7208,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7429,
											"end": 7467,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7483,
											"end": 7506,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7479,
											"end": 7578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 7566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7522,
											"end": 7567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7522,
											"end": 7567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7522,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 7522,
											"end": 7567,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7578,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7479,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7630,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7639,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7640,
											"end": 7647,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7779,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7805,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7828,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7842,
											"end": 7848,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7862,
											"end": 7866,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 7707,
											"end": 7903,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3534,
											"end": 3817,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3534,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3674,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 3701,
											"end": 3742,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3701,
											"end": 3742,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3742,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 3701,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3715,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3742,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3701,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3742,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 3763,
											"end": 3810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 3763,
											"end": 3810,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3810,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 3763,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3810,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 3763,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3817,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3817,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3817,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4004,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4107,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4135,
											"end": 4200,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4188,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4169,
											"end": 4198,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4198,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4135,
											"end": 4200,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4200,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4135,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4164,
											"end": 4166,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4135,
											"end": 4200,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4135,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4210,
											"end": 4228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4231,
											"end": 4257,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4257,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4231,
											"end": 4329,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4327,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 4284,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4231,
											"end": 4329,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4329,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4231,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4281,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4329,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4231,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9B44C85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4210,
											"end": 4329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "PUSH",
											"source": 9,
											"value": "F9B44C85"
										},
										{
											"begin": 4339,
											"end": 4363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4376,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4379,
											"end": 4391,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 4379,
											"end": 4391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 4339,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4443,
											"end": 4469,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4469,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4469,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 4443,
											"end": 4541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4496,
											"end": 4526,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4526,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4526,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 4496,
											"end": 4526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4535,
											"end": 4539,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4535,
											"end": 4539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4496,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4443,
											"end": 4541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4541,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 4443,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4541,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4443,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4582,
											"end": 4592,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4592,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4568,
											"end": 4623,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4568,
											"end": 4623,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4623,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4568,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4609,
											"end": 4619,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4551,
											"end": 4623,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4551,
											"end": 4623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4668,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4654,
											"end": 4672,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4654,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4654,
											"end": 4730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 4654,
											"end": 4730,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4654,
											"end": 4730,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4654,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "41EF492B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "PUSH",
											"source": 9,
											"value": "41EF492B"
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4701,
											"end": 4715,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4701,
											"end": 4715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4717,
											"end": 4725,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4717,
											"end": 4725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 4675,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4730,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 4737,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4743,
											"end": 5821,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4743,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5213,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5220,
											"end": 5221,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5246,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5274,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5147,
											"end": 5148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5531,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5555,
											"end": 5556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5577,
											"end": 5584,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5611,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5616,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5605,
											"end": 5616,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 5616,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5605,
											"end": 5616,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5620,
											"end": 5638,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5620,
											"end": 5655,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5620,
											"end": 5655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 5605,
											"end": 5663,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5663,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5605,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 5605,
											"end": 5663,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5605,
											"end": 5663,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 5605,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5605,
											"end": 5663,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 5605,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5695,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5729,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5457,
											"end": 5458,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 5821,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4743,
											"end": 5821,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "142"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "178"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 156,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 14,
											"end": 156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 95,
											"end": 108,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 117,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 117,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 117,
											"end": 150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 76,
											"end": 156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 76,
											"end": 156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 76,
											"end": 156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 76,
											"end": 156,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 1071,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 161,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 161,
											"end": 1071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 290,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 274,
											"end": 283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 269,
											"end": 272,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 265,
											"end": 284,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 261,
											"end": 291,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 258,
											"end": 260,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 258,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 258,
											"end": 260,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 308,
											"end": 313,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 301,
											"end": 306,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 294,
											"end": 314,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 258,
											"end": 260,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 258,
											"end": 260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 348,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 387,
											"end": 391,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 375,
											"end": 392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 446,
											"end": 456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 443,
											"end": 465,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 422,
											"end": 440,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 407,
											"end": 441,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 404,
											"end": 466,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 401,
											"end": 403,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 401,
											"end": 403,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 489,
											"end": 524,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 489,
											"end": 524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 547,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 544,
											"end": 545,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 537,
											"end": 552,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 496,
											"end": 501,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 565,
											"end": 584,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 401,
											"end": 403,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 401,
											"end": 403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 610,
											"end": 612,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 625,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 643,
											"end": 649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 643,
											"end": 649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 673,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 705,
											"end": 714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 673,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 673,
											"end": 715,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 715,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 673,
											"end": 715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 658,
											"end": 716,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 749,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 794,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 749,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 749,
											"end": 800,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 800,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 749,
											"end": 800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 732,
											"end": 747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 725,
											"end": 801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 855,
											"end": 857,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 840,
											"end": 858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 834,
											"end": 859,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 829,
											"end": 831,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 810,
											"end": 860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 914,
											"end": 916,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 903,
											"end": 912,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 899,
											"end": 917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 893,
											"end": 918,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 888,
											"end": 890,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 876,
											"end": 891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 869,
											"end": 919,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 974,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 959,
											"end": 978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 953,
											"end": 979,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 947,
											"end": 950,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 939,
											"end": 945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 928,
											"end": 980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 1059,
											"end": 1062,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1048,
											"end": 1057,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 1014,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1011,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 989,
											"end": 1065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 248,
											"end": 1071,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 248,
											"end": 1071,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 248,
											"end": 1071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 248,
											"end": 1071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 248,
											"end": 1071,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1076,
											"end": 1238,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 1076,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1168,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1168,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1212,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1214,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 1177,
											"end": 1179,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1218,
											"end": 1230,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1502,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1243,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1341,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1358,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1361,
											"end": 1383,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 1439,
											"end": 1472,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1507,
											"end": 1977,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1507,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1977,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1641,
											"end": 1650,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1632,
											"end": 1639,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1628,
											"end": 1651,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1656,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 1681,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1727,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1728,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 1764,
											"end": 1769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 1737,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1848,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1850,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1818,
											"end": 1850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1977,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1977,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1920,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1920,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1977,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1982,
											"end": 2464,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1982,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 2464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 2464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 2464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2204,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2205,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 2241,
											"end": 2246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2214,
											"end": 2247,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2214,
											"end": 2247,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 2214,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2320,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2271,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 2295,
											"end": 2320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2383,
											"end": 2390,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 2454,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 2409,
											"end": 2458,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2458,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 2409,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2464,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2464,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2464,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2464,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2469,
											"end": 2796,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2469,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2796,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2577,
											"end": 2584,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2596,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2566,
											"end": 2568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2626,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2568,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2566,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2650,
											"end": 2673,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2682,
											"end": 2715,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2715,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 2682,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2790,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2790,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2556,
											"end": 2796,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2801,
											"end": 3196,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2801,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2801,
											"end": 3196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 3196,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2801,
											"end": 3196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2949,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2933,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2945,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2950,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2960,
											"end": 2966,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2975,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3083,
											"end": 3088,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3107,
											"end": 3139,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3107,
											"end": 3139,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 3196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 3196,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3201,
											"end": 3482,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3201,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3201,
											"end": 3482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3361,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3356,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3329,
											"end": 3362,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3468,
											"end": 3475,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 3408,
											"end": 3476,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3774,
											"end": 3968,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3774,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3883,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3895,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3900,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3910,
											"end": 3916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3855,
											"end": 3968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3968,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3973,
											"end": 4228,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3973,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 4228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4228,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4115,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4101,
											"end": 4110,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4099,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4111,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4084,
											"end": 4116,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4126,
											"end": 4132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4141,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4220,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4222,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4228,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4233,
											"end": 4611,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4233,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4393,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4405,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4411,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4435,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4436,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4498,
											"end": 4516,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4517,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4557,
											"end": 4559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4536,
											"end": 4561,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 4603,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4586,
											"end": 4604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4604,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4517,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4365,
											"end": 4611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4365,
											"end": 4611,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4616,
											"end": 4832,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4616,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4616,
											"end": 4832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4735,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4740,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4764,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4750,
											"end": 4756,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4765,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4786,
											"end": 4826,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4837,
											"end": 4943,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 4837,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4905,
											"end": 4936,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 4937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 4937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4943,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5608,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 4948,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4948,
											"end": 5608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5064,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5080,
											"end": 5083,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5138,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5143,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5198,
											"end": 5201,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5230,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5221,
											"end": 5222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5231,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 5296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 5296,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5340,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5342,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5386,
											"end": 5397,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5386,
											"end": 5397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5386,
											"end": 5397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5376,
											"end": 5420,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5374,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5374,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5362,
											"end": 5374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5444,
											"end": 5448,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5499,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5461,
											"end": 5501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5534,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5239,
											"end": 5248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 5210,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5599,
											"end": 5602,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5602,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5608,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5608,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5613,
											"end": 5816,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 5613,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5777,
											"end": 5809,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5809,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5809,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5810,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5749,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5732,
											"end": 5750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5750,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5816,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5821,
											"end": 6277,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 5821,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6108,
											"end": 6123,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6123,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6123,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6175,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6175,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6155,
											"end": 6157,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6176,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6185,
											"end": 6219,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6185,
											"end": 6219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6185,
											"end": 6219,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6185,
											"end": 6219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6270,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6042,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6024,
											"end": 6043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6024,
											"end": 6043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6277,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6282,
											"end": 6719,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 6282,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6549,
											"end": 6581,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6581,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6531,
											"end": 6582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6531,
											"end": 6582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6620,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6613,
											"end": 6615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6719,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 6638,
											"end": 6713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6692,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 6638,
											"end": 6713,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6638,
											"end": 6713,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 6638,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6630,
											"end": 6713,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6719,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6521,
											"end": 6719,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6724,
											"end": 7064,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 6724,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 7064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6945,
											"end": 6966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 7054,
											"end": 7056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7043,
											"end": 7052,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7037,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 6983,
											"end": 7058,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7069,
											"end": 8453,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 7069,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 7431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 7431,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 8453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 8453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7483,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7481,
											"end": 7483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7540,
											"end": 7555,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7540,
											"end": 7555,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7540,
											"end": 7555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 8453,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7600,
											"end": 7606,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7607,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7659,
											"end": 7672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7659,
											"end": 7672,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7695,
											"end": 7699,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7724,
											"end": 7742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7742,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7798,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7804,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7763,
											"end": 7775,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7763,
											"end": 7775,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7763,
											"end": 7775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7856,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7856,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7839,
											"end": 7857,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7818,
											"end": 7858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7925,
											"end": 7936,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7925,
											"end": 7936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7925,
											"end": 7936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 7917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 7917,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 7917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8009,
											"end": 8020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8003,
											"end": 8021,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7999,
											"end": 8043,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7985,
											"end": 7997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7985,
											"end": 7997,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7985,
											"end": 7997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8031,
											"end": 8034,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8110,
											"end": 8121,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8122,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 8170,
											"end": 8182,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8170,
											"end": 8182,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8170,
											"end": 8182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 8135,
											"end": 8183,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8135,
											"end": 8183,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 8135,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 8250,
											"end": 8261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8250,
											"end": 8261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8250,
											"end": 8261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8330,
											"end": 8341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8330,
											"end": 8341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8330,
											"end": 8341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8342,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8310,
											"end": 8322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8310,
											"end": 8322,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8310,
											"end": 8322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8303,
											"end": 8343,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8378,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8363,
											"end": 8379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8363,
											"end": 8379,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8363,
											"end": 8379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8363,
											"end": 8379,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8417,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7623,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7615,
											"end": 7624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 7586,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8444,
											"end": 8447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8444,
											"end": 8447,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 8453,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7276,
											"end": 8453,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8458,
											"end": 8645,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 8458,
											"end": 8645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8623,
											"end": 8637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8623,
											"end": 8637,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8638,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8598,
											"end": 8639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8598,
											"end": 8639,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8586,
											"end": 8588,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8553,
											"end": 8645,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8650,
											"end": 9052,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 8650,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8854,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8834,
											"end": 8855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8834,
											"end": 8855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8834,
											"end": 8855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8891,
											"end": 8893,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8964,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8925,
											"end": 8927,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8974,
											"end": 9010,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9045,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9027,
											"end": 9046,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9027,
											"end": 9046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 9052,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9057,
											"end": 9413,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 9057,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9259,
											"end": 9261,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9241,
											"end": 9262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9241,
											"end": 9262,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9241,
											"end": 9262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9278,
											"end": 9296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9278,
											"end": 9296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9278,
											"end": 9296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9271,
											"end": 9301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9371,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9332,
											"end": 9334,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9310,
											"end": 9372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9406,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9389,
											"end": 9407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9413,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9418,
											"end": 9763,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 9418,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9622,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9602,
											"end": 9623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9659,
											"end": 9661,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9632,
											"end": 9662,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206167656E742061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9693,
											"end": 9695,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9678,
											"end": 9696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9678,
											"end": 9696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9671,
											"end": 9722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9763,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9768,
											"end": 9945,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 9768,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9902,
											"end": 9904,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 9945,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9950,
											"end": 10205,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9950,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10193,
											"end": 10197,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10176,
											"end": 10178,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10161,
											"end": 10179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10161,
											"end": 10179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10110,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10205,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10210,
											"end": 10394,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 10210,
											"end": 10394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10382,
											"end": 10386,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10370,
											"end": 10387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10370,
											"end": 10387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10370,
											"end": 10387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10370,
											"end": 10387,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10342,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10394,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10399,
											"end": 10527,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 10399,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10399,
											"end": 10527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10470,
											"end": 10471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10463,
											"end": 10464,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10460,
											"end": 10473,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10459,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 10457,
											"end": 10459,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10512,
											"end": 10521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10512,
											"end": 10521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10447,
											"end": 10527,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10532,
											"end": 10749,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 10532,
											"end": 10749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10532,
											"end": 10749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10623,
											"end": 10654,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10623,
											"end": 10654,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10677,
											"end": 10681,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10674,
											"end": 10675,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10667,
											"end": 10682,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10709,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10630,
											"end": 10631,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10695,
											"end": 10710,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10578,
											"end": 10749,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10754,
											"end": 10922,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 10754,
											"end": 10922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10754,
											"end": 10922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10852,
											"end": 10858,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10848,
											"end": 10862,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10842,
											"end": 10863,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 10838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10830,
											"end": 10839,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10823,
											"end": 10840,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10864,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10816,
											"end": 10818,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10816,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 10816,
											"end": 10818,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10867,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 10867,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 10867,
											"end": 10885,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10867,
											"end": 10885,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 10867,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10927,
											"end": 11052,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10927,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10927,
											"end": 11052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10995,
											"end": 10996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 10993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10989,
											"end": 10997,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10986,
											"end": 10988,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10986,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 10986,
											"end": 10988,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11037,
											"end": 11046,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11037,
											"end": 11046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 11052,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11057,
											"end": 11184,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 11057,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11118,
											"end": 11128,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 11113,
											"end": 11116,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11109,
											"end": 11129,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11099,
											"end": 11130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11153,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11139,
											"end": 11154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11177,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11170,
											"end": 11171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11163,
											"end": 11178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11189,
											"end": 11322,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 11189,
											"end": 11322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11266,
											"end": 11297,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11266,
											"end": 11297,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11256,
											"end": 11298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11256,
											"end": 11298,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11246,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 11246,
											"end": 11248,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11312,
											"end": 11313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11309,
											"end": 11310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11314,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"activeBuyOrders(address,uint256)": "007b5562",
							"activeLongPayouts(address,uint256)": "ff4c2254",
							"activeSellOrders(address,uint256)": "e5061d89",
							"activeShortPayouts(address,uint256)": "29f2ebb9",
							"agent()": "f5ff5c76",
							"decimalsA(address)": "aa624ffa",
							"decimalsB(address)": "9e9b5f97",
							"executeBuyOrder(address,uint256,uint256)": "7601f9fe",
							"executeLongPayout(address,uint256)": "6cb4ea85",
							"executeSellOrder(address,uint256,uint256)": "5fbc13ef",
							"executeShortPayout(address,uint256)": "c285c607",
							"isValidListing(address)": "39c7fcef",
							"liquidityAddress(address)": "69d70075",
							"makerActiveOrders(address,address,uint256)": "bc5a318a",
							"orderPendingAmounts(address,uint256)": "ed1a8b45",
							"owner()": "8da5cb5b",
							"payoutPendingAmounts(address,uint256)": "0aa666c2",
							"renounceOwnership()": "715018a6",
							"setAgent(address)": "bcf685ed",
							"tokenA(address)": "943450dd",
							"tokenB(address)": "9cb52525",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeBuyOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeLongPayouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeSellOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeShortPayouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalsA\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimalsB\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"executeBuyOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"updateType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"structId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSListingTemplate.UpdateType[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"executeLongPayout\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payoutType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSListingTemplate.PayoutUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"executeSellOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"updateType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"structId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSListingTemplate.UpdateType[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"executeShortPayout\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payoutType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"internalType\":\"struct ISSListingTemplate.PayoutUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidListing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"makerActiveOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderPendingAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payoutPendingAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShockSpace/utils/SSSettlementPartial.sol\":\"SSSettlementPartial\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShockSpace/imports/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"ShockSpace/imports/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ShockSpace/imports/IERC20.sol\":{\"keccak256\":\"0x676d8a12bcd28abd362347c36564f8e618c0e57dd35da3c8657b6bdef7a2270e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://89865b95e077e64b7f254739a1f0306253b72e552a167e99005238191dd028c8\",\"dweb:/ipfs/QmaovwZrGs8cSHWVpUjCoQecicjiLwuLBkx2xPHGVonTW8\"]},\"ShockSpace/imports/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"ShockSpace/imports/Ownable.sol\":{\"keccak256\":\"0x7c03cdb0bdf0104db4f87451fc7dd8fb4f94f06dbf176dfc06fd616c1b5937e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb707ccdda3e4c3a868bf01293d4c77729a2b0253d5bde0d9bcfea3b940adf7a\",\"dweb:/ipfs/QmT7w8g3fZNY3uQKrPbm1uyLm1Md7kWsQB9QudgCWEBjaB\"]},\"ShockSpace/imports/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"ShockSpace/imports/SafeERC20.sol\":{\"keccak256\":\"0x58b5c3e7323f98ae547932ab5c90cfc980b76929b79f5dd6933e28f17e60037b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b53a9846fa9ad0ab5ea22465f43b5d20bdb7f5bab3bb102d5b948e0a1d9cfd\",\"dweb:/ipfs/QmZX6zDheXhGswvx58BRLn3DaC2DCMsyGfFY6HdyVYgLQZ\"]},\"ShockSpace/utils/SSMainPartial.sol\":{\"keccak256\":\"0x43e9a02e1964b3c6f3d292ee069ad48d39602dd08bfe7663c2fe25436cd270c1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3c6e1b6ce25070fa1d067a4b6e7db881b4ea6890d10b6ba9a7abb24e067a7c0d\",\"dweb:/ipfs/QmSKJ8x9fb4Cyk6M4aM4Z8oabxwFJHEHGNHgVrJd3bpxX8\"]},\"ShockSpace/utils/SSOrderPartial.sol\":{\"keccak256\":\"0x0692728080048ea231b740f83ed1b2dff5cf8db34dd265814fb1dc0298845a80\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://4001c7bf6f0569cb15219170bf234e7af7757aa8be43b4d128465399f67b4d65\",\"dweb:/ipfs/QmbCwLgXphFAhhhkpsas4zXHF58VP5t6JT3ZBhfr23aQEY\"]},\"ShockSpace/utils/SSSettlementPartial.sol\":{\"keccak256\":\"0xbfcdcfc986b13f66266d0dfea70a34e12231ee079008df4af82d6eb64c09303e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://05399fd1a8bca9bd80179c71fdcc245fca872828668c62cdef2470f0af2bf48a\",\"dweb:/ipfs/QmcRaZHKnn7cpfec8Gwei1Le8kBnKB5KYWWAQ3p8P8aZVZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 569,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 453,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1508,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "agent",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1564,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "isValidListing",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1568,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "liquidityAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1572,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "tokenA",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1576,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "tokenB",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1580,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "decimalsA",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint8)"
							},
							{
								"astId": 1584,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "decimalsB",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint8)"
							},
							{
								"astId": 1590,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "orderPendingAmounts",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1596,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "payoutPendingAmounts",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1601,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "activeBuyOrders",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1606,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "activeSellOrders",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1611,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "activeLongPayouts",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1616,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "activeShortPayouts",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1623,
								"contract": "ShockSpace/utils/SSSettlementPartial.sol:SSSettlementPartial",
								"label": "makerActiveOrders",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint8)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> ShockSpace/imports/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7863,
					"file": "ShockSpace/imports/Address.sol",
					"start": 7851
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> ShockSpace/imports/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8678,
					"file": "ShockSpace/imports/Address.sol",
					"start": 8666
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/utils/SSSettlementPartial.sol:225:13:\n    |\n225 |             address tokenAddress,\n    |             ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10528,
					"file": "ShockSpace/utils/SSSettlementPartial.sol",
					"start": 10508
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/utils/SSSettlementPartial.sol:226:13:\n    |\n226 |             uint8 decimals,\n    |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10556,
					"file": "ShockSpace/utils/SSSettlementPartial.sol",
					"start": 10542
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/utils/SSSettlementPartial.sol:230:13:\n    |\n230 |             uint256 amountReceived,\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10683,
					"file": "ShockSpace/utils/SSSettlementPartial.sol",
					"start": 10661
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/utils/SSSettlementPartial.sol:258:13:\n    |\n258 |             address tokenAddress,\n    |             ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11909,
					"file": "ShockSpace/utils/SSSettlementPartial.sol",
					"start": 11889
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/utils/SSSettlementPartial.sol:259:13:\n    |\n259 |             uint8 decimals,\n    |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11937,
					"file": "ShockSpace/utils/SSSettlementPartial.sol",
					"start": 11923
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> ShockSpace/utils/SSSettlementPartial.sol:263:13:\n    |\n263 |             uint256 amountReceived,\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12064,
					"file": "ShockSpace/utils/SSSettlementPartial.sol",
					"start": 12042
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ShockSpace/imports/Address.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/Address.sol",
					"exportedSymbols": {
						"Address": [
							329
						]
					},
					"id": 330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1478:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1695:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1432:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1472:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:0"
									},
									"scope": 329,
									"src": "1412:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2718:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2761:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2813:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2831:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2853:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2666:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2693:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:0"
									},
									"scope": 329,
									"src": "2647:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3790:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3829:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3837:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "3807:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 67,
												"nodeType": "Return",
												"src": "3800:79:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3723:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3739:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3776:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:0"
									},
									"scope": 329,
									"src": "3701:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "4255:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4294:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4302:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "4311:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4272:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "4265:59:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4190:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4241:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:0"
									},
									"scope": 329,
									"src": "4108:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4806:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4845:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4859:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4823:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "4816:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4724:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4740:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4759:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4792:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:0"
									},
									"scope": 329,
									"src": "4693:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "5344:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5387:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:0"
											},
											{
												"assignments": [
													135,
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5446:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5460:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 136,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [
														{
															"id": 142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5513:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 138,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5487:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5506:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5562:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "5570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 148,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "5579:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 149,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5591:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 145,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5535:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 151,
												"nodeType": "Return",
												"src": "5528:76:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5205:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5229:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5256:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5279:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5330:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:0"
									},
									"scope": 329,
									"src": "5165:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "5888:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "5924:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5932:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 163,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															199
														],
														"referencedDeclaration": 199,
														"src": "5905:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "5898:80:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5816:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5832:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5874:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:0"
									},
									"scope": 329,
									"src": "5788:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6327:168:0",
										"statements": [
											{
												"assignments": [
													183,
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6338:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6352:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"arguments": [
														{
															"id": 188,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6397:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 186,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 194,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6475:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "6419:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 181,
												"id": 197,
												"nodeType": "Return",
												"src": "6412:76:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6206:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6230:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6257:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6313:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:0"
									},
									"scope": 329,
									"src": "6169:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "6771:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6809:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "6817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 209,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															216,
															245
														],
														"referencedDeclaration": 245,
														"src": "6788:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 208,
												"id": 214,
												"nodeType": "Return",
												"src": "6781:84:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6704:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6720:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6757:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:0"
									},
									"scope": 329,
									"src": "6674:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "7213:170:0",
										"statements": [
											{
												"assignments": [
													229,
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7224:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7238:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 230,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "7285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 232,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7265:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7334:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 240,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7351:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 241,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "7363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 237,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7307:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 243,
												"nodeType": "Return",
												"src": "7300:76:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7121:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7148:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7199:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:0"
									},
									"scope": 329,
									"src": "7058:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "7865:434:0",
										"statements": [
											{
												"condition": {
													"id": 259,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "8235:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "8257:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 278,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "8269:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 276,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8249:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:0"
														}
													]
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "7875:418:0",
												"trueBody": {
													"id": 275,
													"nodeType": "Block",
													"src": "7888:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 260,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "7906:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "IfStatement",
															"src": "7902:286:0",
															"trueBody": {
																"id": 271,
																"nodeType": "Block",
																"src": "7930:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 266,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 248,
																							"src": "8132:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 265,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "8121:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 264,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 270,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 273,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "8208:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 258,
															"id": 274,
															"nodeType": "Return",
															"src": "8201:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7716:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7740:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7762:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7795:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7851:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:0"
									},
									"scope": 329,
									"src": "7671:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "8680:135:0",
										"statements": [
											{
												"condition": {
													"id": 296,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "8751:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "8773:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 302,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "8785:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 300,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8765:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:0"
														}
													]
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "8690:119:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "8703:42:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "8724:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 295,
															"id": 298,
															"nodeType": "Return",
															"src": "8717:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8555:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8577:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8666:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:0"
									},
									"scope": 329,
									"src": "8520:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "8904:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "8980:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "9310:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 322,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "9331:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 321,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:0"
														}
													]
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "8976:379:0",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "9003:301:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:0",
																	"valueSize": 1
																}
															],
															"id": 319,
															"nodeType": "InlineAssembly",
															"src": "9152:142:0"
														}
													]
												}
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8838:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8863:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:0"
									},
									"scope": 329,
									"src": "8821:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 330,
							"src": "194:9169:0"
						}
					],
					"src": "101:9263:0"
				},
				"id": 0
			},
			"ShockSpace/imports/Context.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/Context.sol",
					"exportedSymbols": {
						"Context": [
							351
						]
					},
					"id": 352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 332,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 351,
							"linearizedBaseContracts": [
								351
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 337,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 336,
												"id": 339,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 351,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 346,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 345,
												"id": 348,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 351,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 352,
							"src": "608:235:1"
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"ShockSpace/imports/IERC20.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							409
						]
					},
					"id": 410,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:2"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "132:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 355,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "132:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:7:2"
									},
									"scope": 409,
									"src": "89:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:2:2"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "190:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:9:2"
									},
									"scope": 409,
									"src": "144:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "257:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:17:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "297:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:9:2"
									},
									"scope": 409,
									"src": "238:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "330:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "345:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:32:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "385:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:9:2"
									},
									"scope": 409,
									"src": "311:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "417:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "429:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:28:2"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "463:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 385,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:6:2"
									},
									"scope": 409,
									"src": "399:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "496:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "510:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "522:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:42:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "556:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "556:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:6:2"
									},
									"scope": 409,
									"src": "474:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "584:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "601:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:33:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "635:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "635:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:6:2"
									},
									"scope": 409,
									"src": "567:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 410,
							"src": "66:577:2"
						}
					],
					"src": "41:602:2"
				},
				"id": 2
			},
			"ShockSpace/imports/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							445
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "IERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1480:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1503:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1528:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1551:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1577:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1594:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1613:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:3"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:3"
									},
									"scope": 445,
									"src": "1455:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1959:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:3"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1997:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:3"
									},
									"scope": 445,
									"src": "1943:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2249:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:3"
									},
									"scope": 445,
									"src": "2198:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 446,
							"src": "629:1631:3"
						}
					],
					"src": "123:2138:3"
				},
				"id": 3
			},
			"ShockSpace/imports/Ownable.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							351
						],
						"Ownable": [
							558
						]
					},
					"id": 559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 447,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:4"
						},
						{
							"absolutePath": "ShockSpace/imports/Context.sol",
							"file": "./Context.sol",
							"id": 448,
							"nodeType": "ImportDirective",
							"scope": 559,
							"sourceUnit": 352,
							"src": "127:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 450,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 351,
										"src": "676:7:4"
									},
									"id": 451,
									"nodeType": "InheritanceSpecifier",
									"src": "676:7:4"
								}
							],
							"contractDependencies": [
								351
							],
							"contractKind": "contract",
							"documentation": {
								"id": 449,
								"nodeType": "StructuredDocumentation",
								"src": "152:494:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 558,
							"linearizedBaseContracts": [
								558,
								351
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 453,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 558,
									"src": "690:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 452,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 459,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "746:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "777:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:57:4"
									},
									"src": "719:84:4"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "919:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 464,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "948:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "948:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 463,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "929:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "929:32:4"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "809:91:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 469,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "919:0:4"
									},
									"scope": 558,
									"src": "905:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "1077:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "1087:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "1087:13:4"
											},
											{
												"id": 475,
												"nodeType": "PlaceholderStatement",
												"src": "1110:1:4"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "974:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 477,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:4"
									},
									"src": "1056:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1249:30:4",
										"statements": [
											{
												"expression": {
													"id": 483,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 453,
													"src": "1266:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 482,
												"id": 484,
												"nodeType": "Return",
												"src": "1259:13:4"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "1124:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:2:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1240:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:9:4"
									},
									"scope": 558,
									"src": "1194:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "1397:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 491,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "1415:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1415:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 493,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "1426:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1426:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1415:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1440:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1407:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "1407:68:4"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1285:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:2:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:0:4"
									},
									"scope": 558,
									"src": "1352:130:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "1871:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1908:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1900:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1900:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1900:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 506,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "1881:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "1881:30:4"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1488:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 504,
											"modifierName": {
												"id": 503,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 477,
												"src": "1861:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1861:9:4"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1843:2:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:0:4"
									},
									"scope": 558,
									"src": "1817:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "2137:128:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "2155:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2175:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2167:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 524,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2167:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2167:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2155:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2179:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2147:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "2147:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "2249:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 532,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "2230:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2230:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "2230:28:4"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1924:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 520,
											"modifierName": {
												"id": 519,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 477,
												"src": "2127:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2127:9:4"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "2094:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:18:4"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2137:0:4"
									},
									"scope": 558,
									"src": "2067:198:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "2482:124:4",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "2492:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 543,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2492:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"id": 545,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 453,
													"src": "2511:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2492:25:4"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 547,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "2527:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 548,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2536:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2527:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2527:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 552,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2580:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "2590:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 551,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2559:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2559:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "EmitStatement",
												"src": "2554:45:4"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "2271:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:18:4"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2482:0:4"
									},
									"scope": 558,
									"src": "2419:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 559,
							"src": "647:1961:4"
						}
					],
					"src": "102:2507:4"
				},
				"id": 4
			},
			"ShockSpace/imports/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 560,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 561,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 564,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 567,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 566,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 569,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 568,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 573,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 577,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 623,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 580,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 583,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 584,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 588,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 592,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 593,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 598,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 599,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 623,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 606,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 607,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 623,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 617,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 618,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 616,
												"id": 620,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 623,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 624,
							"src": "888:2238:5"
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"ShockSpace/imports/SafeERC20.sol": {
				"ast": {
					"absolutePath": "ShockSpace/imports/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							329
						],
						"IERC20": [
							409
						],
						"IERC20Permit": [
							445
						],
						"SafeERC20": [
							999
						]
					},
					"id": 1000,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "ShockSpace/imports/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 626,
							"nodeType": "ImportDirective",
							"scope": 1000,
							"sourceUnit": 410,
							"src": "140:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShockSpace/imports/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 627,
							"nodeType": "ImportDirective",
							"scope": 1000,
							"sourceUnit": 446,
							"src": "163:28:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShockSpace/imports/Address.sol",
							"file": "./Address.sol",
							"id": 628,
							"nodeType": "ImportDirective",
							"scope": 1000,
							"sourceUnit": 330,
							"src": "192:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 629,
								"nodeType": "StructuredDocumentation",
								"src": "217:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 999,
							"linearizedBaseContracts": [
								999
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 632,
									"libraryName": {
										"id": 630,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 329,
										"src": "705:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "699:26:6",
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "717:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "987:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "1017:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 647,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "1047:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 388,
																		"src": "1047:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1047:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 650,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1072:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "1076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 645,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1024:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1024:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1024:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "997:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "997:86:6"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "731:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "937:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "937:6:6"
													},
													"referencedDeclaration": 409,
													"src": "937:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "951:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "963:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:41:6"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:6"
									},
									"scope": 999,
									"src": "915:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1419:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1449:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 673,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 660,
																			"src": "1479:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 399,
																		"src": "1479:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1479:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 676,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "1508:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 677,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "1514:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 678,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "1518:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 671,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1456:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1456:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1456:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "1429:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1429:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1429:96:6"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1096:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1355:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 658,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "1355:6:6"
													},
													"referencedDeclaration": 409,
													"src": "1355:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1369:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1383:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1395:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:55:6"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:0:6"
									},
									"scope": 999,
									"src": "1329:203:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "1868:497:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 695,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2126:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2117:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 698,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2116:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 703,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2157:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$999",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$999",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 702,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2149:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 701,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2149:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 704,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2149:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 705,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 689,
																					"src": "2164:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 699,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 687,
																					"src": "2133:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$409",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 379,
																				"src": "2133:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2133:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2176:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2133:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 709,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2132:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2116:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2192:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2095:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:163:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "2095:163:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 715,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2288:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 718,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "2318:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 408,
																		"src": "2318:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2318:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 721,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "2342:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "2351:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 716,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2295:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2295:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2295:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 714,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2268:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "2268:90:6"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1538:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1813:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "1813:6:6"
													},
													"referencedDeclaration": 409,
													"src": "1813:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1827:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1844:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:46:6"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1868:0:6"
									},
									"scope": 999,
									"src": "1792:573:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "2642:194:6",
										"statements": [
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "2652:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2652:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 744,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2699:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$999",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$999",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2691:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 742,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2691:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2691:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "2706:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 740,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "2675:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 379,
														"src": "2675:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2652:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 750,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "2744:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 753,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 731,
																			"src": "2774:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 408,
																		"src": "2774:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2774:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 756,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "2798:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 757,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "2807:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 758,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "2822:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2807:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 751,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2751:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2751:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2751:77:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 749,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2724:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2724:105:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "2724:105:6"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "2371:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2587:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 729,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "2587:6:6"
													},
													"referencedDeclaration": 409,
													"src": "2587:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2601:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2601:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2618:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:46:6"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:0:6"
									},
									"scope": 999,
									"src": "2556:280:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "3113:321:6",
										"statements": [
											{
												"id": 807,
												"nodeType": "UncheckedBlock",
												"src": "3123:305:6",
												"statements": [
													{
														"assignments": [
															776
														],
														"declarations": [
															{
																"constant": false,
																"id": 776,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 807,
																"src": "3147:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 775,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3147:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 785,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 781,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3194:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$999",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$999",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3186:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 779,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3186:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3186:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 783,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "3201:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 777,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "3170:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 379,
																"src": "3170:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3170:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3147:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 787,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "3231:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 788,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "3247:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3231:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3254:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 786,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3223:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3223:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 792,
														"nodeType": "ExpressionStatement",
														"src": "3223:75:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 794,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "3332:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 797,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 768,
																					"src": "3362:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$409",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 408,
																				"src": "3362:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3362:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 800,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 770,
																			"src": "3386:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 776,
																				"src": "3395:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 772,
																				"src": "3410:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3395:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 795,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3339:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3339:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3339:77:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 793,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "3312:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3312:105:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 806,
														"nodeType": "ExpressionStatement",
														"src": "3312:105:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "2842:180:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "3058:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 766,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "3058:6:6"
													},
													"referencedDeclaration": 409,
													"src": "3058:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "3072:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "3089:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:46:6"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:6"
									},
									"scope": 999,
									"src": "3027:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "3807:333:6",
										"statements": [
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "approvalCall",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "3817:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 820,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3817:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 830,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 824,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "3868:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 408,
																"src": "3868:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3868:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 827,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3892:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "3901:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 822,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3845:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3845:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3845:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3817:90:6"
											},
											{
												"condition": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3922:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 832,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "3947:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$409",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 833,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "3954:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$409",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 831,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "3923:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3923:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "3918:216:6",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "3969:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 837,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "4003:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$409",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 840,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 813,
																						"src": "4033:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$409",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 841,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 408,
																					"src": "4033:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4033:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 843,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 815,
																				"src": "4057:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4066:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 838,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4010:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4010:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4010:58:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$409",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 836,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "3983:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3983:86:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 847,
															"nodeType": "ExpressionStatement",
															"src": "3983:86:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 849,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "4103:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$409",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 850,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4110:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$409",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 848,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "4083:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4083:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "ExpressionStatement",
															"src": "4083:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "3440:285:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3752:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 812,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 811,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "3752:6:6"
													},
													"referencedDeclaration": 409,
													"src": "3752:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3766:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3783:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:46:6"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3807:0:6"
									},
									"scope": 999,
									"src": "3730:410:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "4507:257:6",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "4517:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 877,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4517:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 881,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "4552:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 879,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "4539:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$445",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 438,
														"src": "4539:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4539:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4517:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 887,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "4581:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "4588:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "4597:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 890,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "4604:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 891,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "4614:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 892,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "4617:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 893,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "4620:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 884,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "4568:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$445",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 430,
														"src": "4568:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "4568:54:6"
											},
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "4632:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4632:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [
														{
															"id": 900,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "4666:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 898,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "4653:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$445",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 438,
														"src": "4653:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4653:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4632:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 904,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "4690:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 905,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "4704:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4718:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4704:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4690:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4721:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4682:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4682:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "4682:75:6"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "4146:141:6",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4321:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$445",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 445,
														"src": "4321:12:6"
													},
													"referencedDeclaration": 445,
													"src": "4321:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$445",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4349:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4372:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4397:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4420:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4446:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 869,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4446:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4463:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 871,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4463:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4482:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 873,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4311:186:6"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4507:0:6"
									},
									"scope": 999,
									"src": "4292:472:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "5217:572:6",
										"statements": [
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "5566:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 922,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5566:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"arguments": [
														{
															"id": 929,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "5620:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5626:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 926,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "5600:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5592:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 924,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5592:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5592:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 89,
														"src": "5592:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5566:95:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 934,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "5679:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5679:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5700:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5679:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 940,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "5716:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5729:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 941,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5729:4:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 943,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5728:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 938,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5705:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5705:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5705:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5679:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5737:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 933,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5671:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:111:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "5671:111:6"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "4770:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "5176:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 916,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 915,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "5176:6:6"
													},
													"referencedDeclaration": 409,
													"src": "5176:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "5190:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5190:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5175:33:6"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5217:0:6"
									},
									"scope": 999,
									"src": "5147:642:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "6379:505:6",
										"statements": [
											{
												"assignments": [
													962,
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "6675:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 961,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6675:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "6689:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 963,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6689:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"arguments": [
														{
															"id": 970,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "6736:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 967,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "6724:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6716:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6716:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6716:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6716:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6674:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 973,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "6770:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 974,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "6782:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6782:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6803:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6782:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 980,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "6819:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 982,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6832:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 981,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6832:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 983,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6831:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 978,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6808:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6808:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6808:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6782:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 986,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6781:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6770:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 992,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "6870:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$409",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$409",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6862:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 990,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6862:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6862:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 988,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "6843:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$329_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "6843:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6843:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6770:107:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 960,
												"id": 996,
												"nodeType": "Return",
												"src": "6751:126:6"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "5795:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "6323:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 952,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "6323:6:6"
													},
													"referencedDeclaration": 409,
													"src": "6323:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "6337:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6337:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6322:33:6"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "6373:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6373:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6372:6:6"
									},
									"scope": 999,
									"src": "6290:594:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1000,
							"src": "675:6211:6"
						}
					],
					"src": "115:6772:6"
				},
				"id": 6
			},
			"ShockSpace/utils/SSMainPartial.sol": {
				"ast": {
					"absolutePath": "ShockSpace/utils/SSMainPartial.sol",
					"exportedSymbols": {
						"Address": [
							329
						],
						"Context": [
							351
						],
						"IERC20": [
							409
						],
						"IERC20Permit": [
							445
						],
						"ISSAgent": [
							1498
						],
						"ISSLiquidityTemplate": [
							1488
						],
						"ISSListingTemplate": [
							1264
						],
						"Ownable": [
							558
						],
						"ReentrancyGuard": [
							623
						],
						"SSMainPartial": [
							1659
						],
						"SafeERC20": [
							999
						]
					},
					"id": 1660,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1001,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:7"
						},
						{
							"absolutePath": "ShockSpace/imports/SafeERC20.sol",
							"file": "../imports/SafeERC20.sol",
							"id": 1002,
							"nodeType": "ImportDirective",
							"scope": 1660,
							"sourceUnit": 1000,
							"src": "1615:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShockSpace/imports/ReentrancyGuard.sol",
							"file": "../imports/ReentrancyGuard.sol",
							"id": 1003,
							"nodeType": "ImportDirective",
							"scope": 1660,
							"sourceUnit": 624,
							"src": "1650:40:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShockSpace/imports/Ownable.sol",
							"file": "../imports/Ownable.sol",
							"id": 1004,
							"nodeType": "ImportDirective",
							"scope": 1660,
							"sourceUnit": 559,
							"src": "1691:32:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1264,
							"linearizedBaseContracts": [
								1264
							],
							"name": "ISSListingTemplate",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISSListingTemplate.UpdateType",
									"id": 1021,
									"members": [
										{
											"constant": false,
											"id": 1006,
											"mutability": "mutable",
											"name": "updateType",
											"nodeType": "VariableDeclaration",
											"scope": 1021,
											"src": "1906:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1005,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1906:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1008,
											"mutability": "mutable",
											"name": "structId",
											"nodeType": "VariableDeclaration",
											"scope": 1021,
											"src": "1994:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1007,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1994:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1010,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1021,
											"src": "2058:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1009,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2058:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1012,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 1021,
											"src": "2109:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1011,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2109:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1014,
											"mutability": "mutable",
											"name": "addr",
											"nodeType": "VariableDeclaration",
											"scope": 1021,
											"src": "2158:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1013,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2158:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1016,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1021,
											"src": "2200:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1015,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2200:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1018,
											"mutability": "mutable",
											"name": "maxPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1021,
											"src": "2246:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1017,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2246:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1020,
											"mutability": "mutable",
											"name": "minPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1021,
											"src": "2294:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1019,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2294:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UpdateType",
									"nodeType": "StructDefinition",
									"scope": 1264,
									"src": "1878:461:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ISSListingTemplate.PayoutUpdate",
									"id": 1028,
									"members": [
										{
											"constant": false,
											"id": 1023,
											"mutability": "mutable",
											"name": "payoutType",
											"nodeType": "VariableDeclaration",
											"scope": 1028,
											"src": "2374:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1022,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2374:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1025,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1028,
											"src": "2421:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1024,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2421:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1027,
											"mutability": "mutable",
											"name": "required",
											"nodeType": "VariableDeclaration",
											"scope": 1028,
											"src": "2448:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1026,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2448:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PayoutUpdate",
									"nodeType": "StructDefinition",
									"scope": 1264,
									"src": "2344:127:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ISSListingTemplate.LongPayoutStruct",
									"id": 1041,
									"members": [
										{
											"constant": false,
											"id": 1030,
											"mutability": "mutable",
											"name": "makerAddress",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "2510:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1029,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2510:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1032,
											"mutability": "mutable",
											"name": "recipientAddress",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "2540:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1031,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2540:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1034,
											"mutability": "mutable",
											"name": "required",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "2574:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1033,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2574:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1036,
											"mutability": "mutable",
											"name": "filled",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "2600:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1035,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2600:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1038,
											"mutability": "mutable",
											"name": "orderId",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "2624:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1037,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2624:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1040,
											"mutability": "mutable",
											"name": "status",
											"nodeType": "VariableDeclaration",
											"scope": 1041,
											"src": "2649:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1039,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2649:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LongPayoutStruct",
									"nodeType": "StructDefinition",
									"scope": 1264,
									"src": "2476:192:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ISSListingTemplate.ShortPayoutStruct",
									"id": 1054,
									"members": [
										{
											"constant": false,
											"id": 1043,
											"mutability": "mutable",
											"name": "makerAddress",
											"nodeType": "VariableDeclaration",
											"scope": 1054,
											"src": "2708:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1042,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2708:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1045,
											"mutability": "mutable",
											"name": "recipientAddress",
											"nodeType": "VariableDeclaration",
											"scope": 1054,
											"src": "2738:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1044,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2738:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1047,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1054,
											"src": "2772:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1046,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2772:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1049,
											"mutability": "mutable",
											"name": "filled",
											"nodeType": "VariableDeclaration",
											"scope": 1054,
											"src": "2796:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1048,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2796:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1051,
											"mutability": "mutable",
											"name": "orderId",
											"nodeType": "VariableDeclaration",
											"scope": 1054,
											"src": "2820:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1050,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2820:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1053,
											"mutability": "mutable",
											"name": "status",
											"nodeType": "VariableDeclaration",
											"scope": 1054,
											"src": "2845:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1052,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2845:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ShortPayoutStruct",
									"nodeType": "StructDefinition",
									"scope": 1264,
									"src": "2673:191:7",
									"visibility": "public"
								},
								{
									"functionSelector": "f5ff5c76",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "agent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2883:2:7"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2909:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2909:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2908:9:7"
									},
									"scope": 1264,
									"src": "2869:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ed9aab51",
									"id": 1064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registryAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2947:2:7"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "2973:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2973:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2972:9:7"
									},
									"scope": 1264,
									"src": "2923:59:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a91ee0dc",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRegistry",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "newRegistry",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "3041:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:21:7"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3070:0:7"
									},
									"scope": 1264,
									"src": "3020:51:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "13e2b18e",
									"id": 1078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3121:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "updates",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3137:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.UpdateType[]"
												},
												"typeName": {
													"baseType": {
														"id": 1073,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1072,
															"name": "UpdateType",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1021,
															"src": "3137:10:7"
														},
														"referencedDeclaration": 1021,
														"src": "3137:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType"
														}
													},
													"id": 1074,
													"nodeType": "ArrayTypeName",
													"src": "3137:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:45:7"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3174:0:7"
									},
									"scope": 1264,
									"src": "3105:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "88413c17",
									"id": 1087,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ssUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3198:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3198:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "payoutUpdates",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3214:35:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
												},
												"typeName": {
													"baseType": {
														"id": 1082,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1081,
															"name": "PayoutUpdate",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1028,
															"src": "3214:12:7"
														},
														"referencedDeclaration": 1028,
														"src": "3214:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate"
														}
													},
													"id": 1083,
													"nodeType": "ArrayTypeName",
													"src": "3214:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:53:7"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:7"
									},
									"scope": 1264,
									"src": "3180:80:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f9b44c85",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transact",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3283:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3299:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3299:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3314:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3330:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:66:7"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3357:0:7"
									},
									"scope": 1264,
									"src": "3265:93:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "50894e9f",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimalsA",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:7"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3407:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1100,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3407:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3406:7:7"
									},
									"scope": 1264,
									"src": "3363:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "57cbf16c",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimalsB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3437:2:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "3463:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1105,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3463:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3462:7:7"
									},
									"scope": 1264,
									"src": "3419:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40d87ebe",
									"id": 1119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "listingVolumeBalancesView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3509:2:7"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "xBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3535:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "yBalance",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3553:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "xVolume",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3571:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "yVolume",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3588:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:70:7"
									},
									"scope": 1264,
									"src": "3475:130:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b66cd4b",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyOrderCore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3635:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3634:17:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "makerAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3675:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "recipientAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3697:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3697:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "3723:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1127,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3723:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3674:62:7"
									},
									"scope": 1264,
									"src": "3610:127:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "080735de",
									"id": 1139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyOrderPricing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3770:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3769:17:7"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "maxPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3810:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3810:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "minPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3828:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3828:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3809:36:7"
									},
									"scope": 1264,
									"src": "3742:104:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "03b63cc4",
									"id": 1148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyOrderAmounts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3879:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3878:17:7"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "pending",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3919:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "filled",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3936:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:33:7"
									},
									"scope": 1264,
									"src": "3851:101:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "957faf7e",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSellOrderCore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3983:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:17:7"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "makerAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4023:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "recipientAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4045:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4045:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4071:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1156,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4071:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:62:7"
									},
									"scope": 1264,
									"src": "3957:128:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baba1dc8",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSellOrderPricing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4119:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4119:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4118:17:7"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "maxPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4159:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "minPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4177:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:36:7"
									},
									"scope": 1264,
									"src": "4090:105:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "60a3e765",
									"id": 1177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSellOrderAmounts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4229:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4228:17:7"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "pending",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4269:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4269:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "filled",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4286:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4268:33:7"
									},
									"scope": 1264,
									"src": "4200:102:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "91776ee7",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLongPayout",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "4330:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4330:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4329:17:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "4370:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LongPayoutStruct_$1041_memory_ptr",
													"typeString": "struct ISSListingTemplate.LongPayoutStruct"
												},
												"typeName": {
													"id": 1182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1181,
														"name": "LongPayoutStruct",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1041,
														"src": "4370:16:7"
													},
													"referencedDeclaration": 1041,
													"src": "4370:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LongPayoutStruct_$1041_storage_ptr",
														"typeString": "struct ISSListingTemplate.LongPayoutStruct"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4369:25:7"
									},
									"scope": 1264,
									"src": "4307:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c794836c",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getShortPayout",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "4424:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4424:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4423:17:7"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "4464:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ShortPayoutStruct_$1054_memory_ptr",
													"typeString": "struct ISSListingTemplate.ShortPayoutStruct"
												},
												"typeName": {
													"id": 1190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1189,
														"name": "ShortPayoutStruct",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1054,
														"src": "4464:17:7"
													},
													"referencedDeclaration": 1054,
													"src": "4464:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ShortPayoutStruct_$1054_storage_ptr",
														"typeString": "struct ISSListingTemplate.ShortPayoutStruct"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:26:7"
									},
									"scope": 1264,
									"src": "4400:90:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "27a4d4c5",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingBuyOrdersView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4524:2:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "4550:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1195,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4550:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1196,
													"nodeType": "ArrayTypeName",
													"src": "4550:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:18:7"
									},
									"scope": 1264,
									"src": "4495:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9de500b3",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingSellOrdersView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4603:2:7"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4629:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1201,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4629:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1202,
													"nodeType": "ArrayTypeName",
													"src": "4629:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4628:18:7"
									},
									"scope": 1264,
									"src": "4573:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8b73097b",
									"id": 1211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "longPayoutByIndexView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4682:2:7"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "4708:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1207,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4708:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1208,
													"nodeType": "ArrayTypeName",
													"src": "4708:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:18:7"
									},
									"scope": 1264,
									"src": "4652:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "59b5994c",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "shortPayoutByIndexView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4762:2:7"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "4788:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1213,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4788:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1214,
													"nodeType": "ArrayTypeName",
													"src": "4788:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:18:7"
									},
									"scope": 1264,
									"src": "4731:75:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6d8d6189",
									"id": 1225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makerPendingOrdersView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4843:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4843:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4842:15:7"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4881:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1221,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4881:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1222,
													"nodeType": "ArrayTypeName",
													"src": "4881:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4880:18:7"
									},
									"scope": 1264,
									"src": "4811:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a5e7435",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityAddressView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4933:2:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4959:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4958:9:7"
									},
									"scope": 1264,
									"src": "4904:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0fc63d10",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenA",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4988:2:7"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "5014:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5013:9:7"
									},
									"scope": 1264,
									"src": "4973:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f64b55b",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5043:2:7"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "5069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5069:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5068:9:7"
									},
									"scope": 1264,
									"src": "5028:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "41ef492b",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "normalize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5102:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5102:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5118:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1243,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5118:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5101:32:7"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5157:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5156:9:7"
									},
									"scope": 1264,
									"src": "5083:83:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "200bf284",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "denormalize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "5192:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "5208:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1252,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5208:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5191:32:7"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "5247:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:9:7"
									},
									"scope": 1264,
									"src": "5171:85:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eb510caf",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getListingId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5282:2:7"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "5308:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5308:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5307:9:7"
									},
									"scope": 1264,
									"src": "5261:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1660,
							"src": "1843:3476:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1488,
							"linearizedBaseContracts": [
								1488
							],
							"name": "ISSLiquidityTemplate",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISSLiquidityTemplate.UpdateType",
									"id": 1275,
									"members": [
										{
											"constant": false,
											"id": 1266,
											"mutability": "mutable",
											"name": "updateType",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "5386:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1265,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5386:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1268,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "5412:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1267,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5412:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1270,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "5435:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1269,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5435:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1272,
											"mutability": "mutable",
											"name": "addr",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "5458:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1271,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5458:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1274,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "5480:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5480:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UpdateType",
									"nodeType": "StructDefinition",
									"scope": 1488,
									"src": "5358:146:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ISSLiquidityTemplate.PreparedWithdrawal",
									"id": 1280,
									"members": [
										{
											"constant": false,
											"id": 1277,
											"mutability": "mutable",
											"name": "amountA",
											"nodeType": "VariableDeclaration",
											"scope": 1280,
											"src": "5545:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1276,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5545:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1279,
											"mutability": "mutable",
											"name": "amountB",
											"nodeType": "VariableDeclaration",
											"scope": 1280,
											"src": "5570:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1278,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5570:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PreparedWithdrawal",
									"nodeType": "StructDefinition",
									"scope": 1488,
									"src": "5509:83:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ISSLiquidityTemplate.Slot",
									"id": 1291,
									"members": [
										{
											"constant": false,
											"id": 1282,
											"mutability": "mutable",
											"name": "depositor",
											"nodeType": "VariableDeclaration",
											"scope": 1291,
											"src": "5619:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5619:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1284,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1291,
											"src": "5646:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1283,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5646:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1286,
											"mutability": "mutable",
											"name": "allocation",
											"nodeType": "VariableDeclaration",
											"scope": 1291,
											"src": "5673:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1285,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5673:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "dVolume",
											"nodeType": "VariableDeclaration",
											"scope": 1291,
											"src": "5701:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1287,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5701:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1290,
											"mutability": "mutable",
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 1291,
											"src": "5726:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1289,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5726:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Slot",
									"nodeType": "StructDefinition",
									"scope": 1488,
									"src": "5597:153:7",
									"visibility": "public"
								},
								{
									"functionSelector": "296dc7d9",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5771:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5771:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "updates",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5787:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UpdateType_$1275_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSLiquidityTemplate.UpdateType[]"
												},
												"typeName": {
													"baseType": {
														"id": 1295,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1294,
															"name": "UpdateType",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1275,
															"src": "5787:10:7"
														},
														"referencedDeclaration": 1275,
														"src": "5787:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1275_storage_ptr",
															"typeString": "struct ISSLiquidityTemplate.UpdateType"
														}
													},
													"id": 1296,
													"nodeType": "ArrayTypeName",
													"src": "5787:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1275_storage_$dyn_storage_ptr",
														"typeString": "struct ISSLiquidityTemplate.UpdateType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5770:45:7"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5824:0:7"
									},
									"scope": 1488,
									"src": "5755:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f9b44c85",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transact",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5848:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5848:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5864:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5879:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5879:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5895:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5895:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5847:66:7"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5922:0:7"
									},
									"scope": 1488,
									"src": "5830:93:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8340f549",
									"id": 1320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "5945:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5945:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "5961:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "5976:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5944:47:7"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6008:0:7"
									},
									"scope": 1488,
									"src": "5928:81:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01e34620",
									"id": 1329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "6039:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "isX",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "6055:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6055:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "6065:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6065:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:42:7"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6089:0:7"
									},
									"scope": 1488,
									"src": "6014:76:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dbaf307d",
									"id": 1338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "6112:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6112:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "isX",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "6128:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6128:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "6138:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6111:39:7"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6159:0:7"
									},
									"scope": 1488,
									"src": "6095:65:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e28be471",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xPrepOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "6183:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6183:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "6199:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "6215:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6215:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6182:47:7"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "6248:25:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PreparedWithdrawal_$1280_memory_ptr",
													"typeString": "struct ISSLiquidityTemplate.PreparedWithdrawal"
												},
												"typeName": {
													"id": 1347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1346,
														"name": "PreparedWithdrawal",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "6248:18:7"
													},
													"referencedDeclaration": 1280,
													"src": "6248:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PreparedWithdrawal_$1280_storage_ptr",
														"typeString": "struct ISSLiquidityTemplate.PreparedWithdrawal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6247:27:7"
									},
									"scope": 1488,
									"src": "6165:110:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "936d9c6f",
									"id": 1360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xExecuteOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "6301:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6301:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "6317:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6317:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "withdrawal",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "6332:36:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PreparedWithdrawal_$1280_memory_ptr",
													"typeString": "struct ISSLiquidityTemplate.PreparedWithdrawal"
												},
												"typeName": {
													"id": 1356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1355,
														"name": "PreparedWithdrawal",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "6332:18:7"
													},
													"referencedDeclaration": 1280,
													"src": "6332:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PreparedWithdrawal_$1280_storage_ptr",
														"typeString": "struct ISSLiquidityTemplate.PreparedWithdrawal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6300:69:7"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6378:0:7"
									},
									"scope": 1488,
									"src": "6280:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f71e67f",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "yPrepOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "6402:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6402:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "6418:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6418:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "6434:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6434:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6401:47:7"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "6467:25:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PreparedWithdrawal_$1280_memory_ptr",
													"typeString": "struct ISSLiquidityTemplate.PreparedWithdrawal"
												},
												"typeName": {
													"id": 1369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1368,
														"name": "PreparedWithdrawal",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "6467:18:7"
													},
													"referencedDeclaration": 1280,
													"src": "6467:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PreparedWithdrawal_$1280_storage_ptr",
														"typeString": "struct ISSLiquidityTemplate.PreparedWithdrawal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6466:27:7"
									},
									"scope": 1488,
									"src": "6384:110:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "61538603",
									"id": 1382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "yExecuteOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "6520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6520:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "6536:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6536:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "withdrawal",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "6551:36:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PreparedWithdrawal_$1280_memory_ptr",
													"typeString": "struct ISSLiquidityTemplate.PreparedWithdrawal"
												},
												"typeName": {
													"id": 1378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1377,
														"name": "PreparedWithdrawal",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "6551:18:7"
													},
													"referencedDeclaration": 1280,
													"src": "6551:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PreparedWithdrawal_$1280_storage_ptr",
														"typeString": "struct ISSLiquidityTemplate.PreparedWithdrawal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6519:69:7"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6597:0:7"
									},
									"scope": 1488,
									"src": "6499:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0d4bd335",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "6622:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6622:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "listingAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "6638:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "6662:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6662:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "isX",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "6686:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6686:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "volume",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "6696:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6696:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6621:90:7"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6720:0:7"
									},
									"scope": 1488,
									"src": "6603:118:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b490c21f",
									"id": 1406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeSlotDepositor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "6755:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "isX",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "6771:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "slotIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "6781:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6781:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "newDepositor",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "6800:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6800:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6754:67:7"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6830:0:7"
									},
									"scope": 1488,
									"src": "6726:105:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "20b69821",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityAmounts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6861:2:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "xAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "6887:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "yAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "6904:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6886:34:7"
									},
									"scope": 1488,
									"src": "6836:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0d41b88",
									"id": 1424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityDetailsView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6955:2:7"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "xLiquid",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6981:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6981:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "yLiquid",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6998:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6998:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "xFees",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "7015:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7015:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "yFees",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "7030:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7030:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6980:64:7"
									},
									"scope": 1488,
									"src": "6926:119:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "28c1c8d1",
									"id": 1430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "activeXLiquiditySlotsView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7084:2:7"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "7110:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1426,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7110:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1427,
													"nodeType": "ArrayTypeName",
													"src": "7110:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:18:7"
									},
									"scope": 1488,
									"src": "7050:78:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b0be79b6",
									"id": 1436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "activeYLiquiditySlotsView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7167:2:7"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "7193:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7193:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1433,
													"nodeType": "ArrayTypeName",
													"src": "7193:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7192:18:7"
									},
									"scope": 1488,
									"src": "7133:78:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f3510bc",
									"id": 1444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userIndexView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "7239:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7239:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7238:14:7"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "7276:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1440,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7276:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1441,
													"nodeType": "ArrayTypeName",
													"src": "7276:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7275:18:7"
									},
									"scope": 1488,
									"src": "7216:78:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d97cab4e",
									"id": 1452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getXSlotView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7321:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:15:7"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "7359:11:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Slot_$1291_memory_ptr",
													"typeString": "struct ISSLiquidityTemplate.Slot"
												},
												"typeName": {
													"id": 1449,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1448,
														"name": "Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1291,
														"src": "7359:4:7"
													},
													"referencedDeclaration": 1291,
													"src": "7359:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Slot_$1291_storage_ptr",
														"typeString": "struct ISSLiquidityTemplate.Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7358:13:7"
									},
									"scope": 1488,
									"src": "7299:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7082bc97",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYSlotView",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "7399:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7399:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7398:15:7"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "7437:11:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Slot_$1291_memory_ptr",
													"typeString": "struct ISSLiquidityTemplate.Slot"
												},
												"typeName": {
													"id": 1457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1456,
														"name": "Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1291,
														"src": "7437:4:7"
													},
													"referencedDeclaration": 1291,
													"src": "7437:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Slot_$1291_storage_ptr",
														"typeString": "struct ISSLiquidityTemplate.Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7436:13:7"
									},
									"scope": 1488,
									"src": "7377:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d5bc2be",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getListingAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7481:2:7"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "7507:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7507:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7506:9:7"
									},
									"scope": 1488,
									"src": "7455:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9405dfdd",
									"id": 1470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "listingId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7539:2:7"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "7565:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7565:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7564:9:7"
									},
									"scope": 1488,
									"src": "7521:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0fc63d10",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenA",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7594:2:7"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "7620:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7620:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7619:9:7"
									},
									"scope": 1488,
									"src": "7579:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f64b55b",
									"id": 1480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7649:2:7"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "7675:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7674:9:7"
									},
									"scope": 1488,
									"src": "7634:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "80dd9a1f",
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "routers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "router",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "7706:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7706:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7705:16:7"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "7745:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7745:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7744:6:7"
									},
									"scope": 1488,
									"src": "7689:62:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1660,
							"src": "5321:2432:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1498,
							"linearizedBaseContracts": [
								1498
							],
							"name": "ISSAgent",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b369f6ad",
									"id": 1497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getListing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "7800:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7800:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "7816:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7816:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7799:32:7"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "7855:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7855:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7854:9:7"
									},
									"scope": 1498,
									"src": "7780:84:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1660,
							"src": "7755:111:7"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1499,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "7894:15:7"
									},
									"id": 1500,
									"nodeType": "InheritanceSpecifier",
									"src": "7894:15:7"
								},
								{
									"baseName": {
										"id": 1501,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 558,
										"src": "7911:7:7"
									},
									"id": 1502,
									"nodeType": "InheritanceSpecifier",
									"src": "7911:7:7"
								}
							],
							"contractDependencies": [
								351,
								558,
								623
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1659,
							"linearizedBaseContracts": [
								1659,
								558,
								351,
								623
							],
							"name": "SSMainPartial",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1506,
									"libraryName": {
										"id": 1503,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 999,
										"src": "7931:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "7925:27:7",
									"typeName": {
										"id": 1505,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1504,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 409,
											"src": "7945:6:7"
										},
										"referencedDeclaration": 409,
										"src": "7945:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$409",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f5ff5c76",
									"id": 1508,
									"mutability": "mutable",
									"name": "agent",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "7958:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1507,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7958:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SSMainPartial.OrderPrep",
									"id": 1519,
									"members": [
										{
											"constant": false,
											"id": 1510,
											"mutability": "mutable",
											"name": "maker",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "8012:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1509,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8012:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1512,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "8035:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1511,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8035:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1514,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "8062:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1513,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8062:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1516,
											"mutability": "mutable",
											"name": "maxPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "8086:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1515,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8086:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1518,
											"mutability": "mutable",
											"name": "minPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "8112:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1517,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8112:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OrderPrep",
									"nodeType": "StructDefinition",
									"scope": 1659,
									"src": "7985:150:7",
									"visibility": "public"
								},
								{
									"canonicalName": "SSMainPartial.BuyOrderDetails",
									"id": 1536,
									"members": [
										{
											"constant": false,
											"id": 1521,
											"mutability": "mutable",
											"name": "orderId",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "8174:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1520,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8174:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1523,
											"mutability": "mutable",
											"name": "maker",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "8199:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1522,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8199:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1525,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "8222:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1524,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8222:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1527,
											"mutability": "mutable",
											"name": "pending",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "8249:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1526,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8249:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1529,
											"mutability": "mutable",
											"name": "filled",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "8274:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1528,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8274:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1531,
											"mutability": "mutable",
											"name": "maxPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "8298:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1530,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8298:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1533,
											"mutability": "mutable",
											"name": "minPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "8324:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1532,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8324:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1535,
											"mutability": "mutable",
											"name": "status",
											"nodeType": "VariableDeclaration",
											"scope": 1536,
											"src": "8350:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1534,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "8350:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyOrderDetails",
									"nodeType": "StructDefinition",
									"scope": 1659,
									"src": "8141:228:7",
									"visibility": "public"
								},
								{
									"canonicalName": "SSMainPartial.SellOrderDetails",
									"id": 1553,
									"members": [
										{
											"constant": false,
											"id": 1538,
											"mutability": "mutable",
											"name": "orderId",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "8409:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1537,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8409:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1540,
											"mutability": "mutable",
											"name": "maker",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "8434:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1539,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8434:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1542,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "8457:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1541,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8457:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1544,
											"mutability": "mutable",
											"name": "pending",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "8484:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1543,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8484:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1546,
											"mutability": "mutable",
											"name": "filled",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "8509:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1545,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8509:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1548,
											"mutability": "mutable",
											"name": "maxPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "8533:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1547,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8533:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1550,
											"mutability": "mutable",
											"name": "minPrice",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "8559:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1549,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8559:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1552,
											"mutability": "mutable",
											"name": "status",
											"nodeType": "VariableDeclaration",
											"scope": 1553,
											"src": "8585:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1551,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "8585:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SellOrderDetails",
									"nodeType": "StructDefinition",
									"scope": 1659,
									"src": "8375:229:7",
									"visibility": "public"
								},
								{
									"canonicalName": "SSMainPartial.OrderClearData",
									"id": 1560,
									"members": [
										{
											"constant": false,
											"id": 1555,
											"mutability": "mutable",
											"name": "orderId",
											"nodeType": "VariableDeclaration",
											"scope": 1560,
											"src": "8642:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1554,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8642:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1557,
											"mutability": "mutable",
											"name": "isBuy",
											"nodeType": "VariableDeclaration",
											"scope": 1560,
											"src": "8667:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1556,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8667:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1559,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1560,
											"src": "8687:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1558,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8687:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OrderClearData",
									"nodeType": "StructDefinition",
									"scope": 1659,
									"src": "8610:98:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39c7fcef",
									"id": 1564,
									"mutability": "mutable",
									"name": "isValidListing",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "8714:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1563,
										"keyType": {
											"id": 1561,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8722:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8714:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1562,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8733:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "69d70075",
									"id": 1568,
									"mutability": "mutable",
									"name": "liquidityAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "8766:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1567,
										"keyType": {
											"id": 1565,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8774:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8766:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1566,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8785:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "943450dd",
									"id": 1572,
									"mutability": "mutable",
									"name": "tokenA",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "8823:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1571,
										"keyType": {
											"id": 1569,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8831:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8823:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1570,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8842:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9cb52525",
									"id": 1576,
									"mutability": "mutable",
									"name": "tokenB",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "8870:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1575,
										"keyType": {
											"id": 1573,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8878:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8870:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1574,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8889:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aa624ffa",
									"id": 1580,
									"mutability": "mutable",
									"name": "decimalsA",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "8917:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
										"typeString": "mapping(address => uint8)"
									},
									"typeName": {
										"id": 1579,
										"keyType": {
											"id": 1577,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8925:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8917:25:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
											"typeString": "mapping(address => uint8)"
										},
										"valueType": {
											"id": 1578,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "8936:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9e9b5f97",
									"id": 1584,
									"mutability": "mutable",
									"name": "decimalsB",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "8965:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
										"typeString": "mapping(address => uint8)"
									},
									"typeName": {
										"id": 1583,
										"keyType": {
											"id": 1581,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8973:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8965:25:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
											"typeString": "mapping(address => uint8)"
										},
										"valueType": {
											"id": 1582,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "8984:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed1a8b45",
									"id": 1590,
									"mutability": "mutable",
									"name": "orderPendingAmounts",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "9013:74:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1589,
										"keyType": {
											"id": 1585,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9021:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9013:47:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1588,
											"keyType": {
												"id": 1586,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9040:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "9032:27:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1587,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9051:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0aa666c2",
									"id": 1596,
									"mutability": "mutable",
									"name": "payoutPendingAmounts",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "9093:75:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1595,
										"keyType": {
											"id": 1591,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9101:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9093:47:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1594,
											"keyType": {
												"id": 1592,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9120:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "9112:27:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1593,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9131:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "007b5562",
									"id": 1601,
									"mutability": "mutable",
									"name": "activeBuyOrders",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "9174:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1600,
										"keyType": {
											"id": 1597,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9182:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9174:29:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1598,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9193:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1599,
											"nodeType": "ArrayTypeName",
											"src": "9193:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5061d89",
									"id": 1606,
									"mutability": "mutable",
									"name": "activeSellOrders",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "9232:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1605,
										"keyType": {
											"id": 1602,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9240:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9232:29:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1603,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9251:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1604,
											"nodeType": "ArrayTypeName",
											"src": "9251:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff4c2254",
									"id": 1611,
									"mutability": "mutable",
									"name": "activeLongPayouts",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "9291:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1610,
										"keyType": {
											"id": 1607,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9299:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9291:29:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1608,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9310:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1609,
											"nodeType": "ArrayTypeName",
											"src": "9310:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29f2ebb9",
									"id": 1616,
									"mutability": "mutable",
									"name": "activeShortPayouts",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "9351:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1615,
										"keyType": {
											"id": 1612,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9359:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9351:29:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1613,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9370:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1614,
											"nodeType": "ArrayTypeName",
											"src": "9370:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bc5a318a",
									"id": 1623,
									"mutability": "mutable",
									"name": "makerActiveOrders",
									"nodeType": "VariableDeclaration",
									"scope": 1659,
									"src": "9412:74:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(address => mapping(address => uint256[]))"
									},
									"typeName": {
										"id": 1622,
										"keyType": {
											"id": 1617,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9420:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9412:49:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(address => mapping(address => uint256[]))"
										},
										"valueType": {
											"id": 1621,
											"keyType": {
												"id": 1618,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9439:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "9431:29:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(address => uint256[])"
											},
											"valueType": {
												"baseType": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9450:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1620,
												"nodeType": "ArrayTypeName",
												"src": "9450:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "9536:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1628,
																"name": "isValidListing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "9554:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1630,
															"indexExpression": {
																"id": 1629,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "9569:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9554:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c697374696e67",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9579:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6a7153e4b6ed5ab560856244485f784b397abc09fe703460effdf64d2c6e251",
																"typeString": "literal_string \"Invalid listing\""
															},
															"value": "Invalid listing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6a7153e4b6ed5ab560856244485f784b397abc09fe703460effdf64d2c6e251",
																"typeString": "literal_string \"Invalid listing\""
															}
														],
														"id": 1627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9546:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9546:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "9546:51:7"
											},
											{
												"id": 1634,
												"nodeType": "PlaceholderStatement",
												"src": "9607:1:7"
											}
										]
									},
									"id": 1636,
									"name": "onlyValidListing",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "9519:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9519:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9518:17:7"
									},
									"src": "9493:122:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "9676:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1644,
																"name": "newAgent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "9694:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9714:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9706:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1645,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9706:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9706:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9694:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206167656e742061646472657373",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9718:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6695ab6c0fed1f1bec225452c9e8e46efdb8505a7d974ac410ebd8bac7f4616",
																"typeString": "literal_string \"Invalid agent address\""
															},
															"value": "Invalid agent address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6695ab6c0fed1f1bec225452c9e8e46efdb8505a7d974ac410ebd8bac7f4616",
																"typeString": "literal_string \"Invalid agent address\""
															}
														],
														"id": 1643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9686:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9686:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "9686:56:7"
											},
											{
												"expression": {
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1653,
														"name": "agent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "9752:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1654,
														"name": "newAgent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "9760:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9752:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "9752:16:7"
											}
										]
									},
									"functionSelector": "bcf685ed",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1641,
											"modifierName": {
												"id": 1640,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 477,
												"src": "9666:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9666:9:7"
										}
									],
									"name": "setAgent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "newAgent",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "9639:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9639:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9638:18:7"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9676:0:7"
									},
									"scope": 1659,
									"src": "9621:154:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1660,
							"src": "7868:1909:7"
						}
					],
					"src": "41:9736:7"
				},
				"id": 7
			},
			"ShockSpace/utils/SSOrderPartial.sol": {
				"ast": {
					"absolutePath": "ShockSpace/utils/SSOrderPartial.sol",
					"exportedSymbols": {
						"Address": [
							329
						],
						"Context": [
							351
						],
						"IERC20": [
							409
						],
						"IERC20Permit": [
							445
						],
						"ISSAgent": [
							1498
						],
						"ISSLiquidityTemplate": [
							1488
						],
						"ISSListingTemplate": [
							1264
						],
						"Ownable": [
							558
						],
						"ReentrancyGuard": [
							623
						],
						"SSMainPartial": [
							1659
						],
						"SSOrderPartial": [
							2039
						],
						"SafeERC20": [
							999
						]
					},
					"id": 2040,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:8"
						},
						{
							"absolutePath": "ShockSpace/utils/SSMainPartial.sol",
							"file": "./SSMainPartial.sol",
							"id": 1662,
							"nodeType": "ImportDirective",
							"scope": 2040,
							"sourceUnit": 1660,
							"src": "698:29:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1663,
										"name": "SSMainPartial",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1659,
										"src": "756:13:8"
									},
									"id": 1664,
									"nodeType": "InheritanceSpecifier",
									"src": "756:13:8"
								}
							],
							"contractDependencies": [
								351,
								558,
								623,
								1659
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2039,
							"linearizedBaseContracts": [
								2039,
								1659,
								558,
								351,
								623
							],
							"name": "SSOrderPartial",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "1020:420:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1685,
																"name": "maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "1038:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1047:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1686,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1047:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1047:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1038:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d616b6572",
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1059:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91b1c08ec5135580f01fbe2f3537ed3193944fcaa4c7df0e2f84478b1d62ef9f",
																"typeString": "literal_string \"Invalid maker\""
															},
															"value": "Invalid maker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91b1c08ec5135580f01fbe2f3537ed3193944fcaa4c7df0e2f84478b1d62ef9f",
																"typeString": "literal_string \"Invalid maker\""
															}
														],
														"id": 1684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1030:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1030:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "1030:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1695,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1670,
																"src": "1093:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1114:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1106:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1696,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1106:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1106:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1093:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1118:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1085:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1085:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "1085:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1705,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "1156:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1165:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1156:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1168:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1148:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1148:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "1148:37:8"
											},
											{
												"assignments": [
													1712
												],
												"declarations": [
													{
														"constant": false,
														"id": 1712,
														"mutability": "mutable",
														"name": "decimals",
														"nodeType": "VariableDeclaration",
														"scope": 1740,
														"src": "1195:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1711,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1195:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1721,
												"initialValue": {
													"condition": {
														"id": 1713,
														"name": "isBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "1212:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"baseExpression": {
															"id": 1717,
															"name": "decimalsA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "1241:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																"typeString": "mapping(address => uint8)"
															}
														},
														"id": 1719,
														"indexExpression": {
															"id": 1718,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "1251:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1241:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1212:47:8",
													"trueExpression": {
														"baseExpression": {
															"id": 1714,
															"name": "decimalsB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "1220:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																"typeString": "mapping(address => uint8)"
															}
														},
														"id": 1716,
														"indexExpression": {
															"id": 1715,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "1230:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1220:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1195:64:8"
											},
											{
												"assignments": [
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "normalizedAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1740,
														"src": "1269:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1269:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"arguments": [
														{
															"id": 1728,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "1334:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1729,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "1342:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1725,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "1315:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1724,
																"name": "ISSListingTemplate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "1296:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
																	"typeString": "type(contract ISSListingTemplate)"
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1296:27:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "normalize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1249,
														"src": "1296:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint8) pure external returns (uint256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1269:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1733,
															"name": "maker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "1378:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1734,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "1385:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1735,
															"name": "normalizedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "1396:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1736,
															"name": "maxPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "1414:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1737,
															"name": "minPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "1424:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1732,
														"name": "OrderPrep",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "1368:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_OrderPrep_$1519_storage_ptr_$",
															"typeString": "type(struct SSMainPartial.OrderPrep storage pointer)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
														"typeString": "struct SSMainPartial.OrderPrep memory"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1739,
												"nodeType": "Return",
												"src": "1361:72:8"
											}
										]
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handleOrderPrep",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "811:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "maker",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "836:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "859:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "886:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "maxPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "910:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "minPrice",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "936:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "isBuy",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "962:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "962:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:177:8"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1002:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
													"typeString": "struct SSMainPartial.OrderPrep"
												},
												"typeName": {
													"id": 1681,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1680,
														"name": "OrderPrep",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1519,
														"src": "1002:9:8"
													},
													"referencedDeclaration": 1519,
													"src": "1002:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OrderPrep_$1519_storage_ptr",
														"typeString": "struct SSMainPartial.OrderPrep"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:18:8"
									},
									"scope": 2039,
									"src": "776:664:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "1566:914:8",
										"statements": [
											{
												"assignments": [
													1753
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "1576:34:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 1752,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1751,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "1576:18:8"
															},
															"referencedDeclaration": 1264,
															"src": "1576:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1757,
												"initialValue": {
													"arguments": [
														{
															"id": 1755,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "1632:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1754,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "1613:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1613:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1576:64:8"
											},
											{
												"assignments": [
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "orderId",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "1650:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1650:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1767,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1760,
																"name": "makerActiveOrders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "1668:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
																	"typeString": "mapping(address => mapping(address => uint256[] storage ref))"
																}
															},
															"id": 1762,
															"indexExpression": {
																"id": 1761,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "1686:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1668:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1765,
														"indexExpression": {
															"expression": {
																"id": 1763,
																"name": "prep",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "1695:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
																	"typeString": "struct SSMainPartial.OrderPrep memory"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "maker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1510,
															"src": "1695:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1668:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1668:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1650:63:8"
											},
											{
												"assignments": [
													1773
												],
												"declarations": [
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "updates",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "1723:46:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 1771,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1770,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "1723:29:8"
																},
																"referencedDeclaration": 1021,
																"src": "1723:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 1772,
															"nodeType": "ArrayTypeName",
															"src": "1723:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1780,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1808:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1772:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1775,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1774,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "1776:29:8"
																},
																"referencedDeclaration": 1021,
																"src": "1776:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 1776,
															"nodeType": "ArrayTypeName",
															"src": "1776:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1723:87:8"
											},
											{
												"expression": {
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1781,
															"name": "updates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "1820:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
															}
														},
														"id": 1783,
														"indexExpression": {
															"hexValue": "30",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1820:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"condition": {
																	"id": 1786,
																	"name": "isBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "1889:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "32",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1901:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1889:13:8",
																"trueExpression": {
																	"hexValue": "31",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1897:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"hexValue": "30",
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1926:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1791,
																"name": "orderId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "1948:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1792,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "1976:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
																		"typeString": "struct SSMainPartial.OrderPrep memory"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1514,
																"src": "1976:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1794,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "2007:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
																		"typeString": "struct SSMainPartial.OrderPrep memory"
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "maker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1510,
																"src": "2007:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1796,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "2042:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
																		"typeString": "struct SSMainPartial.OrderPrep memory"
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "recipient",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1512,
																"src": "2042:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1798,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "2080:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
																		"typeString": "struct SSMainPartial.OrderPrep memory"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "maxPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1516,
																"src": "2080:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1800,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "2117:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
																		"typeString": "struct SSMainPartial.OrderPrep memory"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "minPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1518,
																"src": "2117:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1784,
																"name": "ISSListingTemplate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "1833:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
																	"typeString": "type(contract ISSListingTemplate)"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UpdateType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1021,
															"src": "1833:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UpdateType_$1021_storage_ptr_$",
																"typeString": "type(struct ISSListingTemplate.UpdateType storage pointer)"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"updateType",
															"structId",
															"index",
															"value",
															"addr",
															"recipient",
															"maxPrice",
															"minPrice"
														],
														"nodeType": "FunctionCall",
														"src": "1833:308:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType memory"
														}
													},
													"src": "1820:321:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "1820:321:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1810,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2182:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SSOrderPartial_$2039",
																		"typeString": "contract SSOrderPartial"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SSOrderPartial_$2039",
																		"typeString": "contract SSOrderPartial"
																	}
																],
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2174:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1808,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2174:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2174:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1812,
															"name": "updates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "2189:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
															}
														],
														"expression": {
															"id": 1805,
															"name": "listingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "2151:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1078,
														"src": "2151:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,struct ISSListingTemplate.UpdateType memory[] memory) external"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "2151:46:8"
											},
											{
												"expression": {
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1815,
																"name": "orderPendingAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "2207:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1818,
															"indexExpression": {
																"id": 1816,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "2227:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2207:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1819,
														"indexExpression": {
															"id": 1817,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "2236:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2207:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1820,
															"name": "prep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "2247:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
																"typeString": "struct SSMainPartial.OrderPrep memory"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1514,
														"src": "2247:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2207:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1823,
												"nodeType": "ExpressionStatement",
												"src": "2207:51:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1831,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "2312:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1824,
																	"name": "makerActiveOrders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "2268:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(address => mapping(address => uint256[] storage ref))"
																	}
																},
																"id": 1828,
																"indexExpression": {
																	"id": 1825,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "2286:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2268:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1829,
															"indexExpression": {
																"expression": {
																	"id": 1826,
																	"name": "prep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "2295:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
																		"typeString": "struct SSMainPartial.OrderPrep memory"
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "maker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1510,
																"src": "2295:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2268:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2268:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1833,
												"nodeType": "ExpressionStatement",
												"src": "2268:52:8"
											},
											{
												"condition": {
													"id": 1834,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1748,
													"src": "2334:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1850,
													"nodeType": "Block",
													"src": "2410:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1847,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "2455:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1843,
																			"name": "activeSellOrders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1606,
																			"src": "2424:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 1845,
																		"indexExpression": {
																			"id": 1844,
																			"name": "listing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1743,
																			"src": "2441:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2424:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2424:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2424:39:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "2424:39:8"
														}
													]
												},
												"id": 1851,
												"nodeType": "IfStatement",
												"src": "2330:144:8",
												"trueBody": {
													"id": 1842,
													"nodeType": "Block",
													"src": "2341:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1839,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "2385:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1835,
																			"name": "activeBuyOrders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1601,
																			"src": "2355:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 1837,
																		"indexExpression": {
																			"id": 1836,
																			"name": "listing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1743,
																			"src": "2371:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2355:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2355:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2355:38:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1841,
															"nodeType": "ExpressionStatement",
															"src": "2355:38:8"
														}
													]
												}
											}
										]
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeSingleOrder",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1484:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "prep",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1509:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OrderPrep_$1519_memory_ptr",
													"typeString": "struct SSMainPartial.OrderPrep"
												},
												"typeName": {
													"id": 1745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1744,
														"name": "OrderPrep",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1519,
														"src": "1509:9:8"
													},
													"referencedDeclaration": 1519,
													"src": "1509:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OrderPrep_$1519_storage_ptr",
														"typeString": "struct SSMainPartial.OrderPrep"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "isBuy",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1540:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1540:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:82:8"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:0:8"
									},
									"scope": 2039,
									"src": "1446:1034:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "2596:1396:8",
										"statements": [
											{
												"assignments": [
													1864
												],
												"declarations": [
													{
														"constant": false,
														"id": 1864,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "2606:34:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 1863,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1862,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "2606:18:8"
															},
															"referencedDeclaration": 1264,
															"src": "2606:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"arguments": [
														{
															"id": 1866,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "2662:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1865,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "2643:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2643:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2606:64:8"
											},
											{
												"assignments": [
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "updates",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "2680:46:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 1872,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1871,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "2680:29:8"
																},
																"referencedDeclaration": 1021,
																"src": "2680:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 1873,
															"nodeType": "ArrayTypeName",
															"src": "2680:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1881,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2729:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1876,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1875,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "2733:29:8"
																},
																"referencedDeclaration": 1021,
																"src": "2733:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 1877,
															"nodeType": "ArrayTypeName",
															"src": "2733:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2729:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:87:8"
											},
											{
												"expression": {
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1882,
															"name": "updates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "2777:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
															}
														},
														"id": 1884,
														"indexExpression": {
															"hexValue": "30",
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2785:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2777:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"condition": {
																	"id": 1887,
																	"name": "isBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "2846:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "32",
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2858:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "2846:13:8",
																"trueExpression": {
																	"hexValue": "31",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2854:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"hexValue": "30",
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2883:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1892,
																"name": "orderId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "2905:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2933:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2962:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2954:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1894,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2954:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2997:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2989:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1898,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2989:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2989:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3023:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3048:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 1885,
																"name": "ISSListingTemplate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "2790:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
																	"typeString": "type(contract ISSListingTemplate)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UpdateType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1021,
															"src": "2790:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UpdateType_$1021_storage_ptr_$",
																"typeString": "type(struct ISSListingTemplate.UpdateType storage pointer)"
															}
														},
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"updateType",
															"structId",
															"index",
															"value",
															"addr",
															"recipient",
															"maxPrice",
															"minPrice"
														],
														"nodeType": "FunctionCall",
														"src": "2790:270:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType memory"
														}
													},
													"src": "2777:283:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory"
													}
												},
												"id": 1906,
												"nodeType": "ExpressionStatement",
												"src": "2777:283:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1912,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3101:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SSOrderPartial_$2039",
																		"typeString": "contract SSOrderPartial"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SSOrderPartial_$2039",
																		"typeString": "contract SSOrderPartial"
																	}
																],
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3093:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3093:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3093:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1914,
															"name": "updates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "3108:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
															}
														],
														"expression": {
															"id": 1907,
															"name": "listingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "3070:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1078,
														"src": "3070:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,struct ISSListingTemplate.UpdateType memory[] memory) external"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "3070:46:8"
											},
											{
												"expression": {
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1917,
																"name": "orderPendingAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "3126:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1920,
															"indexExpression": {
																"id": 1918,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "3146:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3126:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1921,
														"indexExpression": {
															"id": 1919,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "3155:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3126:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3166:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3126:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "3126:41:8"
											},
											{
												"assignments": [
													1926,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1926,
														"mutability": "mutable",
														"name": "maker",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3178:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1925,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3178:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 1937,
												"initialValue": {
													"condition": {
														"id": 1927,
														"name": "isBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "3197:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1934,
																"name": "orderId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "3281:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1932,
																"name": "listingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "3248:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																	"typeString": "contract ISSListingTemplate"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getSellOrderCore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1159,
															"src": "3248:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_uint8_$",
																"typeString": "function (uint256) view external returns (address,address,uint8)"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3248:41:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,address,uint8)"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3197:92:8",
													"trueExpression": {
														"arguments": [
															{
																"id": 1930,
																"name": "orderId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "3237:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1928,
																"name": "listingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "3205:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																	"typeString": "contract ISSListingTemplate"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getBuyOrderCore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1130,
															"src": "3205:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_uint8_$",
																"typeString": "function (uint256) view external returns (address,address,uint8)"
															}
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3205:40:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,address,uint8)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint8_$",
														"typeString": "tuple(address,address,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3177:112:8"
											},
											{
												"assignments": [
													1942
												],
												"declarations": [
													{
														"constant": false,
														"id": 1942,
														"mutability": "mutable",
														"name": "makerOrders",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3299:29:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1940,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3299:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1941,
															"nodeType": "ArrayTypeName",
															"src": "3299:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1948,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1943,
															"name": "makerActiveOrders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "3331:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$_$",
																"typeString": "mapping(address => mapping(address => uint256[] storage ref))"
															}
														},
														"id": 1945,
														"indexExpression": {
															"id": 1944,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "3349:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3331:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1947,
													"indexExpression": {
														"id": 1946,
														"name": "maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "3358:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3331:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3299:65:8"
											},
											{
												"body": {
													"id": 1984,
													"nodeType": "Block",
													"src": "3423:198:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1960,
																		"name": "makerOrders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "3441:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 1962,
																	"indexExpression": {
																		"id": 1961,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "3453:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3441:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1963,
																	"name": "orderId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "3459:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3441:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1983,
															"nodeType": "IfStatement",
															"src": "3437:174:8",
															"trueBody": {
																"id": 1982,
																"nodeType": "Block",
																"src": "3468:143:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1965,
																					"name": "makerOrders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1942,
																					"src": "3486:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 1967,
																				"indexExpression": {
																					"id": 1966,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1950,
																					"src": "3498:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3486:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1968,
																					"name": "makerOrders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1942,
																					"src": "3503:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 1973,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1969,
																							"name": "makerOrders",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1942,
																							"src": "3515:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																								"typeString": "uint256[] storage pointer"
																							}
																						},
																						"id": 1970,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "3515:18:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1971,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3536:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3515:22:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3503:35:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3486:52:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1975,
																		"nodeType": "ExpressionStatement",
																		"src": "3486:52:8"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1976,
																					"name": "makerOrders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1942,
																					"src": "3556:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 1978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "3556:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3556:17:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1980,
																		"nodeType": "ExpressionStatement",
																		"src": "3556:17:8"
																	},
																	{
																		"id": 1981,
																		"nodeType": "Break",
																		"src": "3591:5:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1953,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "3394:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1954,
															"name": "makerOrders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "3398:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3398:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3394:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1985,
												"initializationExpression": {
													"assignments": [
														1950
													],
													"declarations": [
														{
															"constant": false,
															"id": 1950,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1985,
															"src": "3379:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1949,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3379:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1952,
													"initialValue": {
														"hexValue": "30",
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3391:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3379:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3418:3:8",
														"subExpression": {
															"id": 1957,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "3418:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1959,
													"nodeType": "ExpressionStatement",
													"src": "3418:3:8"
												},
												"nodeType": "ForStatement",
												"src": "3374:247:8"
											},
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "activeOrders",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "3630:30:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1988,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3630:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1989,
															"nodeType": "ArrayTypeName",
															"src": "3630:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1999,
												"initialValue": {
													"condition": {
														"id": 1991,
														"name": "isBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "3663:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"baseExpression": {
															"id": 1995,
															"name": "activeSellOrders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "3698:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1997,
														"indexExpression": {
															"id": 1996,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "3715:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3698:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3663:60:8",
													"trueExpression": {
														"baseExpression": {
															"id": 1992,
															"name": "activeBuyOrders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "3671:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1994,
														"indexExpression": {
															"id": 1993,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "3687:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3671:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[] storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3630:93:8"
											},
											{
												"body": {
													"id": 2035,
													"nodeType": "Block",
													"src": "3783:203:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2011,
																		"name": "activeOrders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "3801:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 2013,
																	"indexExpression": {
																		"id": 2012,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "3814:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3801:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2014,
																	"name": "orderId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "3820:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3801:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2034,
															"nodeType": "IfStatement",
															"src": "3797:179:8",
															"trueBody": {
																"id": 2033,
																"nodeType": "Block",
																"src": "3829:147:8",
																"statements": [
																	{
																		"expression": {
																			"id": 2025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2016,
																					"name": "activeOrders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1990,
																					"src": "3847:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 2018,
																				"indexExpression": {
																					"id": 2017,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2001,
																					"src": "3860:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3847:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2019,
																					"name": "activeOrders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1990,
																					"src": "3865:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 2024,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2023,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2020,
																							"name": "activeOrders",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1990,
																							"src": "3878:12:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																								"typeString": "uint256[] storage pointer"
																							}
																						},
																						"id": 2021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "3878:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2022,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3900:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3878:23:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3865:37:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3847:55:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2026,
																		"nodeType": "ExpressionStatement",
																		"src": "3847:55:8"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2027,
																					"name": "activeOrders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1990,
																					"src": "3920:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 2029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "3920:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3920:18:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2031,
																		"nodeType": "ExpressionStatement",
																		"src": "3920:18:8"
																	},
																	{
																		"id": 2032,
																		"nodeType": "Break",
																		"src": "3956:5:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2004,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "3753:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2005,
															"name": "activeOrders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "3757:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3757:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3753:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2036,
												"initializationExpression": {
													"assignments": [
														2001
													],
													"declarations": [
														{
															"constant": false,
															"id": 2001,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2036,
															"src": "3738:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2000,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3738:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2003,
													"initialValue": {
														"hexValue": "30",
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3750:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3738:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3778:3:8",
														"subExpression": {
															"id": 2008,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "3778:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2010,
													"nodeType": "ExpressionStatement",
													"src": "3778:3:8"
												},
												"nodeType": "ForStatement",
												"src": "3733:253:8"
											}
										]
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_clearOrderData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2520:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2545:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "isBuy",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2570:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2570:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:76:8"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2596:0:8"
									},
									"scope": 2039,
									"src": "2486:1506:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2040,
							"src": "729:3265:8"
						}
					],
					"src": "41:3953:8"
				},
				"id": 8
			},
			"ShockSpace/utils/SSSettlementPartial.sol": {
				"ast": {
					"absolutePath": "ShockSpace/utils/SSSettlementPartial.sol",
					"exportedSymbols": {
						"Address": [
							329
						],
						"Context": [
							351
						],
						"IERC20": [
							409
						],
						"IERC20Permit": [
							445
						],
						"ISSAgent": [
							1498
						],
						"ISSLiquidityTemplate": [
							1488
						],
						"ISSListingTemplate": [
							1264
						],
						"Ownable": [
							558
						],
						"ReentrancyGuard": [
							623
						],
						"SSMainPartial": [
							1659
						],
						"SSOrderPartial": [
							2039
						],
						"SSSettlementPartial": [
							3926
						],
						"SafeERC20": [
							999
						]
					},
					"id": 3927,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:9"
						},
						{
							"absolutePath": "ShockSpace/utils/SSOrderPartial.sol",
							"file": "./SSOrderPartial.sol",
							"id": 2042,
							"nodeType": "ImportDirective",
							"scope": 3927,
							"sourceUnit": 2040,
							"src": "2875:30:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2043,
										"name": "SSOrderPartial",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2039,
										"src": "2939:14:9"
									},
									"id": 2044,
									"nodeType": "InheritanceSpecifier",
									"src": "2939:14:9"
								}
							],
							"contractDependencies": [
								351,
								558,
								623,
								1659,
								2039
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3926,
							"linearizedBaseContracts": [
								3926,
								2039,
								1659,
								558,
								351,
								623
							],
							"name": "SSSettlementPartial",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "3091:437:9",
										"statements": [
											{
												"assignments": [
													2057
												],
												"declarations": [
													{
														"constant": false,
														"id": 2057,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "3101:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 2056,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2055,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "3101:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "3101:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2061,
												"initialValue": {
													"arguments": [
														{
															"id": 2059,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "3157:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2058,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "3138:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3138:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3101:64:9"
											},
											{
												"assignments": [
													2063,
													2065,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2063,
														"mutability": "mutable",
														"name": "xBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "3176:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3176:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2065,
														"mutability": "mutable",
														"name": "yBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "3194:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2064,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3194:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 2069,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2066,
															"name": "listingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "3218:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "listingVolumeBalancesView",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1119,
														"src": "3218:41:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () view external returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3218:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3175:86:9"
											},
											{
												"condition": {
													"id": 2070,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2050,
													"src": "3275:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2108,
													"nodeType": "Block",
													"src": "3405:117:9",
													"statements": [
														{
															"assignments": [
																2091
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2091,
																	"mutability": "mutable",
																	"name": "newX",
																	"nodeType": "VariableDeclaration",
																	"scope": 2108,
																	"src": "3419:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2090,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3419:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2095,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2092,
																	"name": "xBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "3434:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2093,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "3445:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3434:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3419:32:9"
														},
														{
															"expression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2096,
																		"name": "newX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "3472:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3479:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3472:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "30",
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3510:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "3472:39:9",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2099,
																					"name": "yBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2065,
																					"src": "3484:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31653138",
																					"id": 2100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3495:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "3484:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2102,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3483:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2103,
																		"name": "newX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "3503:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3483:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2054,
															"id": 2107,
															"nodeType": "Return",
															"src": "3465:46:9"
														}
													]
												},
												"id": 2109,
												"nodeType": "IfStatement",
												"src": "3271:251:9",
												"trueBody": {
													"id": 2089,
													"nodeType": "Block",
													"src": "3282:117:9",
													"statements": [
														{
															"assignments": [
																2072
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2072,
																	"mutability": "mutable",
																	"name": "newY",
																	"nodeType": "VariableDeclaration",
																	"scope": 2089,
																	"src": "3296:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2071,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3296:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2076,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2073,
																	"name": "yBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "3311:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2074,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "3322:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3311:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3296:32:9"
														},
														{
															"expression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2077,
																		"name": "newY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2072,
																		"src": "3349:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3356:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3349:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "30",
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3387:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "3349:39:9",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2080,
																					"name": "xBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "3361:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31653138",
																					"id": 2081,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3372:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "3361:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2083,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3360:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2084,
																		"name": "newY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2072,
																		"src": "3380:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3360:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2054,
															"id": 2088,
															"nodeType": "Return",
															"src": "3342:46:9"
														}
													]
												}
											}
										]
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeImpact",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2993:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3018:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3018:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "isBuy",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3042:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3042:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2983:75:9"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3082:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:9:9"
									},
									"scope": 3926,
									"src": "2960:568:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "3676:141:9",
										"statements": [
											{
												"expression": {
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2122,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "3686:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 2123,
															"name": "isBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "3701:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"baseExpression": {
																"id": 2127,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "3727:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 2129,
															"indexExpression": {
																"id": 2128,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2113,
																"src": "3734:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3727:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3701:41:9",
														"trueExpression": {
															"baseExpression": {
																"id": 2124,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "3709:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 2126,
															"indexExpression": {
																"id": 2125,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2113,
																"src": "3716:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3709:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3686:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "3686:56:9"
											},
											{
												"expression": {
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2133,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2120,
														"src": "3752:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 2134,
															"name": "isBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "3763:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"baseExpression": {
																"id": 2138,
																"name": "decimalsA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "3792:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																	"typeString": "mapping(address => uint8)"
																}
															},
															"id": 2140,
															"indexExpression": {
																"id": 2139,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2113,
																"src": "3802:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3792:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3763:47:9",
														"trueExpression": {
															"baseExpression": {
																"id": 2135,
																"name": "decimalsB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "3771:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																	"typeString": "mapping(address => uint8)"
																}
															},
															"id": 2137,
															"indexExpression": {
																"id": 2136,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2113,
																"src": "3781:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3771:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3752:58:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "3752:58:9"
											}
										]
									},
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAndDecimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "3573:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3573:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "isBuy",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "3598:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3598:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:51:9"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "3638:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3638:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "3660:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2119,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3637:38:9"
									},
									"scope": 3926,
									"src": "3534:283:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2267,
										"nodeType": "Block",
										"src": "4034:703:9",
										"statements": [
											{
												"assignments": [
													2162
												],
												"declarations": [
													{
														"constant": false,
														"id": 2162,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 2267,
														"src": "4044:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 2161,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2160,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "4044:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "4044:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2166,
												"initialValue": {
													"arguments": [
														{
															"id": 2164,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "4100:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2163,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "4081:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4081:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4044:64:9"
											},
											{
												"assignments": [
													2168
												],
												"declarations": [
													{
														"constant": false,
														"id": 2168,
														"mutability": "mutable",
														"name": "decimals",
														"nodeType": "VariableDeclaration",
														"scope": 2267,
														"src": "4118:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2167,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4118:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2182,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2169,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4135:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4159:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4151:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4151:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4151:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4135:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2177,
																		"name": "tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "4176:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2176,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "4169:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$409_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4169:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$409",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "4169:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 2180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4169:31:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4135:65:9",
													"trueExpression": {
														"hexValue": "3138",
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4164:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4118:82:9"
											},
											{
												"assignments": [
													2184
												],
												"declarations": [
													{
														"constant": false,
														"id": 2184,
														"mutability": "mutable",
														"name": "preBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2267,
														"src": "4210:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2183,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4210:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2206,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2185,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4231:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4255:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4247:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4247:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4247:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4231:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2202,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4323:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																			"typeString": "contract SSSettlementPartial"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																			"typeString": "contract SSSettlementPartial"
																		}
																	],
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4315:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2200,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4315:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4315:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2197,
																		"name": "tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "4291:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2196,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "4284:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$409_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4284:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$409",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 370,
															"src": "4284:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4284:45:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4231:98:9",
													"trueExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2193,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4268:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																		"typeString": "contract SSSettlementPartial"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																		"typeString": "contract SSSettlementPartial"
																	}
																],
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4260:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4260:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4260:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "4260:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4210:119:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2212,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4372:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																		"typeString": "contract SSSettlementPartial"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																		"typeString": "contract SSSettlementPartial"
																	}
																],
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4364:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2210,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4364:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4364:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2214,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4379:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2215,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "4393:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2216,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "4401:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2207,
															"name": "listingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "4339:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"id": 2209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transact",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1098,
														"src": "4339:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,address,uint256,address) external"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4339:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "4339:72:9"
											},
											{
												"assignments": [
													2220
												],
												"declarations": [
													{
														"constant": false,
														"id": 2220,
														"mutability": "mutable",
														"name": "postBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2267,
														"src": "4421:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4421:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2242,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2221,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "4443:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4467:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4459:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2222,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4459:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4459:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4443:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2238,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4535:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																			"typeString": "contract SSSettlementPartial"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																			"typeString": "contract SSSettlementPartial"
																		}
																	],
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4527:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2236,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4527:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4527:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2233,
																		"name": "tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "4503:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2232,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "4496:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$409_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4496:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$409",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 370,
															"src": "4496:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4496:45:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4443:98:9",
													"trueExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2229,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4480:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																		"typeString": "contract SSSettlementPartial"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																		"typeString": "contract SSSettlementPartial"
																	}
																],
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4472:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2227,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4472:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4472:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "4472:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4421:120:9"
											},
											{
												"expression": {
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2243,
														"name": "amountReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "4551:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2244,
																"name": "postBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "4568:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2245,
																"name": "preBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "4582:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4568:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "30",
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4622:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4568:55:9",
														"trueExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2247,
																"name": "postBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "4595:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2248,
																"name": "preBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "4609:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4595:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4551:72:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2253,
												"nodeType": "ExpressionStatement",
												"src": "4551:72:9"
											},
											{
												"expression": {
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2254,
														"name": "normalizedReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "4633:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2255,
																"name": "amountReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "4654:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4671:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4654:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "30",
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4729:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4654:76:9",
														"trueExpression": {
															"arguments": [
																{
																	"id": 2260,
																	"name": "amountReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "4701:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2261,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "4717:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 2258,
																	"name": "listingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "4675:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																		"typeString": "contract ISSListingTemplate"
																	}
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "normalize",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1249,
																"src": "4675:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint8) pure external returns (uint256)"
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:51:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4633:97:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "4633:97:9"
											}
										]
									},
									"id": 2268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeTransaction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3861:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3861:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3886:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3886:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3916:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3916:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3940:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3940:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3851:112:9"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "amountReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "3982:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "normalizedReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "4006:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:52:9"
									},
									"scope": 3926,
									"src": "3823:914:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "5032:789:9",
										"statements": [
											{
												"assignments": [
													2294
												],
												"declarations": [
													{
														"constant": false,
														"id": 2294,
														"mutability": "mutable",
														"name": "updates",
														"nodeType": "VariableDeclaration",
														"scope": 2357,
														"src": "5042:46:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 2292,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2291,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "5042:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "5042:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 2293,
															"nodeType": "ArrayTypeName",
															"src": "5042:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2301,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5127:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5091:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2296,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2295,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "5095:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "5095:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 2297,
															"nodeType": "ArrayTypeName",
															"src": "5095:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														}
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5042:87:9"
											},
											{
												"expression": {
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2302,
															"name": "updates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "5139:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
															}
														},
														"id": 2304,
														"indexExpression": {
															"hexValue": "30",
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5147:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5139:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"condition": {
																	"id": 2307,
																	"name": "isBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "5208:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "32",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5220:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5208:13:9",
																"trueExpression": {
																	"hexValue": "31",
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5216:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"hexValue": "32",
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5245:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"id": 2312,
																"name": "orderId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "5267:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2313,
																"name": "normalizedReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "5295:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5341:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5333:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2314,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5333:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5333:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5376:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5368:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2318,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5368:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5368:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5402:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5427:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 2305,
																"name": "ISSListingTemplate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "5152:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
																	"typeString": "type(contract ISSListingTemplate)"
																}
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UpdateType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1021,
															"src": "5152:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UpdateType_$1021_storage_ptr_$",
																"typeString": "type(struct ISSListingTemplate.UpdateType storage pointer)"
															}
														},
														"id": 2324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"updateType",
															"structId",
															"index",
															"value",
															"addr",
															"recipient",
															"maxPrice",
															"minPrice"
														],
														"nodeType": "FunctionCall",
														"src": "5152:287:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType memory"
														}
													},
													"src": "5139:300:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory"
													}
												},
												"id": 2326,
												"nodeType": "ExpressionStatement",
												"src": "5139:300:9"
											},
											{
												"expression": {
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2327,
															"name": "updates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "5449:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
															}
														},
														"id": 2329,
														"indexExpression": {
															"hexValue": "31",
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5457:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5449:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"condition": {
																	"id": 2332,
																	"name": "isBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "5518:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "32",
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5530:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5518:13:9",
																"trueExpression": {
																	"hexValue": "31",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5526:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"hexValue": "30",
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5555:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 2337,
																"name": "orderId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "5577:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2338,
																			"name": "status",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "5605:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5615:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5605:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2341,
																			"name": "normalizedReceived",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2272,
																			"src": "5620:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2342,
																			"name": "pendingAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2282,
																			"src": "5642:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5620:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5605:50:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "32",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5662:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5605:58:9",
																"trueExpression": {
																	"hexValue": "33",
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5658:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 2348,
																"name": "makerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "5683:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2349,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "5720:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5753:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5778:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 2330,
																"name": "ISSListingTemplate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "5462:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
																	"typeString": "type(contract ISSListingTemplate)"
																}
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "UpdateType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1021,
															"src": "5462:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UpdateType_$1021_storage_ptr_$",
																"typeString": "type(struct ISSListingTemplate.UpdateType storage pointer)"
															}
														},
														"id": 2352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"updateType",
															"structId",
															"index",
															"value",
															"addr",
															"recipient",
															"maxPrice",
															"minPrice"
														],
														"nodeType": "FunctionCall",
														"src": "5462:328:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType memory"
														}
													},
													"src": "5449:341:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory"
													}
												},
												"id": 2354,
												"nodeType": "ExpressionStatement",
												"src": "5449:341:9"
											},
											{
												"expression": {
													"id": 2355,
													"name": "updates",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2294,
													"src": "5807:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"functionReturnParameters": 2288,
												"id": 2356,
												"nodeType": "Return",
												"src": "5800:14:9"
											}
										]
									},
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createOrderUpdates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "4781:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "normalizedReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "4806:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "makerAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "4842:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "4872:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4872:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "4899:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2277,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4899:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "isBuy",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "4921:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4921:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "pendingAmount",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "4941:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4941:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4771:197:9"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "4992:38:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.UpdateType[]"
												},
												"typeName": {
													"baseType": {
														"id": 2285,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2284,
															"name": "ISSListingTemplate.UpdateType",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1021,
															"src": "4992:29:9"
														},
														"referencedDeclaration": 1021,
														"src": "4992:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType"
														}
													},
													"id": 2286,
													"nodeType": "ArrayTypeName",
													"src": "4992:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:40:9"
									},
									"scope": 3926,
									"src": "4743:1078:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2418,
										"nodeType": "Block",
										"src": "6161:349:9",
										"statements": [
											{
												"assignments": [
													2383
												],
												"declarations": [
													{
														"constant": false,
														"id": 2383,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 2418,
														"src": "6171:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 2382,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2381,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "6171:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "6171:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2387,
												"initialValue": {
													"arguments": [
														{
															"id": 2385,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "6227:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2384,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "6208:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6208:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6171:64:9"
											},
											{
												"expression": {
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2388,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "6246:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2389,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "6260:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 2390,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6245:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,uint8)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2392,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "6293:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "74727565",
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6302:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2391,
															"name": "_getTokenAndDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "6272:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$returns$_t_address_$_t_uint8_$",
																"typeString": "function (address,bool) view returns (address,uint8)"
															}
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6272:35:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,uint8)"
														}
													},
													"src": "6245:62:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2396,
												"nodeType": "ExpressionStatement",
												"src": "6245:62:9"
											},
											{
												"expression": {
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2397,
																"name": "makerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "6318:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2398,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "6332:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2399,
																"name": "status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "6343:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 2400,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6317:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,address,uint8)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2403,
																"name": "orderId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2362,
																"src": "6385:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2401,
																"name": "listingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2383,
																"src": "6353:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																	"typeString": "contract ISSListingTemplate"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getBuyOrderCore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1130,
															"src": "6353:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_uint8_$",
																"typeString": "function (uint256) view external returns (address,address,uint8)"
															}
														},
														"id": 2404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6353:40:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,address,uint8)"
														}
													},
													"src": "6317:76:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "6317:76:9"
											},
											{
												"expression": {
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2407,
																"name": "amountReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "6404:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2408,
																"name": "normalizedReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2379,
																"src": "6420:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2409,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6403:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2411,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "6462:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2412,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "6471:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2413,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2364,
																"src": "6485:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2414,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "6493:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2410,
															"name": "_executeTransaction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "6442:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,address,uint256,address) returns (uint256,uint256)"
															}
														},
														"id": 2415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6442:61:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "6403:100:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "6403:100:9"
											}
										]
									},
									"id": 2419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_prepBuyOrderUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "5865:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5865:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "5890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5890:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "5915:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5855:80:9"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "5963:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5963:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "5993:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2368,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5993:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "makerAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "6017:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "6047:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "6074:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2374,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6074:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "amountReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "6096:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "normalizedReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "6128:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6128:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5953:207:9"
									},
									"scope": 3926,
									"src": "5827:683:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2479,
										"nodeType": "Block",
										"src": "6851:351:9",
										"statements": [
											{
												"assignments": [
													2444
												],
												"declarations": [
													{
														"constant": false,
														"id": 2444,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 2479,
														"src": "6861:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 2443,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2442,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "6861:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "6861:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2448,
												"initialValue": {
													"arguments": [
														{
															"id": 2446,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "6917:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2445,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "6898:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6861:64:9"
											},
											{
												"expression": {
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2449,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "6936:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2450,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "6950:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 2451,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6935:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,uint8)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2453,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2421,
																"src": "6983:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6992:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2452,
															"name": "_getTokenAndDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "6962:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$returns$_t_address_$_t_uint8_$",
																"typeString": "function (address,bool) view returns (address,uint8)"
															}
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6962:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,uint8)"
														}
													},
													"src": "6935:63:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2457,
												"nodeType": "ExpressionStatement",
												"src": "6935:63:9"
											},
											{
												"expression": {
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2458,
																"name": "makerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "7009:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2459,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2434,
																"src": "7023:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2460,
																"name": "status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2436,
																"src": "7034:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 2461,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7008:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,address,uint8)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2464,
																"name": "orderId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2423,
																"src": "7077:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2462,
																"name": "listingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2444,
																"src": "7044:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																	"typeString": "contract ISSListingTemplate"
																}
															},
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getSellOrderCore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1159,
															"src": "7044:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_uint8_$",
																"typeString": "function (uint256) view external returns (address,address,uint8)"
															}
														},
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7044:41:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint8_$",
															"typeString": "tuple(address,address,uint8)"
														}
													},
													"src": "7008:77:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2467,
												"nodeType": "ExpressionStatement",
												"src": "7008:77:9"
											},
											{
												"expression": {
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2468,
																"name": "amountReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "7096:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2469,
																"name": "normalizedReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2440,
																"src": "7112:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2470,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7095:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2472,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2421,
																"src": "7154:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2473,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "7163:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2474,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2425,
																"src": "7177:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2475,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2434,
																"src": "7185:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2471,
															"name": "_executeTransaction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "7134:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,address,uint256,address) returns (uint256,uint256)"
															}
														},
														"id": 2476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7134:61:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "7095:100:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2478,
												"nodeType": "ExpressionStatement",
												"src": "7095:100:9"
											}
										]
									},
									"id": 2480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_prepSellOrderUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6555:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6580:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6580:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6605:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6545:80:9"
									},
									"returnParameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6653:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6653:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6683:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2429,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6683:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "makerAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6707:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6707:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6737:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6737:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6764:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2435,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6764:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "amountReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6786:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6786:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "normalizedReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "6818:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6818:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6643:207:9"
									},
									"scope": 3926,
									"src": "6516:686:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "7469:534:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2499,
														"name": "normalizedReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "7483:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7505:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7483:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2510,
												"nodeType": "IfStatement",
												"src": "7479:99:9",
												"trueBody": {
													"id": 2509,
													"nodeType": "Block",
													"src": "7508:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7565:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "7529:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2503,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 2502,
																				"name": "ISSListingTemplate.UpdateType",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1021,
																				"src": "7533:29:9"
																			},
																			"referencedDeclaration": 1021,
																			"src": "7533:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																				"typeString": "struct ISSListingTemplate.UpdateType"
																			}
																		},
																		"id": 2504,
																		"nodeType": "ArrayTypeName",
																		"src": "7533:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType[]"
																		}
																	}
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7529:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																}
															},
															"functionReturnParameters": 2498,
															"id": 2508,
															"nodeType": "Return",
															"src": "7522:45:9"
														}
													]
												}
											},
											{
												"assignments": [
													2512
												],
												"declarations": [
													{
														"constant": false,
														"id": 2512,
														"mutability": "mutable",
														"name": "pendingAmount",
														"nodeType": "VariableDeclaration",
														"scope": 2545,
														"src": "7587:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2511,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7587:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2518,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2513,
															"name": "orderPendingAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "7611:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 2515,
														"indexExpression": {
															"id": 2514,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "7631:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7611:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2517,
													"indexExpression": {
														"id": 2516,
														"name": "orderId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2484,
														"src": "7640:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7611:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7587:61:9"
											},
											{
												"assignments": [
													2524
												],
												"declarations": [
													{
														"constant": false,
														"id": 2524,
														"mutability": "mutable",
														"name": "updates",
														"nodeType": "VariableDeclaration",
														"scope": 2545,
														"src": "7658:46:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 2522,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2521,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "7658:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "7658:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 2523,
															"nodeType": "ArrayTypeName",
															"src": "7658:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2534,
												"initialValue": {
													"arguments": [
														{
															"id": 2526,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2484,
															"src": "7740:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2527,
															"name": "normalizedReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2486,
															"src": "7761:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2528,
															"name": "makerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "7793:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2529,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "7819:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2530,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "7842:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7862:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2532,
															"name": "pendingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "7880:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2525,
														"name": "_createOrderUpdates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "7707:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint8_$_t_bool_$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address,address,uint8,bool,uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7707:196:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7658:245:9"
											},
											{
												"expression": {
													"id": 2541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2535,
																"name": "orderPendingAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "7913:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2538,
															"indexExpression": {
																"id": 2536,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2482,
																"src": "7933:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7913:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2539,
														"indexExpression": {
															"id": 2537,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2484,
															"src": "7942:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7913:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2540,
														"name": "normalizedReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "7954:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7913:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2542,
												"nodeType": "ExpressionStatement",
												"src": "7913:59:9"
											},
											{
												"expression": {
													"id": 2543,
													"name": "updates",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2524,
													"src": "7989:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"functionReturnParameters": 2498,
												"id": 2544,
												"nodeType": "Return",
												"src": "7982:14:9"
											}
										]
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeBuyOrderUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7249:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7249:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7274:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7274:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "normalizedReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7299:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "makerAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7335:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7335:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7365:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7365:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7392:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2491,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7392:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:171:9"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7429:38:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.UpdateType[]"
												},
												"typeName": {
													"baseType": {
														"id": 2495,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2494,
															"name": "ISSListingTemplate.UpdateType",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1021,
															"src": "7429:29:9"
														},
														"referencedDeclaration": 1021,
														"src": "7429:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType"
														}
													},
													"id": 2496,
													"nodeType": "ArrayTypeName",
													"src": "7429:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7428:40:9"
									},
									"scope": 3926,
									"src": "7208:795:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "8271:535:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2565,
														"name": "normalizedReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2552,
														"src": "8285:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8307:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8285:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2576,
												"nodeType": "IfStatement",
												"src": "8281:99:9",
												"trueBody": {
													"id": 2575,
													"nodeType": "Block",
													"src": "8310:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8367:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "8331:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2569,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 2568,
																				"name": "ISSListingTemplate.UpdateType",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1021,
																				"src": "8335:29:9"
																			},
																			"referencedDeclaration": 1021,
																			"src": "8335:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																				"typeString": "struct ISSListingTemplate.UpdateType"
																			}
																		},
																		"id": 2570,
																		"nodeType": "ArrayTypeName",
																		"src": "8335:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType[]"
																		}
																	}
																},
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8331:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																}
															},
															"functionReturnParameters": 2564,
															"id": 2574,
															"nodeType": "Return",
															"src": "8324:45:9"
														}
													]
												}
											},
											{
												"assignments": [
													2578
												],
												"declarations": [
													{
														"constant": false,
														"id": 2578,
														"mutability": "mutable",
														"name": "pendingAmount",
														"nodeType": "VariableDeclaration",
														"scope": 2611,
														"src": "8389:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8389:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2584,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2579,
															"name": "orderPendingAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "8413:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 2581,
														"indexExpression": {
															"id": 2580,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2548,
															"src": "8433:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8413:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2583,
													"indexExpression": {
														"id": 2582,
														"name": "orderId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2550,
														"src": "8442:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8413:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8389:61:9"
											},
											{
												"assignments": [
													2590
												],
												"declarations": [
													{
														"constant": false,
														"id": 2590,
														"mutability": "mutable",
														"name": "updates",
														"nodeType": "VariableDeclaration",
														"scope": 2611,
														"src": "8460:46:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 2588,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2587,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "8460:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "8460:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 2589,
															"nodeType": "ArrayTypeName",
															"src": "8460:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2600,
												"initialValue": {
													"arguments": [
														{
															"id": 2592,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2550,
															"src": "8542:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2593,
															"name": "normalizedReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2552,
															"src": "8563:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2594,
															"name": "makerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "8595:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2595,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2556,
															"src": "8621:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2596,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "8644:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8664:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"id": 2598,
															"name": "pendingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "8683:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2591,
														"name": "_createOrderUpdates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "8509:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint8_$_t_bool_$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address,address,uint8,bool,uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8509:197:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8460:246:9"
											},
											{
												"expression": {
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2601,
																"name": "orderPendingAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "8716:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2604,
															"indexExpression": {
																"id": 2602,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2548,
																"src": "8736:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8716:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2605,
														"indexExpression": {
															"id": 2603,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2550,
															"src": "8745:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8716:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2606,
														"name": "normalizedReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2552,
														"src": "8757:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8716:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2608,
												"nodeType": "ExpressionStatement",
												"src": "8716:59:9"
											},
											{
												"expression": {
													"id": 2609,
													"name": "updates",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2590,
													"src": "8792:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"functionReturnParameters": 2564,
												"id": 2610,
												"nodeType": "Return",
												"src": "8785:14:9"
											}
										]
									},
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeSellOrderUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8051:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8051:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8076:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8076:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "normalizedReceived",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8101:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8101:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "makerAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8137:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8167:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8167:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "status",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8194:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2557,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8194:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8041:171:9"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8231:38:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.UpdateType[]"
												},
												"typeName": {
													"baseType": {
														"id": 2561,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2560,
															"name": "ISSListingTemplate.UpdateType",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1021,
															"src": "8231:29:9"
														},
														"referencedDeclaration": 1021,
														"src": "8231:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType"
														}
													},
													"id": 2562,
													"nodeType": "ArrayTypeName",
													"src": "8231:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8230:40:9"
									},
									"scope": 3926,
									"src": "8009:797:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2684,
										"nodeType": "Block",
										"src": "9003:517:9",
										"statements": [
											{
												"assignments": [
													2629
												],
												"declarations": [
													{
														"constant": false,
														"id": 2629,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 2684,
														"src": "9013:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 2628,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2627,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "9013:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "9013:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2633,
												"initialValue": {
													"arguments": [
														{
															"id": 2631,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "9069:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2630,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "9050:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9050:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9013:64:9"
											},
											{
												"assignments": [
													2639
												],
												"declarations": [
													{
														"constant": false,
														"id": 2639,
														"mutability": "mutable",
														"name": "payoutUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 2684,
														"src": "9087:54:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
														},
														"typeName": {
															"baseType": {
																"id": 2637,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2636,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "9087:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "9087:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 2638,
															"nodeType": "ArrayTypeName",
															"src": "9087:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2646,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9182:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9144:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2641,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2640,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "9148:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "9148:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 2642,
															"nodeType": "ArrayTypeName",
															"src": "9148:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														}
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9144:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9087:97:9"
											},
											{
												"expression": {
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2647,
															"name": "payoutUpdates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2639,
															"src": "9194:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
															}
														},
														"id": 2649,
														"indexExpression": {
															"hexValue": "30",
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9208:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9194:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"condition": {
																	"id": 2652,
																	"name": "isLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2620,
																	"src": "9271:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9284:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9271:14:9",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9280:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9318:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9310:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2656,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9310:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9310:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2660,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "9344:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2650,
																"name": "ISSListingTemplate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "9213:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
																	"typeString": "type(contract ISSListingTemplate)"
																}
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "PayoutUpdate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1028,
															"src": "9213:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PayoutUpdate_$1028_storage_ptr_$",
																"typeString": "type(struct ISSListingTemplate.PayoutUpdate storage pointer)"
															}
														},
														"id": 2661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"payoutType",
															"recipient",
															"required"
														],
														"nodeType": "FunctionCall",
														"src": "9213:148:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
														}
													},
													"src": "9194:167:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
													}
												},
												"id": 2663,
												"nodeType": "ExpressionStatement",
												"src": "9194:167:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2669,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9404:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																		"typeString": "contract SSSettlementPartial"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																		"typeString": "contract SSSettlementPartial"
																	}
																],
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9396:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9396:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9396:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2671,
															"name": "payoutUpdates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2639,
															"src": "9411:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
															}
														],
														"expression": {
															"id": 2664,
															"name": "listingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2629,
															"src": "9371:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"id": 2666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ssUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "9371:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,struct ISSListingTemplate.PayoutUpdate memory[] memory) external"
														}
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9371:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2673,
												"nodeType": "ExpressionStatement",
												"src": "9371:54:9"
											},
											{
												"expression": {
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2674,
																"name": "payoutPendingAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "9435:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2677,
															"indexExpression": {
																"id": 2675,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2614,
																"src": "9456:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9435:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2678,
														"indexExpression": {
															"id": 2676,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "9465:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9435:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2679,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2618,
														"src": "9477:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9435:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "9435:48:9"
											},
											{
												"expression": {
													"id": 2682,
													"name": "payoutUpdates",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2639,
													"src": "9500:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
													}
												},
												"functionReturnParameters": 2626,
												"id": 2683,
												"nodeType": "Return",
												"src": "9493:20:9"
											}
										]
									},
									"id": 2685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPayoutUpdate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "8851:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8851:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "8876:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8876:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "8901:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8901:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "isLong",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "8925:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8925:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8841:101:9"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "8961:40:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
												},
												"typeName": {
													"baseType": {
														"id": 2623,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2622,
															"name": "ISSListingTemplate.PayoutUpdate",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1028,
															"src": "8961:31:9"
														},
														"referencedDeclaration": 1028,
														"src": "8961:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate"
														}
													},
													"id": 2624,
													"nodeType": "ArrayTypeName",
													"src": "8961:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8960:42:9"
									},
									"scope": 3926,
									"src": "8812:708:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2818,
										"nodeType": "Block",
										"src": "9687:1211:9",
										"statements": [
											{
												"assignments": [
													2700
												],
												"declarations": [
													{
														"constant": false,
														"id": 2700,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "9697:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 2699,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2698,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "9697:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "9697:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2704,
												"initialValue": {
													"arguments": [
														{
															"id": 2702,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "9753:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2701,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "9734:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9734:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9697:64:9"
											},
											{
												"id": 2788,
												"nodeType": "Block",
												"src": "9771:714:9",
												"statements": [
													{
														"assignments": [
															2706
														],
														"declarations": [
															{
																"constant": false,
																"id": 2706,
																"mutability": "mutable",
																"name": "maxPrice",
																"nodeType": "VariableDeclaration",
																"scope": 2788,
																"src": "9785:16:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2705,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9785:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2707,
														"nodeType": "VariableDeclarationStatement",
														"src": "9785:16:9"
													},
													{
														"assignments": [
															2709
														],
														"declarations": [
															{
																"constant": false,
																"id": 2709,
																"mutability": "mutable",
																"name": "minPrice",
																"nodeType": "VariableDeclaration",
																"scope": 2788,
																"src": "9815:16:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2708,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9815:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2710,
														"nodeType": "VariableDeclarationStatement",
														"src": "9815:16:9"
													},
													{
														"expression": {
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"components": [
																	{
																		"id": 2711,
																		"name": "maxPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2706,
																		"src": "9846:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2712,
																		"name": "minPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2709,
																		"src": "9856:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2713,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "TupleExpression",
																"src": "9845:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2716,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "9903:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2714,
																		"name": "listingContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2700,
																		"src": "9868:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																			"typeString": "contract ISSListingTemplate"
																		}
																	},
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getBuyOrderPricing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1139,
																	"src": "9868:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view external returns (uint256,uint256)"
																	}
																},
																"id": 2717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9868:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"src": "9845:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2719,
														"nodeType": "ExpressionStatement",
														"src": "9845:66:9"
													},
													{
														"assignments": [
															2721
														],
														"declarations": [
															{
																"constant": false,
																"id": 2721,
																"mutability": "mutable",
																"name": "pending",
																"nodeType": "VariableDeclaration",
																"scope": 2788,
																"src": "9925:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9925:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2722,
														"nodeType": "VariableDeclarationStatement",
														"src": "9925:15:9"
													},
													{
														"expression": {
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"components": [
																	{
																		"id": 2723,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2721,
																		"src": "9955:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	null
																],
																"id": 2724,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "TupleExpression",
																"src": "9954:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$__$",
																	"typeString": "tuple(uint256,)"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2727,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "10003:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2725,
																		"name": "listingContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2700,
																		"src": "9968:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																			"typeString": "contract ISSListingTemplate"
																		}
																	},
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getBuyOrderAmounts",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1148,
																	"src": "9968:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view external returns (uint256,uint256)"
																	}
																},
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9968:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"src": "9954:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2730,
														"nodeType": "ExpressionStatement",
														"src": "9954:57:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2731,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2721,
																	"src": "10029:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10040:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10029:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2734,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2691,
																	"src": "10045:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10055:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10045:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10029:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2746,
														"nodeType": "IfStatement",
														"src": "10025:111:9",
														"trueBody": {
															"id": 2745,
															"nodeType": "Block",
															"src": "10058:78:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10119:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "10083:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
																			},
																			"typeName": {
																				"baseType": {
																					"id": 2739,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2738,
																						"name": "ISSListingTemplate.UpdateType",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1021,
																						"src": "10087:29:9"
																					},
																					"referencedDeclaration": 1021,
																					"src": "10087:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																						"typeString": "struct ISSListingTemplate.UpdateType"
																					}
																				},
																				"id": 2740,
																				"nodeType": "ArrayTypeName",
																				"src": "10087:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																					"typeString": "struct ISSListingTemplate.UpdateType[]"
																				}
																			}
																		},
																		"id": 2743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:38:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	},
																	"functionReturnParameters": 2697,
																	"id": 2744,
																	"nodeType": "Return",
																	"src": "10076:45:9"
																}
															]
														}
													},
													{
														"assignments": [
															2748,
															2750,
															null,
															null
														],
														"declarations": [
															{
																"constant": false,
																"id": 2748,
																"mutability": "mutable",
																"name": "xBalance",
																"nodeType": "VariableDeclaration",
																"scope": 2788,
																"src": "10150:16:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2747,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10150:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 2750,
																"mutability": "mutable",
																"name": "yBalance",
																"nodeType": "VariableDeclaration",
																"scope": 2788,
																"src": "10168:16:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2749,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10168:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															null,
															null
														],
														"id": 2754,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2751,
																	"name": "listingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "10192:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																		"typeString": "contract ISSListingTemplate"
																	}
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "listingVolumeBalancesView",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1119,
																"src": "10192:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "function () view external returns (uint256,uint256,uint256,uint256)"
																}
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10192:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256,uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10149:86:9"
													},
													{
														"assignments": [
															2756
														],
														"declarations": [
															{
																"constant": false,
																"id": 2756,
																"mutability": "mutable",
																"name": "impactPrice",
																"nodeType": "VariableDeclaration",
																"scope": 2788,
																"src": "10249:19:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2755,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10249:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2771,
														"initialValue": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2757,
																	"name": "yBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2750,
																	"src": "10271:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10271:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "30",
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10328:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "10271:58:9",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2760,
																				"name": "xBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2748,
																				"src": "10287:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 2761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10298:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "10287:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2763,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10286:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2764,
																				"name": "yBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2750,
																				"src": "10307:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2765,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2691,
																				"src": "10318:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10307:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2767,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10306:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10286:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10249:80:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2772,
																	"name": "impactPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2756,
																	"src": "10347:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2773,
																	"name": "maxPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "10361:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10347:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2775,
																	"name": "impactPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2756,
																	"src": "10373:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2776,
																	"name": "minPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2709,
																	"src": "10387:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10373:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10347:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2787,
														"nodeType": "IfStatement",
														"src": "10343:132:9",
														"trueBody": {
															"id": 2786,
															"nodeType": "Block",
															"src": "10397:78:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10458:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "10422:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
																			},
																			"typeName": {
																				"baseType": {
																					"id": 2780,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2779,
																						"name": "ISSListingTemplate.UpdateType",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1021,
																						"src": "10426:29:9"
																					},
																					"referencedDeclaration": 1021,
																					"src": "10426:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																						"typeString": "struct ISSListingTemplate.UpdateType"
																					}
																				},
																				"id": 2781,
																				"nodeType": "ArrayTypeName",
																				"src": "10426:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																					"typeString": "struct ISSListingTemplate.UpdateType[]"
																				}
																			}
																		},
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10422:38:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	},
																	"functionReturnParameters": 2697,
																	"id": 2785,
																	"nodeType": "Return",
																	"src": "10415:45:9"
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													2790,
													2792,
													2794,
													2796,
													2798,
													2800,
													2802
												],
												"declarations": [
													{
														"constant": false,
														"id": 2790,
														"mutability": "mutable",
														"name": "tokenAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "10508:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2789,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10508:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2792,
														"mutability": "mutable",
														"name": "decimals",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "10542:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2791,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "10542:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2794,
														"mutability": "mutable",
														"name": "makerAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "10570:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2793,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10570:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2796,
														"mutability": "mutable",
														"name": "recipient",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "10604:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2795,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10604:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2798,
														"mutability": "mutable",
														"name": "status",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "10635:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2797,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "10635:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2800,
														"mutability": "mutable",
														"name": "amountReceived",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "10661:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2799,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10661:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2802,
														"mutability": "mutable",
														"name": "normalizedReceived",
														"nodeType": "VariableDeclaration",
														"scope": 2818,
														"src": "10697:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2801,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10697:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2808,
												"initialValue": {
													"arguments": [
														{
															"id": 2804,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "10756:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2805,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "10765:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2806,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2691,
															"src": "10774:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2803,
														"name": "_prepBuyOrderUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "10736:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint8_$_t_address_$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) returns (address,uint8,address,address,uint8,uint256,uint256)"
														}
													},
													"id": 2807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10736:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint8_$_t_address_$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint8,address,address,uint8,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10494:287:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2810,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "10821:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2811,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "10830:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2812,
															"name": "normalizedReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "10839:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2813,
															"name": "makerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "10859:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2814,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2796,
															"src": "10873:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2815,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2798,
															"src": "10884:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2809,
														"name": "_executeBuyOrderUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "10798:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint8_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address,uint256,uint256,address,address,uint8) returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														}
													},
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10798:93:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"functionReturnParameters": 2697,
												"id": 2817,
												"nodeType": "Return",
												"src": "10791:100:9"
											}
										]
									},
									"functionSelector": "7601f9fe",
									"id": 2819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeBuyOrder",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "9560:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9560:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "9585:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9585:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "9610:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9550:80:9"
									},
									"returnParameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2819,
												"src": "9647:38:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.UpdateType[]"
												},
												"typeName": {
													"baseType": {
														"id": 2694,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2693,
															"name": "ISSListingTemplate.UpdateType",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1021,
															"src": "9647:29:9"
														},
														"referencedDeclaration": 1021,
														"src": "9647:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType"
														}
													},
													"id": 2695,
													"nodeType": "ArrayTypeName",
													"src": "9647:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9646:40:9"
									},
									"scope": 3926,
									"src": "9526:1372:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2952,
										"nodeType": "Block",
										"src": "11066:1215:9",
										"statements": [
											{
												"assignments": [
													2834
												],
												"declarations": [
													{
														"constant": false,
														"id": 2834,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "11076:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 2833,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2832,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "11076:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "11076:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2838,
												"initialValue": {
													"arguments": [
														{
															"id": 2836,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "11132:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2835,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "11113:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11113:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11076:64:9"
											},
											{
												"id": 2922,
												"nodeType": "Block",
												"src": "11150:716:9",
												"statements": [
													{
														"assignments": [
															2840
														],
														"declarations": [
															{
																"constant": false,
																"id": 2840,
																"mutability": "mutable",
																"name": "maxPrice",
																"nodeType": "VariableDeclaration",
																"scope": 2922,
																"src": "11164:16:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2839,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11164:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2841,
														"nodeType": "VariableDeclarationStatement",
														"src": "11164:16:9"
													},
													{
														"assignments": [
															2843
														],
														"declarations": [
															{
																"constant": false,
																"id": 2843,
																"mutability": "mutable",
																"name": "minPrice",
																"nodeType": "VariableDeclaration",
																"scope": 2922,
																"src": "11194:16:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2842,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11194:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2844,
														"nodeType": "VariableDeclarationStatement",
														"src": "11194:16:9"
													},
													{
														"expression": {
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"components": [
																	{
																		"id": 2845,
																		"name": "maxPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "11225:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2846,
																		"name": "minPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2843,
																		"src": "11235:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2847,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "TupleExpression",
																"src": "11224:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2850,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2823,
																		"src": "11283:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2848,
																		"name": "listingContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "11247:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																			"typeString": "contract ISSListingTemplate"
																		}
																	},
																	"id": 2849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getSellOrderPricing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1168,
																	"src": "11247:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view external returns (uint256,uint256)"
																	}
																},
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11247:44:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"src": "11224:67:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2853,
														"nodeType": "ExpressionStatement",
														"src": "11224:67:9"
													},
													{
														"assignments": [
															2855
														],
														"declarations": [
															{
																"constant": false,
																"id": 2855,
																"mutability": "mutable",
																"name": "pending",
																"nodeType": "VariableDeclaration",
																"scope": 2922,
																"src": "11305:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2854,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11305:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2856,
														"nodeType": "VariableDeclarationStatement",
														"src": "11305:15:9"
													},
													{
														"expression": {
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"components": [
																	{
																		"id": 2857,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2855,
																		"src": "11335:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	null
																],
																"id": 2858,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "TupleExpression",
																"src": "11334:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$__$",
																	"typeString": "tuple(uint256,)"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2861,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2823,
																		"src": "11384:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2859,
																		"name": "listingContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "11348:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																			"typeString": "contract ISSListingTemplate"
																		}
																	},
																	"id": 2860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getSellOrderAmounts",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1177,
																	"src": "11348:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view external returns (uint256,uint256)"
																	}
																},
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11348:44:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"src": "11334:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2864,
														"nodeType": "ExpressionStatement",
														"src": "11334:58:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2865,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2855,
																	"src": "11410:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11421:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11410:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2868,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2825,
																	"src": "11426:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11436:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11426:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11410:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2880,
														"nodeType": "IfStatement",
														"src": "11406:111:9",
														"trueBody": {
															"id": 2879,
															"nodeType": "Block",
															"src": "11439:78:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11500:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "11464:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
																			},
																			"typeName": {
																				"baseType": {
																					"id": 2873,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2872,
																						"name": "ISSListingTemplate.UpdateType",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1021,
																						"src": "11468:29:9"
																					},
																					"referencedDeclaration": 1021,
																					"src": "11468:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																						"typeString": "struct ISSListingTemplate.UpdateType"
																					}
																				},
																				"id": 2874,
																				"nodeType": "ArrayTypeName",
																				"src": "11468:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																					"typeString": "struct ISSListingTemplate.UpdateType[]"
																				}
																			}
																		},
																		"id": 2877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11464:38:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	},
																	"functionReturnParameters": 2831,
																	"id": 2878,
																	"nodeType": "Return",
																	"src": "11457:45:9"
																}
															]
														}
													},
													{
														"assignments": [
															2882,
															2884,
															null,
															null
														],
														"declarations": [
															{
																"constant": false,
																"id": 2882,
																"mutability": "mutable",
																"name": "xBalance",
																"nodeType": "VariableDeclaration",
																"scope": 2922,
																"src": "11531:16:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2881,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11531:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 2884,
																"mutability": "mutable",
																"name": "yBalance",
																"nodeType": "VariableDeclaration",
																"scope": 2922,
																"src": "11549:16:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2883,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11549:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															null,
															null
														],
														"id": 2888,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2885,
																	"name": "listingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2834,
																	"src": "11573:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																		"typeString": "contract ISSListingTemplate"
																	}
																},
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "listingVolumeBalancesView",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1119,
																"src": "11573:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "function () view external returns (uint256,uint256,uint256,uint256)"
																}
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11573:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256,uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11530:86:9"
													},
													{
														"assignments": [
															2890
														],
														"declarations": [
															{
																"constant": false,
																"id": 2890,
																"mutability": "mutable",
																"name": "impactPrice",
																"nodeType": "VariableDeclaration",
																"scope": 2922,
																"src": "11630:19:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2889,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11630:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2905,
														"initialValue": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2891,
																	"name": "xBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2882,
																	"src": "11652:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11663:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11652:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "30",
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11709:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"id": 2904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "11652:58:9",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2894,
																				"name": "yBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2884,
																				"src": "11668:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 2895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11679:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "11668:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2897,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11667:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2898,
																				"name": "xBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2882,
																				"src": "11688:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2899,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2825,
																				"src": "11699:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11688:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2901,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11687:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11667:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11630:80:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2906,
																	"name": "impactPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2890,
																	"src": "11728:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2907,
																	"name": "maxPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2840,
																	"src": "11742:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11728:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2909,
																	"name": "impactPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2890,
																	"src": "11754:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2910,
																	"name": "minPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2843,
																	"src": "11768:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11754:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11728:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2921,
														"nodeType": "IfStatement",
														"src": "11724:132:9",
														"trueBody": {
															"id": 2920,
															"nodeType": "Block",
															"src": "11778:78:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11839:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "11803:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
																			},
																			"typeName": {
																				"baseType": {
																					"id": 2914,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2913,
																						"name": "ISSListingTemplate.UpdateType",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1021,
																						"src": "11807:29:9"
																					},
																					"referencedDeclaration": 1021,
																					"src": "11807:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																						"typeString": "struct ISSListingTemplate.UpdateType"
																					}
																				},
																				"id": 2915,
																				"nodeType": "ArrayTypeName",
																				"src": "11807:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																					"typeString": "struct ISSListingTemplate.UpdateType[]"
																				}
																			}
																		},
																		"id": 2918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11803:38:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	},
																	"functionReturnParameters": 2831,
																	"id": 2919,
																	"nodeType": "Return",
																	"src": "11796:45:9"
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													2924,
													2926,
													2928,
													2930,
													2932,
													2934,
													2936
												],
												"declarations": [
													{
														"constant": false,
														"id": 2924,
														"mutability": "mutable",
														"name": "tokenAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "11889:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2923,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11889:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2926,
														"mutability": "mutable",
														"name": "decimals",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "11923:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2925,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "11923:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2928,
														"mutability": "mutable",
														"name": "makerAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "11951:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2927,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11951:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2930,
														"mutability": "mutable",
														"name": "recipient",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "11985:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2929,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11985:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2932,
														"mutability": "mutable",
														"name": "status",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "12016:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2931,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "12016:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2934,
														"mutability": "mutable",
														"name": "amountReceived",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "12042:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12042:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2936,
														"mutability": "mutable",
														"name": "normalizedReceived",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "12078:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2935,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12078:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2942,
												"initialValue": {
													"arguments": [
														{
															"id": 2938,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "12138:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2939,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "12147:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2940,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2825,
															"src": "12156:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2937,
														"name": "_prepSellOrderUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2480,
														"src": "12117:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint8_$_t_address_$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) returns (address,uint8,address,address,uint8,uint256,uint256)"
														}
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12117:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint8_$_t_address_$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint8,address,address,uint8,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11875:288:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2944,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "12204:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2945,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "12213:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2946,
															"name": "normalizedReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2936,
															"src": "12222:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2947,
															"name": "makerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "12242:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2948,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "12256:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2949,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "12267:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2943,
														"name": "_executeSellOrderUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "12180:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint8_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address,uint256,uint256,address,address,uint8) returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														}
													},
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12180:94:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"functionReturnParameters": 2831,
												"id": 2951,
												"nodeType": "Return",
												"src": "12173:101:9"
											}
										]
									},
									"functionSelector": "5fbc13ef",
									"id": 2953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeSellOrder",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "10939:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10939:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "10964:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "10989:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10989:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10929:80:9"
									},
									"returnParameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "11026:38:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.UpdateType[]"
												},
												"typeName": {
													"baseType": {
														"id": 2828,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2827,
															"name": "ISSListingTemplate.UpdateType",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1021,
															"src": "11026:29:9"
														},
														"referencedDeclaration": 1021,
														"src": "11026:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType"
														}
													},
													"id": 2829,
													"nodeType": "ArrayTypeName",
													"src": "11026:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11025:40:9"
									},
									"scope": 3926,
									"src": "10904:1377:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3188,
										"nodeType": "Block",
										"src": "12388:1757:9",
										"statements": [
											{
												"assignments": [
													2965
												],
												"declarations": [
													{
														"constant": false,
														"id": 2965,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "12398:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 2964,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2963,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "12398:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "12398:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2969,
												"initialValue": {
													"arguments": [
														{
															"id": 2967,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2955,
															"src": "12454:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2966,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "12435:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12435:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12398:64:9"
											},
											{
												"assignments": [
													2974
												],
												"declarations": [
													{
														"constant": false,
														"id": 2974,
														"mutability": "mutable",
														"name": "orders",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "12472:24:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2972,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12472:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2973,
															"nodeType": "ArrayTypeName",
															"src": "12472:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2978,
												"initialValue": {
													"baseExpression": {
														"id": 2975,
														"name": "activeBuyOrders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "12499:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 2977,
													"indexExpression": {
														"id": 2976,
														"name": "listing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2955,
														"src": "12515:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12499:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12472:51:9"
											},
											{
												"assignments": [
													2980
												],
												"declarations": [
													{
														"constant": false,
														"id": 2980,
														"mutability": "mutable",
														"name": "processed",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "12533:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2979,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12533:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2982,
												"initialValue": {
													"hexValue": "30",
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12553:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12533:21:9"
											},
											{
												"assignments": [
													2988
												],
												"declarations": [
													{
														"constant": false,
														"id": 2988,
														"mutability": "mutable",
														"name": "tempUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "12564:50:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 2986,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2985,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "12564:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "12564:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 2987,
															"nodeType": "ArrayTypeName",
															"src": "12564:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2998,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2993,
																	"name": "orders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2974,
																	"src": "12653:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 2994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12653:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "32",
																"id": 2995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12669:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "12653:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "12617:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2990,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2989,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "12621:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "12621:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 2991,
															"nodeType": "ArrayTypeName",
															"src": "12621:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														}
													},
													"id": 2997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12617:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12564:107:9"
											},
											{
												"assignments": [
													3000
												],
												"declarations": [
													{
														"constant": false,
														"id": 3000,
														"mutability": "mutable",
														"name": "updateIndex",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "12681:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12681:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3002,
												"initialValue": {
													"hexValue": "30",
													"id": 3001,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12703:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12681:23:9"
											},
											{
												"body": {
													"id": 3138,
													"nodeType": "Block",
													"src": "12784:1029:9",
													"statements": [
														{
															"assignments": [
																3016
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3016,
																	"mutability": "mutable",
																	"name": "orderId",
																	"nodeType": "VariableDeclaration",
																	"scope": 3138,
																	"src": "12798:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3015,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12798:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3020,
															"initialValue": {
																"baseExpression": {
																	"id": 3017,
																	"name": "orders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2974,
																	"src": "12816:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 3019,
																"indexExpression": {
																	"id": 3018,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3004,
																	"src": "12823:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12816:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12798:27:9"
														},
														{
															"assignments": [
																3022
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3022,
																	"mutability": "mutable",
																	"name": "pending",
																	"nodeType": "VariableDeclaration",
																	"scope": 3138,
																	"src": "12839:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3021,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12839:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3023,
															"nodeType": "VariableDeclarationStatement",
															"src": "12839:15:9"
														},
														{
															"expression": {
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 3024,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3022,
																			"src": "12869:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		null
																	],
																	"id": 3025,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "12868:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$__$",
																		"typeString": "tuple(uint256,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3028,
																			"name": "orderId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3016,
																			"src": "12917:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3026,
																			"name": "listingContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2965,
																			"src": "12882:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																				"typeString": "contract ISSListingTemplate"
																			}
																		},
																		"id": 3027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getBuyOrderAmounts",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1148,
																		"src": "12882:34:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																			"typeString": "function (uint256) view external returns (uint256,uint256)"
																		}
																	},
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12882:43:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "12868:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3031,
															"nodeType": "ExpressionStatement",
															"src": "12868:57:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3032,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3022,
																	"src": "12943:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12954:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12943:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3053,
															"nodeType": "IfStatement",
															"src": "12939:144:9",
															"trueBody": {
																"id": 3052,
																"nodeType": "Block",
																"src": "12957:126:9",
																"statements": [
																	{
																		"expression": {
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3035,
																					"name": "orders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2974,
																					"src": "12975:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3037,
																				"indexExpression": {
																					"id": 3036,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3004,
																					"src": "12982:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "12975:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3038,
																					"name": "orders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2974,
																					"src": "12987:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3043,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3042,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3039,
																							"name": "orders",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2974,
																							"src": "12994:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																								"typeString": "uint256[] storage pointer"
																							}
																						},
																						"id": 3040,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "12994:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3041,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13010:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "12994:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12987:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12975:37:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3045,
																		"nodeType": "ExpressionStatement",
																		"src": "12975:37:9"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 3046,
																					"name": "orders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2974,
																					"src": "13030:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "13030:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 3049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13030:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3050,
																		"nodeType": "ExpressionStatement",
																		"src": "13030:12:9"
																	},
																	{
																		"id": 3051,
																		"nodeType": "Continue",
																		"src": "13060:8:9"
																	}
																]
															}
														},
														{
															"clauses": [
																{
																	"block": {
																		"id": 3129,
																		"nodeType": "Block",
																		"src": "13205:529:9",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3068,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3065,
																							"name": "updates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3063,
																							"src": "13227:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																							}
																						},
																						"id": 3066,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "13227:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3067,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13245:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "13227:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3074,
																				"nodeType": "IfStatement",
																				"src": "13223:99:9",
																				"trueBody": {
																					"id": 3073,
																					"nodeType": "Block",
																					"src": "13248:74:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3070,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "13270:3:9",
																								"subExpression": {
																									"id": 3069,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3004,
																									"src": "13270:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3071,
																							"nodeType": "ExpressionStatement",
																							"src": "13270:3:9"
																						},
																						{
																							"id": 3072,
																							"nodeType": "Continue",
																							"src": "13295:8:9"
																						}
																					]
																				}
																			},
																			{
																				"body": {
																					"id": 3095,
																					"nodeType": "Block",
																					"src": "13384:80:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3093,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 3086,
																										"name": "tempUpdates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2988,
																										"src": "13406:11:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																										}
																									},
																									"id": 3089,
																									"indexExpression": {
																										"id": 3088,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "++",
																										"prefix": false,
																										"src": "13418:13:9",
																										"subExpression": {
																											"id": 3087,
																											"name": "updateIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3000,
																											"src": "13418:11:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "13406:26:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																										"typeString": "struct ISSListingTemplate.UpdateType memory"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 3090,
																										"name": "updates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3063,
																										"src": "13435:7:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																										}
																									},
																									"id": 3092,
																									"indexExpression": {
																										"id": 3091,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3076,
																										"src": "13443:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "13435:10:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																										"typeString": "struct ISSListingTemplate.UpdateType memory"
																									}
																								},
																								"src": "13406:39:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																									"typeString": "struct ISSListingTemplate.UpdateType memory"
																								}
																							},
																							"id": 3094,
																							"nodeType": "ExpressionStatement",
																							"src": "13406:39:9"
																						}
																					]
																				},
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3082,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3079,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3076,
																						"src": "13359:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 3080,
																							"name": "updates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3063,
																							"src": "13363:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																							}
																						},
																						"id": 3081,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "13363:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13359:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3096,
																				"initializationExpression": {
																					"assignments": [
																						3076
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3076,
																							"mutability": "mutable",
																							"name": "j",
																							"nodeType": "VariableDeclaration",
																							"scope": 3096,
																							"src": "13344:9:9",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3075,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "13344:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3078,
																					"initialValue": {
																						"hexValue": "30",
																						"id": 3077,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13356:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "13344:13:9"
																				},
																				"loopExpression": {
																					"expression": {
																						"id": 3084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "13379:3:9",
																						"subExpression": {
																							"id": 3083,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3076,
																							"src": "13379:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3085,
																					"nodeType": "ExpressionStatement",
																					"src": "13379:3:9"
																				},
																				"nodeType": "ForStatement",
																				"src": "13339:125:9"
																			},
																			{
																				"expression": {
																					"id": 3098,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "13481:11:9",
																					"subExpression": {
																						"id": 3097,
																						"name": "processed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2980,
																						"src": "13481:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3099,
																				"nodeType": "ExpressionStatement",
																				"src": "13481:11:9"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 3100,
																								"name": "orderPendingAmounts",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1590,
																								"src": "13514:19:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 3102,
																							"indexExpression": {
																								"id": 3101,
																								"name": "listing",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2955,
																								"src": "13534:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "13514:28:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 3104,
																						"indexExpression": {
																							"id": 3103,
																							"name": "orderId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3016,
																							"src": "13543:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "13514:37:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3105,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13555:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "13514:42:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 3127,
																					"nodeType": "Block",
																					"src": "13676:44:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "13698:3:9",
																								"subExpression": {
																									"id": 3124,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3004,
																									"src": "13698:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3126,
																							"nodeType": "ExpressionStatement",
																							"src": "13698:3:9"
																						}
																					]
																				},
																				"id": 3128,
																				"nodeType": "IfStatement",
																				"src": "13510:210:9",
																				"trueBody": {
																					"id": 3123,
																					"nodeType": "Block",
																					"src": "13558:112:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 3107,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2974,
																										"src": "13580:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3109,
																									"indexExpression": {
																										"id": 3108,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3004,
																										"src": "13587:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "13580:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 3110,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2974,
																										"src": "13592:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3115,
																									"indexExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 3114,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 3111,
																												"name": "orders",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2974,
																												"src": "13599:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																													"typeString": "uint256[] storage pointer"
																												}
																											},
																											"id": 3112,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "length",
																											"nodeType": "MemberAccess",
																											"src": "13599:13:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 3113,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "13615:1:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "13599:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "13592:25:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13580:37:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3117,
																							"nodeType": "ExpressionStatement",
																							"src": "13580:37:9"
																						},
																						{
																							"expression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 3118,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2974,
																										"src": "13639:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3120,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "pop",
																									"nodeType": "MemberAccess",
																									"src": "13639:10:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																										"typeString": "function ()"
																									}
																								},
																								"id": 3121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13639:12:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 3122,
																							"nodeType": "ExpressionStatement",
																							"src": "13639:12:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3130,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3064,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3063,
																				"mutability": "mutable",
																				"name": "updates",
																				"nodeType": "VariableDeclaration",
																				"scope": 3130,
																				"src": "13157:46:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ISSListingTemplate.UpdateType[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 3061,
																						"nodeType": "UserDefinedTypeName",
																						"pathNode": {
																							"id": 3060,
																							"name": "ISSListingTemplate.UpdateType",
																							"nodeType": "IdentifierPath",
																							"referencedDeclaration": 1021,
																							"src": "13157:29:9"
																						},
																						"referencedDeclaration": 1021,
																						"src": "13157:29:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																							"typeString": "struct ISSListingTemplate.UpdateType"
																						}
																					},
																					"id": 3062,
																					"nodeType": "ArrayTypeName",
																					"src": "13157:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																						"typeString": "struct ISSListingTemplate.UpdateType[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13156:48:9"
																	},
																	"src": "13148:586:9"
																},
																{
																	"block": {
																		"id": 3135,
																		"nodeType": "Block",
																		"src": "13741:62:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 3132,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "13759:3:9",
																					"subExpression": {
																						"id": 3131,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3004,
																						"src": "13759:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3133,
																				"nodeType": "ExpressionStatement",
																				"src": "13759:3:9"
																			},
																			{
																				"id": 3134,
																				"nodeType": "Continue",
																				"src": "13780:8:9"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3136,
																	"nodeType": "TryCatchClause",
																	"src": "13735:68:9"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 3056,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2955,
																		"src": "13121:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3057,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3016,
																		"src": "13130:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3058,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "13139:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3054,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "13100:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																			"typeString": "contract SSSettlementPartial"
																		}
																	},
																	"id": 3055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "executeBuyOrder",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2819,
																	"src": "13100:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (address,uint256,uint256) external returns (struct ISSListingTemplate.UpdateType memory[] memory)"
																	}
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13100:47:9",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																}
															},
															"id": 3137,
															"nodeType": "TryStatement",
															"src": "13096:707:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3007,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3004,
															"src": "12734:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 3008,
																"name": "orders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2974,
																"src": "12738:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "12738:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12734:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3011,
															"name": "processed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "12755:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3012,
															"name": "maxIterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "12767:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12755:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12734:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3139,
												"initializationExpression": {
													"assignments": [
														3004
													],
													"declarations": [
														{
															"constant": false,
															"id": 3004,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3139,
															"src": "12719:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3003,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12719:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3006,
													"initialValue": {
														"hexValue": "30",
														"id": 3005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12731:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12719:13:9"
												},
												"nodeType": "ForStatement",
												"src": "12714:1099:9"
											},
											{
												"assignments": [
													3145
												],
												"declarations": [
													{
														"constant": false,
														"id": 3145,
														"mutability": "mutable",
														"name": "finalUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "13822:51:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 3143,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3142,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "13822:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "13822:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 3144,
															"nodeType": "ArrayTypeName",
															"src": "13822:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3152,
												"initialValue": {
													"arguments": [
														{
															"id": 3150,
															"name": "updateIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "13912:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "13876:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3147,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3146,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "13880:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "13880:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 3148,
															"nodeType": "ArrayTypeName",
															"src": "13880:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														}
													},
													"id": 3151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13876:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13822:102:9"
											},
											{
												"body": {
													"id": 3171,
													"nodeType": "Block",
													"src": "13976:57:9",
													"statements": [
														{
															"expression": {
																"id": 3169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3163,
																		"name": "finalUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3145,
																		"src": "13990:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	},
																	"id": 3165,
																	"indexExpression": {
																		"id": 3164,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3154,
																		"src": "14003:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13990:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																		"typeString": "struct ISSListingTemplate.UpdateType memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3166,
																		"name": "tempUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2988,
																		"src": "14008:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	},
																	"id": 3168,
																	"indexExpression": {
																		"id": 3167,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3154,
																		"src": "14020:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14008:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																		"typeString": "struct ISSListingTemplate.UpdateType memory"
																	}
																},
																"src": "13990:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType memory"
																}
															},
															"id": 3170,
															"nodeType": "ExpressionStatement",
															"src": "13990:32:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3157,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3154,
														"src": "13954:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3158,
														"name": "updateIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3000,
														"src": "13958:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13954:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3172,
												"initializationExpression": {
													"assignments": [
														3154
													],
													"declarations": [
														{
															"constant": false,
															"id": 3154,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3172,
															"src": "13939:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3153,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13939:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3156,
													"initialValue": {
														"hexValue": "30",
														"id": 3155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13951:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13939:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 3161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13971:3:9",
														"subExpression": {
															"id": 3160,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "13971:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3162,
													"nodeType": "ExpressionStatement",
													"src": "13971:3:9"
												},
												"nodeType": "ForStatement",
												"src": "13934:99:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3173,
														"name": "updateIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3000,
														"src": "14046:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14060:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14046:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3187,
												"nodeType": "IfStatement",
												"src": "14042:97:9",
												"trueBody": {
													"id": 3186,
													"nodeType": "Block",
													"src": "14063:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3181,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "14108:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																					"typeString": "contract SSSettlementPartial"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																					"typeString": "contract SSSettlementPartial"
																				}
																			],
																			"id": 3180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14100:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3179,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14100:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14100:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3183,
																		"name": "finalUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3145,
																		"src": "14115:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	],
																	"expression": {
																		"id": 3176,
																		"name": "listingContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2965,
																		"src": "14077:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																			"typeString": "contract ISSListingTemplate"
																		}
																	},
																	"id": 3178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1078,
																	"src": "14077:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,struct ISSListingTemplate.UpdateType memory[] memory) external"
																	}
																},
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14077:51:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3185,
															"nodeType": "ExpressionStatement",
															"src": "14077:51:9"
														}
													]
												}
											}
										]
									},
									"id": 3189,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2960,
													"name": "listing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2955,
													"src": "12379:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2961,
											"modifierName": {
												"id": 2959,
												"name": "onlyValidListing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1636,
												"src": "12362:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "12362:25:9"
										}
									],
									"name": "executeBuyOrders",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "12313:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12313:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "maxIterations",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "12330:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12330:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12312:40:9"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12388:0:9"
									},
									"scope": 3926,
									"src": "12287:1858:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3424,
										"nodeType": "Block",
										"src": "14253:1760:9",
										"statements": [
											{
												"assignments": [
													3201
												],
												"declarations": [
													{
														"constant": false,
														"id": 3201,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 3424,
														"src": "14263:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 3200,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3199,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "14263:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "14263:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3205,
												"initialValue": {
													"arguments": [
														{
															"id": 3203,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3191,
															"src": "14319:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3202,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "14300:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 3204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14300:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14263:64:9"
											},
											{
												"assignments": [
													3210
												],
												"declarations": [
													{
														"constant": false,
														"id": 3210,
														"mutability": "mutable",
														"name": "orders",
														"nodeType": "VariableDeclaration",
														"scope": 3424,
														"src": "14337:24:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3208,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14337:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3209,
															"nodeType": "ArrayTypeName",
															"src": "14337:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3214,
												"initialValue": {
													"baseExpression": {
														"id": 3211,
														"name": "activeSellOrders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "14364:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 3213,
													"indexExpression": {
														"id": 3212,
														"name": "listing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3191,
														"src": "14381:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14364:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14337:52:9"
											},
											{
												"assignments": [
													3216
												],
												"declarations": [
													{
														"constant": false,
														"id": 3216,
														"mutability": "mutable",
														"name": "processed",
														"nodeType": "VariableDeclaration",
														"scope": 3424,
														"src": "14399:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14399:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3218,
												"initialValue": {
													"hexValue": "30",
													"id": 3217,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14419:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14399:21:9"
											},
											{
												"assignments": [
													3224
												],
												"declarations": [
													{
														"constant": false,
														"id": 3224,
														"mutability": "mutable",
														"name": "tempUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 3424,
														"src": "14430:50:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 3222,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3221,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "14430:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "14430:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 3223,
															"nodeType": "ArrayTypeName",
															"src": "14430:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3234,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3229,
																	"name": "orders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3210,
																	"src": "14519:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 3230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14519:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "32",
																"id": 3231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14535:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "14519:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14483:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3226,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3225,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "14487:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "14487:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 3227,
															"nodeType": "ArrayTypeName",
															"src": "14487:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														}
													},
													"id": 3233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14483:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14430:107:9"
											},
											{
												"assignments": [
													3236
												],
												"declarations": [
													{
														"constant": false,
														"id": 3236,
														"mutability": "mutable",
														"name": "updateIndex",
														"nodeType": "VariableDeclaration",
														"scope": 3424,
														"src": "14547:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14547:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3238,
												"initialValue": {
													"hexValue": "30",
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14569:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14547:23:9"
											},
											{
												"body": {
													"id": 3374,
													"nodeType": "Block",
													"src": "14650:1031:9",
													"statements": [
														{
															"assignments": [
																3252
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3252,
																	"mutability": "mutable",
																	"name": "orderId",
																	"nodeType": "VariableDeclaration",
																	"scope": 3374,
																	"src": "14664:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3251,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14664:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3256,
															"initialValue": {
																"baseExpression": {
																	"id": 3253,
																	"name": "orders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3210,
																	"src": "14682:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 3255,
																"indexExpression": {
																	"id": 3254,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3240,
																	"src": "14689:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14682:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14664:27:9"
														},
														{
															"assignments": [
																3258
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3258,
																	"mutability": "mutable",
																	"name": "pending",
																	"nodeType": "VariableDeclaration",
																	"scope": 3374,
																	"src": "14705:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3257,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14705:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3259,
															"nodeType": "VariableDeclarationStatement",
															"src": "14705:15:9"
														},
														{
															"expression": {
																"id": 3266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 3260,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3258,
																			"src": "14735:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		null
																	],
																	"id": 3261,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "14734:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$__$",
																		"typeString": "tuple(uint256,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3264,
																			"name": "orderId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3252,
																			"src": "14784:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3262,
																			"name": "listingContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3201,
																			"src": "14748:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																				"typeString": "contract ISSListingTemplate"
																			}
																		},
																		"id": 3263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getSellOrderAmounts",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1177,
																		"src": "14748:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																			"typeString": "function (uint256) view external returns (uint256,uint256)"
																		}
																	},
																	"id": 3265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14748:44:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "14734:58:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3267,
															"nodeType": "ExpressionStatement",
															"src": "14734:58:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3268,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3258,
																	"src": "14810:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14821:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14810:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3289,
															"nodeType": "IfStatement",
															"src": "14806:144:9",
															"trueBody": {
																"id": 3288,
																"nodeType": "Block",
																"src": "14824:126:9",
																"statements": [
																	{
																		"expression": {
																			"id": 3280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3271,
																					"name": "orders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3210,
																					"src": "14842:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3273,
																				"indexExpression": {
																					"id": 3272,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3240,
																					"src": "14849:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "14842:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3274,
																					"name": "orders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3210,
																					"src": "14854:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3279,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3278,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3275,
																							"name": "orders",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3210,
																							"src": "14861:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																								"typeString": "uint256[] storage pointer"
																							}
																						},
																						"id": 3276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14861:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3277,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14877:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "14861:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14854:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14842:37:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3281,
																		"nodeType": "ExpressionStatement",
																		"src": "14842:37:9"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 3282,
																					"name": "orders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3210,
																					"src": "14897:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 3284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "14897:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 3285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14897:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3286,
																		"nodeType": "ExpressionStatement",
																		"src": "14897:12:9"
																	},
																	{
																		"id": 3287,
																		"nodeType": "Continue",
																		"src": "14927:8:9"
																	}
																]
															}
														},
														{
															"clauses": [
																{
																	"block": {
																		"id": 3365,
																		"nodeType": "Block",
																		"src": "15073:529:9",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3301,
																							"name": "updates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3299,
																							"src": "15095:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																							}
																						},
																						"id": 3302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15095:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3303,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15113:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15095:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3310,
																				"nodeType": "IfStatement",
																				"src": "15091:99:9",
																				"trueBody": {
																					"id": 3309,
																					"nodeType": "Block",
																					"src": "15116:74:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "15138:3:9",
																								"subExpression": {
																									"id": 3305,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3240,
																									"src": "15138:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3307,
																							"nodeType": "ExpressionStatement",
																							"src": "15138:3:9"
																						},
																						{
																							"id": 3308,
																							"nodeType": "Continue",
																							"src": "15163:8:9"
																						}
																					]
																				}
																			},
																			{
																				"body": {
																					"id": 3331,
																					"nodeType": "Block",
																					"src": "15252:80:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3329,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 3322,
																										"name": "tempUpdates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3224,
																										"src": "15274:11:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																										}
																									},
																									"id": 3325,
																									"indexExpression": {
																										"id": 3324,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "++",
																										"prefix": false,
																										"src": "15286:13:9",
																										"subExpression": {
																											"id": 3323,
																											"name": "updateIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3236,
																											"src": "15286:11:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "15274:26:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																										"typeString": "struct ISSListingTemplate.UpdateType memory"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 3326,
																										"name": "updates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3299,
																										"src": "15303:7:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																										}
																									},
																									"id": 3328,
																									"indexExpression": {
																										"id": 3327,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3312,
																										"src": "15311:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15303:10:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																										"typeString": "struct ISSListingTemplate.UpdateType memory"
																									}
																								},
																								"src": "15274:39:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																									"typeString": "struct ISSListingTemplate.UpdateType memory"
																								}
																							},
																							"id": 3330,
																							"nodeType": "ExpressionStatement",
																							"src": "15274:39:9"
																						}
																					]
																				},
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3318,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3315,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3312,
																						"src": "15227:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 3316,
																							"name": "updates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3299,
																							"src": "15231:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																							}
																						},
																						"id": 3317,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15231:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15227:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3332,
																				"initializationExpression": {
																					"assignments": [
																						3312
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3312,
																							"mutability": "mutable",
																							"name": "j",
																							"nodeType": "VariableDeclaration",
																							"scope": 3332,
																							"src": "15212:9:9",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3311,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "15212:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3314,
																					"initialValue": {
																						"hexValue": "30",
																						"id": 3313,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15224:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "15212:13:9"
																				},
																				"loopExpression": {
																					"expression": {
																						"id": 3320,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "15247:3:9",
																						"subExpression": {
																							"id": 3319,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3312,
																							"src": "15247:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3321,
																					"nodeType": "ExpressionStatement",
																					"src": "15247:3:9"
																				},
																				"nodeType": "ForStatement",
																				"src": "15207:125:9"
																			},
																			{
																				"expression": {
																					"id": 3334,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "15349:11:9",
																					"subExpression": {
																						"id": 3333,
																						"name": "processed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3216,
																						"src": "15349:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3335,
																				"nodeType": "ExpressionStatement",
																				"src": "15349:11:9"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3342,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 3336,
																								"name": "orderPendingAmounts",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1590,
																								"src": "15382:19:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 3338,
																							"indexExpression": {
																								"id": 3337,
																								"name": "listing",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3191,
																								"src": "15402:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15382:28:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 3340,
																						"indexExpression": {
																							"id": 3339,
																							"name": "orderId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3252,
																							"src": "15411:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "15382:37:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3341,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15423:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15382:42:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 3363,
																					"nodeType": "Block",
																					"src": "15544:44:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3361,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "15566:3:9",
																								"subExpression": {
																									"id": 3360,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3240,
																									"src": "15566:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3362,
																							"nodeType": "ExpressionStatement",
																							"src": "15566:3:9"
																						}
																					]
																				},
																				"id": 3364,
																				"nodeType": "IfStatement",
																				"src": "15378:210:9",
																				"trueBody": {
																					"id": 3359,
																					"nodeType": "Block",
																					"src": "15426:112:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3352,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 3343,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3210,
																										"src": "15448:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3345,
																									"indexExpression": {
																										"id": 3344,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3240,
																										"src": "15455:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "15448:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 3346,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3210,
																										"src": "15460:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3351,
																									"indexExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 3350,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 3347,
																												"name": "orders",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3210,
																												"src": "15467:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																													"typeString": "uint256[] storage pointer"
																												}
																											},
																											"id": 3348,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "length",
																											"nodeType": "MemberAccess",
																											"src": "15467:13:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 3349,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "15483:1:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "15467:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15460:25:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15448:37:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3353,
																							"nodeType": "ExpressionStatement",
																							"src": "15448:37:9"
																						},
																						{
																							"expression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 3354,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3210,
																										"src": "15507:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3356,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "pop",
																									"nodeType": "MemberAccess",
																									"src": "15507:10:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																										"typeString": "function ()"
																									}
																								},
																								"id": 3357,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15507:12:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 3358,
																							"nodeType": "ExpressionStatement",
																							"src": "15507:12:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3366,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3300,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3299,
																				"mutability": "mutable",
																				"name": "updates",
																				"nodeType": "VariableDeclaration",
																				"scope": 3366,
																				"src": "15025:46:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ISSListingTemplate.UpdateType[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 3297,
																						"nodeType": "UserDefinedTypeName",
																						"pathNode": {
																							"id": 3296,
																							"name": "ISSListingTemplate.UpdateType",
																							"nodeType": "IdentifierPath",
																							"referencedDeclaration": 1021,
																							"src": "15025:29:9"
																						},
																						"referencedDeclaration": 1021,
																						"src": "15025:29:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																							"typeString": "struct ISSListingTemplate.UpdateType"
																						}
																					},
																					"id": 3298,
																					"nodeType": "ArrayTypeName",
																					"src": "15025:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																						"typeString": "struct ISSListingTemplate.UpdateType[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15024:48:9"
																	},
																	"src": "15016:586:9"
																},
																{
																	"block": {
																		"id": 3371,
																		"nodeType": "Block",
																		"src": "15609:62:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 3368,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "15627:3:9",
																					"subExpression": {
																						"id": 3367,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3240,
																						"src": "15627:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3369,
																				"nodeType": "ExpressionStatement",
																				"src": "15627:3:9"
																			},
																			{
																				"id": 3370,
																				"nodeType": "Continue",
																				"src": "15648:8:9"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3372,
																	"nodeType": "TryCatchClause",
																	"src": "15603:68:9"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 3292,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3191,
																		"src": "14989:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3293,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3252,
																		"src": "14998:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3294,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3258,
																		"src": "15007:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3290,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "14967:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																			"typeString": "contract SSSettlementPartial"
																		}
																	},
																	"id": 3291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "executeSellOrder",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2953,
																	"src": "14967:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (address,uint256,uint256) external returns (struct ISSListingTemplate.UpdateType memory[] memory)"
																	}
																},
																"id": 3295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14967:48:9",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																}
															},
															"id": 3373,
															"nodeType": "TryStatement",
															"src": "14963:708:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3243,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3240,
															"src": "14600:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 3244,
																"name": "orders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3210,
																"src": "14604:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 3245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "14604:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14600:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3247,
															"name": "processed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3216,
															"src": "14621:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3248,
															"name": "maxIterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "14633:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14621:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14600:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3375,
												"initializationExpression": {
													"assignments": [
														3240
													],
													"declarations": [
														{
															"constant": false,
															"id": 3240,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3375,
															"src": "14585:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3239,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14585:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3242,
													"initialValue": {
														"hexValue": "30",
														"id": 3241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14597:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14585:13:9"
												},
												"nodeType": "ForStatement",
												"src": "14580:1101:9"
											},
											{
												"assignments": [
													3381
												],
												"declarations": [
													{
														"constant": false,
														"id": 3381,
														"mutability": "mutable",
														"name": "finalUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 3424,
														"src": "15690:51:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.UpdateType[]"
														},
														"typeName": {
															"baseType": {
																"id": 3379,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3378,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "15690:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "15690:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 3380,
															"nodeType": "ArrayTypeName",
															"src": "15690:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3388,
												"initialValue": {
													"arguments": [
														{
															"id": 3386,
															"name": "updateIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3236,
															"src": "15780:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15744:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.UpdateType memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3383,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3382,
																	"name": "ISSListingTemplate.UpdateType",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1021,
																	"src": "15748:29:9"
																},
																"referencedDeclaration": 1021,
																"src": "15748:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_storage_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType"
																}
															},
															"id": 3384,
															"nodeType": "ArrayTypeName",
															"src": "15748:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.UpdateType[]"
															}
														}
													},
													"id": 3387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15744:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15690:102:9"
											},
											{
												"body": {
													"id": 3407,
													"nodeType": "Block",
													"src": "15844:57:9",
													"statements": [
														{
															"expression": {
																"id": 3405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3399,
																		"name": "finalUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3381,
																		"src": "15858:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	},
																	"id": 3401,
																	"indexExpression": {
																		"id": 3400,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3390,
																		"src": "15871:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15858:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																		"typeString": "struct ISSListingTemplate.UpdateType memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3402,
																		"name": "tempUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3224,
																		"src": "15876:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	},
																	"id": 3404,
																	"indexExpression": {
																		"id": 3403,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3390,
																		"src": "15888:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15876:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																		"typeString": "struct ISSListingTemplate.UpdateType memory"
																	}
																},
																"src": "15858:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UpdateType_$1021_memory_ptr",
																	"typeString": "struct ISSListingTemplate.UpdateType memory"
																}
															},
															"id": 3406,
															"nodeType": "ExpressionStatement",
															"src": "15858:32:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3393,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3390,
														"src": "15822:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3394,
														"name": "updateIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3236,
														"src": "15826:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15822:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3408,
												"initializationExpression": {
													"assignments": [
														3390
													],
													"declarations": [
														{
															"constant": false,
															"id": 3390,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3408,
															"src": "15807:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3389,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15807:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3392,
													"initialValue": {
														"hexValue": "30",
														"id": 3391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15819:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15807:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15839:3:9",
														"subExpression": {
															"id": 3396,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3390,
															"src": "15839:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3398,
													"nodeType": "ExpressionStatement",
													"src": "15839:3:9"
												},
												"nodeType": "ForStatement",
												"src": "15802:99:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3409,
														"name": "updateIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3236,
														"src": "15914:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15928:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15914:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3423,
												"nodeType": "IfStatement",
												"src": "15910:97:9",
												"trueBody": {
													"id": 3422,
													"nodeType": "Block",
													"src": "15931:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3417,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "15976:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																					"typeString": "contract SSSettlementPartial"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																					"typeString": "contract SSSettlementPartial"
																				}
																			],
																			"id": 3416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15968:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3415,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15968:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15968:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3419,
																		"name": "finalUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3381,
																		"src": "15983:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.UpdateType memory[] memory"
																		}
																	],
																	"expression": {
																		"id": 3412,
																		"name": "listingContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3201,
																		"src": "15945:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																			"typeString": "contract ISSListingTemplate"
																		}
																	},
																	"id": 3414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1078,
																	"src": "15945:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_UpdateType_$1021_memory_ptr_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,struct ISSListingTemplate.UpdateType memory[] memory) external"
																	}
																},
																"id": 3420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15945:51:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3421,
															"nodeType": "ExpressionStatement",
															"src": "15945:51:9"
														}
													]
												}
											}
										]
									},
									"id": 3425,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3196,
													"name": "listing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3191,
													"src": "14244:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3197,
											"modifierName": {
												"id": 3195,
												"name": "onlyValidListing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1636,
												"src": "14227:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "14227:25:9"
										}
									],
									"name": "executeSellOrders",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 3425,
												"src": "14178:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3193,
												"mutability": "mutable",
												"name": "maxIterations",
												"nodeType": "VariableDeclaration",
												"scope": 3425,
												"src": "14195:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14195:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14177:40:9"
									},
									"returnParameters": {
										"id": 3198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14253:0:9"
									},
									"scope": 3926,
									"src": "14151:1862:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3474,
										"nodeType": "Block",
										"src": "16160:366:9",
										"statements": [
											{
												"assignments": [
													3438
												],
												"declarations": [
													{
														"constant": false,
														"id": 3438,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 3474,
														"src": "16170:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 3437,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3436,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "16170:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "16170:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3442,
												"initialValue": {
													"arguments": [
														{
															"id": 3440,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3427,
															"src": "16226:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3439,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "16207:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 3441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16207:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16170:64:9"
											},
											{
												"assignments": [
													3447
												],
												"declarations": [
													{
														"constant": false,
														"id": 3447,
														"mutability": "mutable",
														"name": "payout",
														"nodeType": "VariableDeclaration",
														"scope": 3474,
														"src": "16244:49:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LongPayoutStruct_$1041_memory_ptr",
															"typeString": "struct ISSListingTemplate.LongPayoutStruct"
														},
														"typeName": {
															"id": 3446,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3445,
																"name": "ISSListingTemplate.LongPayoutStruct",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1041,
																"src": "16244:35:9"
															},
															"referencedDeclaration": 1041,
															"src": "16244:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LongPayoutStruct_$1041_storage_ptr",
																"typeString": "struct ISSListingTemplate.LongPayoutStruct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3452,
												"initialValue": {
													"arguments": [
														{
															"id": 3450,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3429,
															"src": "16326:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3448,
															"name": "listingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3438,
															"src": "16296:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"id": 3449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getLongPayout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "16296:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_LongPayoutStruct_$1041_memory_ptr_$",
															"typeString": "function (uint256) view external returns (struct ISSListingTemplate.LongPayoutStruct memory)"
														}
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16296:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LongPayoutStruct_$1041_memory_ptr",
														"typeString": "struct ISSListingTemplate.LongPayoutStruct memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16244:90:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3453,
															"name": "payout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3447,
															"src": "16348:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LongPayoutStruct_$1041_memory_ptr",
																"typeString": "struct ISSListingTemplate.LongPayoutStruct memory"
															}
														},
														"id": 3454,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "required",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1034,
														"src": "16348:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16367:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16348:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3465,
												"nodeType": "IfStatement",
												"src": "16344:98:9",
												"trueBody": {
													"id": 3464,
													"nodeType": "Block",
													"src": "16370:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16429:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16391:37:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 3458,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 3457,
																				"name": "ISSListingTemplate.PayoutUpdate",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1028,
																				"src": "16395:31:9"
																			},
																			"referencedDeclaration": 1028,
																			"src": "16395:31:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																				"typeString": "struct ISSListingTemplate.PayoutUpdate"
																			}
																		},
																		"id": 3459,
																		"nodeType": "ArrayTypeName",
																		"src": "16395:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
																		}
																	}
																},
																"id": 3462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16391:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																}
															},
															"functionReturnParameters": 3435,
															"id": 3463,
															"nodeType": "Return",
															"src": "16384:47:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3467,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3427,
															"src": "16479:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3468,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3429,
															"src": "16488:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3469,
																"name": "payout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3447,
																"src": "16497:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LongPayoutStruct_$1041_memory_ptr",
																	"typeString": "struct ISSListingTemplate.LongPayoutStruct memory"
																}
															},
															"id": 3470,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "required",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1034,
															"src": "16497:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16514:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3466,
														"name": "_processPayoutUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2685,
														"src": "16458:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address,uint256,uint256,bool) returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
														}
													},
													"id": 3472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16458:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
													}
												},
												"functionReturnParameters": 3435,
												"id": 3473,
												"nodeType": "Return",
												"src": "16451:68:9"
											}
										]
									},
									"functionSelector": "6cb4ea85",
									"id": 3475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeLongPayout",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "16055:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16055:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "16080:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16080:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16045:56:9"
									},
									"returnParameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "16118:40:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
												},
												"typeName": {
													"baseType": {
														"id": 3432,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3431,
															"name": "ISSListingTemplate.PayoutUpdate",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1028,
															"src": "16118:31:9"
														},
														"referencedDeclaration": 1028,
														"src": "16118:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate"
														}
													},
													"id": 3433,
													"nodeType": "ArrayTypeName",
													"src": "16118:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16117:42:9"
									},
									"scope": 3926,
									"src": "16019:507:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3524,
										"nodeType": "Block",
										"src": "16674:365:9",
										"statements": [
											{
												"assignments": [
													3488
												],
												"declarations": [
													{
														"constant": false,
														"id": 3488,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 3524,
														"src": "16684:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 3487,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3486,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "16684:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "16684:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3492,
												"initialValue": {
													"arguments": [
														{
															"id": 3490,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3477,
															"src": "16740:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3489,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "16721:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16721:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16684:64:9"
											},
											{
												"assignments": [
													3497
												],
												"declarations": [
													{
														"constant": false,
														"id": 3497,
														"mutability": "mutable",
														"name": "payout",
														"nodeType": "VariableDeclaration",
														"scope": 3524,
														"src": "16758:50:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ShortPayoutStruct_$1054_memory_ptr",
															"typeString": "struct ISSListingTemplate.ShortPayoutStruct"
														},
														"typeName": {
															"id": 3496,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3495,
																"name": "ISSListingTemplate.ShortPayoutStruct",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1054,
																"src": "16758:36:9"
															},
															"referencedDeclaration": 1054,
															"src": "16758:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ShortPayoutStruct_$1054_storage_ptr",
																"typeString": "struct ISSListingTemplate.ShortPayoutStruct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3502,
												"initialValue": {
													"arguments": [
														{
															"id": 3500,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3479,
															"src": "16842:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3498,
															"name": "listingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3488,
															"src": "16811:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"id": 3499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getShortPayout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1193,
														"src": "16811:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_ShortPayoutStruct_$1054_memory_ptr_$",
															"typeString": "function (uint256) view external returns (struct ISSListingTemplate.ShortPayoutStruct memory)"
														}
													},
													"id": 3501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16811:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ShortPayoutStruct_$1054_memory_ptr",
														"typeString": "struct ISSListingTemplate.ShortPayoutStruct memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16758:92:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3503,
															"name": "payout",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3497,
															"src": "16864:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ShortPayoutStruct_$1054_memory_ptr",
																"typeString": "struct ISSListingTemplate.ShortPayoutStruct memory"
															}
														},
														"id": 3504,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1047,
														"src": "16864:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16881:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16864:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3515,
												"nodeType": "IfStatement",
												"src": "16860:96:9",
												"trueBody": {
													"id": 3514,
													"nodeType": "Block",
													"src": "16884:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16943:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16905:37:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 3508,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 3507,
																				"name": "ISSListingTemplate.PayoutUpdate",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1028,
																				"src": "16909:31:9"
																			},
																			"referencedDeclaration": 1028,
																			"src": "16909:31:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																				"typeString": "struct ISSListingTemplate.PayoutUpdate"
																			}
																		},
																		"id": 3509,
																		"nodeType": "ArrayTypeName",
																		"src": "16909:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
																		}
																	}
																},
																"id": 3512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16905:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																}
															},
															"functionReturnParameters": 3485,
															"id": 3513,
															"nodeType": "Return",
															"src": "16898:47:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3517,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3477,
															"src": "16993:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3518,
															"name": "orderId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3479,
															"src": "17002:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3519,
																"name": "payout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3497,
																"src": "17011:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ShortPayoutStruct_$1054_memory_ptr",
																	"typeString": "struct ISSListingTemplate.ShortPayoutStruct memory"
																}
															},
															"id": 3520,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1047,
															"src": "17011:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 3521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17026:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3516,
														"name": "_processPayoutUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2685,
														"src": "16972:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address,uint256,uint256,bool) returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
														}
													},
													"id": 3522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16972:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
													}
												},
												"functionReturnParameters": 3485,
												"id": 3523,
												"nodeType": "Return",
												"src": "16965:67:9"
											}
										]
									},
									"functionSelector": "c285c607",
									"id": 3525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeShortPayout",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3477,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 3525,
												"src": "16569:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16569:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3479,
												"mutability": "mutable",
												"name": "orderId",
												"nodeType": "VariableDeclaration",
												"scope": 3525,
												"src": "16594:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16594:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16559:56:9"
									},
									"returnParameters": {
										"id": 3485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3484,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3525,
												"src": "16632:40:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
												},
												"typeName": {
													"baseType": {
														"id": 3482,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3481,
															"name": "ISSListingTemplate.PayoutUpdate",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1028,
															"src": "16632:31:9"
														},
														"referencedDeclaration": 1028,
														"src": "16632:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate"
														}
													},
													"id": 3483,
													"nodeType": "ArrayTypeName",
													"src": "16632:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16631:42:9"
									},
									"scope": 3926,
									"src": "16532:507:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3724,
										"nodeType": "Block",
										"src": "17148:1564:9",
										"statements": [
											{
												"assignments": [
													3537
												],
												"declarations": [
													{
														"constant": false,
														"id": 3537,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "17158:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 3536,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3535,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "17158:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "17158:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3541,
												"initialValue": {
													"arguments": [
														{
															"id": 3539,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3527,
															"src": "17214:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3538,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "17195:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 3540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17195:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17158:64:9"
											},
											{
												"assignments": [
													3546
												],
												"declarations": [
													{
														"constant": false,
														"id": 3546,
														"mutability": "mutable",
														"name": "orders",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "17232:24:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3544,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17232:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3545,
															"nodeType": "ArrayTypeName",
															"src": "17232:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3550,
												"initialValue": {
													"baseExpression": {
														"id": 3547,
														"name": "activeLongPayouts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "17259:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 3549,
													"indexExpression": {
														"id": 3548,
														"name": "listing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3527,
														"src": "17277:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17259:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17232:53:9"
											},
											{
												"assignments": [
													3552
												],
												"declarations": [
													{
														"constant": false,
														"id": 3552,
														"mutability": "mutable",
														"name": "processed",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "17295:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17295:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3554,
												"initialValue": {
													"hexValue": "30",
													"id": 3553,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17315:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17295:21:9"
											},
											{
												"assignments": [
													3560
												],
												"declarations": [
													{
														"constant": false,
														"id": 3560,
														"mutability": "mutable",
														"name": "tempPayoutUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "17326:58:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
														},
														"typeName": {
															"baseType": {
																"id": 3558,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3557,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "17326:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "17326:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 3559,
															"nodeType": "ArrayTypeName",
															"src": "17326:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3568,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3565,
																"name": "orders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3546,
																"src": "17425:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 3566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "17425:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17387:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3562,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3561,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "17391:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "17391:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 3563,
															"nodeType": "ArrayTypeName",
															"src": "17391:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														}
													},
													"id": 3567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17387:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17326:113:9"
											},
											{
												"assignments": [
													3570
												],
												"declarations": [
													{
														"constant": false,
														"id": 3570,
														"mutability": "mutable",
														"name": "updateIndex",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "17449:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17449:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3572,
												"initialValue": {
													"hexValue": "30",
													"id": 3571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17471:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17449:23:9"
											},
											{
												"body": {
													"id": 3674,
													"nodeType": "Block",
													"src": "17552:798:9",
													"statements": [
														{
															"assignments": [
																3586
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3586,
																	"mutability": "mutable",
																	"name": "orderId",
																	"nodeType": "VariableDeclaration",
																	"scope": 3674,
																	"src": "17566:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3585,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17566:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3590,
															"initialValue": {
																"baseExpression": {
																	"id": 3587,
																	"name": "orders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3546,
																	"src": "17584:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 3589,
																"indexExpression": {
																	"id": 3588,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3574,
																	"src": "17591:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17584:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17566:27:9"
														},
														{
															"clauses": [
																{
																	"block": {
																		"id": 3665,
																		"nodeType": "Block",
																		"src": "17717:554:9",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3604,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3601,
																							"name": "payoutUpdates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3599,
																							"src": "17739:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																							}
																						},
																						"id": 3602,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17739:20:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3603,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17763:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17739:25:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3610,
																				"nodeType": "IfStatement",
																				"src": "17735:105:9",
																				"trueBody": {
																					"id": 3609,
																					"nodeType": "Block",
																					"src": "17766:74:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3606,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "17788:3:9",
																								"subExpression": {
																									"id": 3605,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3574,
																									"src": "17788:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3607,
																							"nodeType": "ExpressionStatement",
																							"src": "17788:3:9"
																						},
																						{
																							"id": 3608,
																							"nodeType": "Continue",
																							"src": "17813:8:9"
																						}
																					]
																				}
																			},
																			{
																				"body": {
																					"id": 3631,
																					"nodeType": "Block",
																					"src": "17908:92:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3629,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 3622,
																										"name": "tempPayoutUpdates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3560,
																										"src": "17930:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																										}
																									},
																									"id": 3625,
																									"indexExpression": {
																										"id": 3624,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "++",
																										"prefix": false,
																										"src": "17948:13:9",
																										"subExpression": {
																											"id": 3623,
																											"name": "updateIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3570,
																											"src": "17948:11:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "17930:32:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																										"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 3626,
																										"name": "payoutUpdates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3599,
																										"src": "17965:13:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																										}
																									},
																									"id": 3628,
																									"indexExpression": {
																										"id": 3627,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3612,
																										"src": "17979:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "17965:16:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																										"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																									}
																								},
																								"src": "17930:51:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																									"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																								}
																							},
																							"id": 3630,
																							"nodeType": "ExpressionStatement",
																							"src": "17930:51:9"
																						}
																					]
																				},
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3615,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3612,
																						"src": "17877:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 3616,
																							"name": "payoutUpdates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3599,
																							"src": "17881:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																							}
																						},
																						"id": 3617,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17881:20:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "17877:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3632,
																				"initializationExpression": {
																					"assignments": [
																						3612
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3612,
																							"mutability": "mutable",
																							"name": "j",
																							"nodeType": "VariableDeclaration",
																							"scope": 3632,
																							"src": "17862:9:9",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3611,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "17862:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3614,
																					"initialValue": {
																						"hexValue": "30",
																						"id": 3613,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17874:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "17862:13:9"
																				},
																				"loopExpression": {
																					"expression": {
																						"id": 3620,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "17903:3:9",
																						"subExpression": {
																							"id": 3619,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3612,
																							"src": "17903:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3621,
																					"nodeType": "ExpressionStatement",
																					"src": "17903:3:9"
																				},
																				"nodeType": "ForStatement",
																				"src": "17857:143:9"
																			},
																			{
																				"expression": {
																					"id": 3634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "18017:11:9",
																					"subExpression": {
																						"id": 3633,
																						"name": "processed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3552,
																						"src": "18017:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3635,
																				"nodeType": "ExpressionStatement",
																				"src": "18017:11:9"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 3636,
																								"name": "payoutPendingAmounts",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1596,
																								"src": "18050:20:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 3638,
																							"indexExpression": {
																								"id": 3637,
																								"name": "listing",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3527,
																								"src": "18071:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "18050:29:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 3640,
																						"indexExpression": {
																							"id": 3639,
																							"name": "orderId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3586,
																							"src": "18080:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "18050:38:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "18092:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "18050:43:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 3663,
																					"nodeType": "Block",
																					"src": "18213:44:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3661,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "18235:3:9",
																								"subExpression": {
																									"id": 3660,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3574,
																									"src": "18235:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3662,
																							"nodeType": "ExpressionStatement",
																							"src": "18235:3:9"
																						}
																					]
																				},
																				"id": 3664,
																				"nodeType": "IfStatement",
																				"src": "18046:211:9",
																				"trueBody": {
																					"id": 3659,
																					"nodeType": "Block",
																					"src": "18095:112:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3652,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 3643,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3546,
																										"src": "18117:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3645,
																									"indexExpression": {
																										"id": 3644,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3574,
																										"src": "18124:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "18117:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 3646,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3546,
																										"src": "18129:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3651,
																									"indexExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 3650,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 3647,
																												"name": "orders",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3546,
																												"src": "18136:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																													"typeString": "uint256[] storage pointer"
																												}
																											},
																											"id": 3648,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "length",
																											"nodeType": "MemberAccess",
																											"src": "18136:13:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 3649,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "18152:1:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "18136:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "18129:25:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "18117:37:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3653,
																							"nodeType": "ExpressionStatement",
																							"src": "18117:37:9"
																						},
																						{
																							"expression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 3654,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3546,
																										"src": "18176:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3656,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "pop",
																									"nodeType": "MemberAccess",
																									"src": "18176:10:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																										"typeString": "function ()"
																									}
																								},
																								"id": 3657,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "18176:12:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 3658,
																							"nodeType": "ExpressionStatement",
																							"src": "18176:12:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3666,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3600,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3599,
																				"mutability": "mutable",
																				"name": "payoutUpdates",
																				"nodeType": "VariableDeclaration",
																				"scope": 3666,
																				"src": "17661:54:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 3597,
																						"nodeType": "UserDefinedTypeName",
																						"pathNode": {
																							"id": 3596,
																							"name": "ISSListingTemplate.PayoutUpdate",
																							"nodeType": "IdentifierPath",
																							"referencedDeclaration": 1028,
																							"src": "17661:31:9"
																						},
																						"referencedDeclaration": 1028,
																						"src": "17661:31:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																							"typeString": "struct ISSListingTemplate.PayoutUpdate"
																						}
																					},
																					"id": 3598,
																					"nodeType": "ArrayTypeName",
																					"src": "17661:33:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																						"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17660:56:9"
																	},
																	"src": "17652:619:9"
																},
																{
																	"block": {
																		"id": 3671,
																		"nodeType": "Block",
																		"src": "18278:62:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 3668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "18296:3:9",
																					"subExpression": {
																						"id": 3667,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3574,
																						"src": "18296:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3669,
																				"nodeType": "ExpressionStatement",
																				"src": "18296:3:9"
																			},
																			{
																				"id": 3670,
																				"nodeType": "Continue",
																				"src": "18317:8:9"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3672,
																	"nodeType": "TryCatchClause",
																	"src": "18272:68:9"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 3593,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3527,
																		"src": "17634:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3594,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3586,
																		"src": "17643:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3591,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17611:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																			"typeString": "contract SSSettlementPartial"
																		}
																	},
																	"id": 3592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "executeLongPayout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3475,
																	"src": "17611:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (address,uint256) external returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
																	}
																},
																"id": 3595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17611:40:9",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																}
															},
															"id": 3673,
															"nodeType": "TryStatement",
															"src": "17607:733:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3577,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3574,
															"src": "17502:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 3578,
																"name": "orders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3546,
																"src": "17506:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 3579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "17506:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17502:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3581,
															"name": "processed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3552,
															"src": "17523:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3582,
															"name": "maxIterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3529,
															"src": "17535:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17523:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17502:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3675,
												"initializationExpression": {
													"assignments": [
														3574
													],
													"declarations": [
														{
															"constant": false,
															"id": 3574,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3675,
															"src": "17487:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3573,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17487:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3576,
													"initialValue": {
														"hexValue": "30",
														"id": 3575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17499:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17487:13:9"
												},
												"nodeType": "ForStatement",
												"src": "17482:868:9"
											},
											{
												"assignments": [
													3681
												],
												"declarations": [
													{
														"constant": false,
														"id": 3681,
														"mutability": "mutable",
														"name": "finalPayoutUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "18359:59:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
														},
														"typeName": {
															"baseType": {
																"id": 3679,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3678,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "18359:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "18359:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 3680,
															"nodeType": "ArrayTypeName",
															"src": "18359:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3688,
												"initialValue": {
													"arguments": [
														{
															"id": 3686,
															"name": "updateIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3570,
															"src": "18459:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18421:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3683,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3682,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "18425:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "18425:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 3684,
															"nodeType": "ArrayTypeName",
															"src": "18425:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														}
													},
													"id": 3687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18421:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18359:112:9"
											},
											{
												"body": {
													"id": 3707,
													"nodeType": "Block",
													"src": "18523:69:9",
													"statements": [
														{
															"expression": {
																"id": 3705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3699,
																		"name": "finalPayoutUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3681,
																		"src": "18537:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																		}
																	},
																	"id": 3701,
																	"indexExpression": {
																		"id": 3700,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3690,
																		"src": "18556:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18537:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																		"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3702,
																		"name": "tempPayoutUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3560,
																		"src": "18561:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																		}
																	},
																	"id": 3704,
																	"indexExpression": {
																		"id": 3703,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3690,
																		"src": "18579:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18561:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																		"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																	}
																},
																"src": "18537:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																}
															},
															"id": 3706,
															"nodeType": "ExpressionStatement",
															"src": "18537:44:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3693,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3690,
														"src": "18501:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3694,
														"name": "updateIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3570,
														"src": "18505:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18501:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3708,
												"initializationExpression": {
													"assignments": [
														3690
													],
													"declarations": [
														{
															"constant": false,
															"id": 3690,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3708,
															"src": "18486:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3689,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18486:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3692,
													"initialValue": {
														"hexValue": "30",
														"id": 3691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18498:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "18486:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 3697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "18518:3:9",
														"subExpression": {
															"id": 3696,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "18518:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3698,
													"nodeType": "ExpressionStatement",
													"src": "18518:3:9"
												},
												"nodeType": "ForStatement",
												"src": "18481:111:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3709,
														"name": "updateIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3570,
														"src": "18605:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18619:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18605:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3723,
												"nodeType": "IfStatement",
												"src": "18601:105:9",
												"trueBody": {
													"id": 3722,
													"nodeType": "Block",
													"src": "18622:84:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3717,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "18669:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																					"typeString": "contract SSSettlementPartial"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																					"typeString": "contract SSSettlementPartial"
																				}
																			],
																			"id": 3716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18661:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3715,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18661:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18661:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3719,
																		"name": "finalPayoutUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3681,
																		"src": "18676:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																		}
																	],
																	"expression": {
																		"id": 3712,
																		"name": "listingContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3537,
																		"src": "18636:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																			"typeString": "contract ISSListingTemplate"
																		}
																	},
																	"id": 3714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ssUpdate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1087,
																	"src": "18636:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,struct ISSListingTemplate.PayoutUpdate memory[] memory) external"
																	}
																},
																"id": 3720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18636:59:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3721,
															"nodeType": "ExpressionStatement",
															"src": "18636:59:9"
														}
													]
												}
											}
										]
									},
									"id": 3725,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3532,
													"name": "listing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3527,
													"src": "17139:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3533,
											"modifierName": {
												"id": 3531,
												"name": "onlyValidListing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1636,
												"src": "17122:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "17122:25:9"
										}
									],
									"name": "executeLongPayouts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "17073:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17073:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3529,
												"mutability": "mutable",
												"name": "maxIterations",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "17090:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17090:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17072:40:9"
									},
									"returnParameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17148:0:9"
									},
									"scope": 3926,
									"src": "17045:1667:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3924,
										"nodeType": "Block",
										"src": "18822:1566:9",
										"statements": [
											{
												"assignments": [
													3737
												],
												"declarations": [
													{
														"constant": false,
														"id": 3737,
														"mutability": "mutable",
														"name": "listingContract",
														"nodeType": "VariableDeclaration",
														"scope": 3924,
														"src": "18832:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
															"typeString": "contract ISSListingTemplate"
														},
														"typeName": {
															"id": 3736,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3735,
																"name": "ISSListingTemplate",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "18832:18:9"
															},
															"referencedDeclaration": 1264,
															"src": "18832:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																"typeString": "contract ISSListingTemplate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3741,
												"initialValue": {
													"arguments": [
														{
															"id": 3739,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3727,
															"src": "18888:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3738,
														"name": "ISSListingTemplate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "18869:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ISSListingTemplate_$1264_$",
															"typeString": "type(contract ISSListingTemplate)"
														}
													},
													"id": 3740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18869:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
														"typeString": "contract ISSListingTemplate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18832:64:9"
											},
											{
												"assignments": [
													3746
												],
												"declarations": [
													{
														"constant": false,
														"id": 3746,
														"mutability": "mutable",
														"name": "orders",
														"nodeType": "VariableDeclaration",
														"scope": 3924,
														"src": "18906:24:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3744,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18906:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3745,
															"nodeType": "ArrayTypeName",
															"src": "18906:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3750,
												"initialValue": {
													"baseExpression": {
														"id": 3747,
														"name": "activeShortPayouts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "18933:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 3749,
													"indexExpression": {
														"id": 3748,
														"name": "listing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3727,
														"src": "18952:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18933:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18906:54:9"
											},
											{
												"assignments": [
													3752
												],
												"declarations": [
													{
														"constant": false,
														"id": 3752,
														"mutability": "mutable",
														"name": "processed",
														"nodeType": "VariableDeclaration",
														"scope": 3924,
														"src": "18970:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18970:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3754,
												"initialValue": {
													"hexValue": "30",
													"id": 3753,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18990:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18970:21:9"
											},
											{
												"assignments": [
													3760
												],
												"declarations": [
													{
														"constant": false,
														"id": 3760,
														"mutability": "mutable",
														"name": "tempPayoutUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 3924,
														"src": "19001:58:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
														},
														"typeName": {
															"baseType": {
																"id": 3758,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3757,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "19001:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "19001:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 3759,
															"nodeType": "ArrayTypeName",
															"src": "19001:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3768,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3765,
																"name": "orders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3746,
																"src": "19100:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 3766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "19100:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "19062:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3762,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3761,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "19066:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "19066:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 3763,
															"nodeType": "ArrayTypeName",
															"src": "19066:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														}
													},
													"id": 3767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19062:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19001:113:9"
											},
											{
												"assignments": [
													3770
												],
												"declarations": [
													{
														"constant": false,
														"id": 3770,
														"mutability": "mutable",
														"name": "updateIndex",
														"nodeType": "VariableDeclaration",
														"scope": 3924,
														"src": "19124:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19124:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3772,
												"initialValue": {
													"hexValue": "30",
													"id": 3771,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19146:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19124:23:9"
											},
											{
												"body": {
													"id": 3874,
													"nodeType": "Block",
													"src": "19227:799:9",
													"statements": [
														{
															"assignments": [
																3786
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3786,
																	"mutability": "mutable",
																	"name": "orderId",
																	"nodeType": "VariableDeclaration",
																	"scope": 3874,
																	"src": "19241:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3785,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "19241:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3790,
															"initialValue": {
																"baseExpression": {
																	"id": 3787,
																	"name": "orders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3746,
																	"src": "19259:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 3789,
																"indexExpression": {
																	"id": 3788,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3774,
																	"src": "19266:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19259:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19241:27:9"
														},
														{
															"clauses": [
																{
																	"block": {
																		"id": 3865,
																		"nodeType": "Block",
																		"src": "19393:554:9",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3801,
																							"name": "payoutUpdates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3799,
																							"src": "19415:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																							}
																						},
																						"id": 3802,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "19415:20:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3803,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19439:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "19415:25:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3810,
																				"nodeType": "IfStatement",
																				"src": "19411:105:9",
																				"trueBody": {
																					"id": 3809,
																					"nodeType": "Block",
																					"src": "19442:74:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3806,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "19464:3:9",
																								"subExpression": {
																									"id": 3805,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3774,
																									"src": "19464:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3807,
																							"nodeType": "ExpressionStatement",
																							"src": "19464:3:9"
																						},
																						{
																							"id": 3808,
																							"nodeType": "Continue",
																							"src": "19489:8:9"
																						}
																					]
																				}
																			},
																			{
																				"body": {
																					"id": 3831,
																					"nodeType": "Block",
																					"src": "19584:92:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3829,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 3822,
																										"name": "tempPayoutUpdates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3760,
																										"src": "19606:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																										}
																									},
																									"id": 3825,
																									"indexExpression": {
																										"id": 3824,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "++",
																										"prefix": false,
																										"src": "19624:13:9",
																										"subExpression": {
																											"id": 3823,
																											"name": "updateIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3770,
																											"src": "19624:11:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "19606:32:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																										"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 3826,
																										"name": "payoutUpdates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3799,
																										"src": "19641:13:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																											"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																										}
																									},
																									"id": 3828,
																									"indexExpression": {
																										"id": 3827,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3812,
																										"src": "19655:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "19641:16:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																										"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																									}
																								},
																								"src": "19606:51:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																									"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																								}
																							},
																							"id": 3830,
																							"nodeType": "ExpressionStatement",
																							"src": "19606:51:9"
																						}
																					]
																				},
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3815,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3812,
																						"src": "19553:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 3816,
																							"name": "payoutUpdates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3799,
																							"src": "19557:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																							}
																						},
																						"id": 3817,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "19557:20:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19553:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3832,
																				"initializationExpression": {
																					"assignments": [
																						3812
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 3812,
																							"mutability": "mutable",
																							"name": "j",
																							"nodeType": "VariableDeclaration",
																							"scope": 3832,
																							"src": "19538:9:9",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 3811,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "19538:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 3814,
																					"initialValue": {
																						"hexValue": "30",
																						"id": 3813,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19550:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "19538:13:9"
																				},
																				"loopExpression": {
																					"expression": {
																						"id": 3820,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "19579:3:9",
																						"subExpression": {
																							"id": 3819,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3812,
																							"src": "19579:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3821,
																					"nodeType": "ExpressionStatement",
																					"src": "19579:3:9"
																				},
																				"nodeType": "ForStatement",
																				"src": "19533:143:9"
																			},
																			{
																				"expression": {
																					"id": 3834,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "19693:11:9",
																					"subExpression": {
																						"id": 3833,
																						"name": "processed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3752,
																						"src": "19693:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3835,
																				"nodeType": "ExpressionStatement",
																				"src": "19693:11:9"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3842,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 3836,
																								"name": "payoutPendingAmounts",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1596,
																								"src": "19726:20:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 3838,
																							"indexExpression": {
																								"id": 3837,
																								"name": "listing",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3727,
																								"src": "19747:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19726:29:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 3840,
																						"indexExpression": {
																							"id": 3839,
																							"name": "orderId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3786,
																							"src": "19756:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "19726:38:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3841,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19768:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "19726:43:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 3863,
																					"nodeType": "Block",
																					"src": "19889:44:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3861,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "19911:3:9",
																								"subExpression": {
																									"id": 3860,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3774,
																									"src": "19911:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3862,
																							"nodeType": "ExpressionStatement",
																							"src": "19911:3:9"
																						}
																					]
																				},
																				"id": 3864,
																				"nodeType": "IfStatement",
																				"src": "19722:211:9",
																				"trueBody": {
																					"id": 3859,
																					"nodeType": "Block",
																					"src": "19771:112:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 3852,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 3843,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3746,
																										"src": "19793:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3845,
																									"indexExpression": {
																										"id": 3844,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3774,
																										"src": "19800:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "19793:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 3846,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3746,
																										"src": "19805:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3851,
																									"indexExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 3850,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 3847,
																												"name": "orders",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3746,
																												"src": "19812:6:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																													"typeString": "uint256[] storage pointer"
																												}
																											},
																											"id": 3848,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "length",
																											"nodeType": "MemberAccess",
																											"src": "19812:13:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 3849,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "19828:1:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "19812:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "19805:25:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "19793:37:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3853,
																							"nodeType": "ExpressionStatement",
																							"src": "19793:37:9"
																						},
																						{
																							"expression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 3854,
																										"name": "orders",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3746,
																										"src": "19852:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																											"typeString": "uint256[] storage pointer"
																										}
																									},
																									"id": 3856,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "pop",
																									"nodeType": "MemberAccess",
																									"src": "19852:10:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																										"typeString": "function ()"
																									}
																								},
																								"id": 3857,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19852:12:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 3858,
																							"nodeType": "ExpressionStatement",
																							"src": "19852:12:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3866,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3800,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3799,
																				"mutability": "mutable",
																				"name": "payoutUpdates",
																				"nodeType": "VariableDeclaration",
																				"scope": 3866,
																				"src": "19337:54:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
																				},
																				"typeName": {
																					"baseType": {
																						"id": 3797,
																						"nodeType": "UserDefinedTypeName",
																						"pathNode": {
																							"id": 3796,
																							"name": "ISSListingTemplate.PayoutUpdate",
																							"nodeType": "IdentifierPath",
																							"referencedDeclaration": 1028,
																							"src": "19337:31:9"
																						},
																						"referencedDeclaration": 1028,
																						"src": "19337:31:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																							"typeString": "struct ISSListingTemplate.PayoutUpdate"
																						}
																					},
																					"id": 3798,
																					"nodeType": "ArrayTypeName",
																					"src": "19337:33:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																						"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "19336:56:9"
																	},
																	"src": "19328:619:9"
																},
																{
																	"block": {
																		"id": 3871,
																		"nodeType": "Block",
																		"src": "19954:62:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 3868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "19972:3:9",
																					"subExpression": {
																						"id": 3867,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3774,
																						"src": "19972:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3869,
																				"nodeType": "ExpressionStatement",
																				"src": "19972:3:9"
																			},
																			{
																				"id": 3870,
																				"nodeType": "Continue",
																				"src": "19993:8:9"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3872,
																	"nodeType": "TryCatchClause",
																	"src": "19948:68:9"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 3793,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3727,
																		"src": "19310:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3794,
																		"name": "orderId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3786,
																		"src": "19319:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3791,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "19286:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																			"typeString": "contract SSSettlementPartial"
																		}
																	},
																	"id": 3792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "executeShortPayout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3525,
																	"src": "19286:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (address,uint256) external returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
																	}
																},
																"id": 3795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19286:41:9",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																}
															},
															"id": 3873,
															"nodeType": "TryStatement",
															"src": "19282:734:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3777,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3774,
															"src": "19177:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 3778,
																"name": "orders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3746,
																"src": "19181:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 3779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "19181:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19177:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3781,
															"name": "processed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3752,
															"src": "19198:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3782,
															"name": "maxIterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3729,
															"src": "19210:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19198:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19177:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3875,
												"initializationExpression": {
													"assignments": [
														3774
													],
													"declarations": [
														{
															"constant": false,
															"id": 3774,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3875,
															"src": "19162:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3773,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "19162:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3776,
													"initialValue": {
														"hexValue": "30",
														"id": 3775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19174:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "19162:13:9"
												},
												"nodeType": "ForStatement",
												"src": "19157:869:9"
											},
											{
												"assignments": [
													3881
												],
												"declarations": [
													{
														"constant": false,
														"id": 3881,
														"mutability": "mutable",
														"name": "finalPayoutUpdates",
														"nodeType": "VariableDeclaration",
														"scope": 3924,
														"src": "20035:59:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
														},
														"typeName": {
															"baseType": {
																"id": 3879,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3878,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "20035:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "20035:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 3880,
															"nodeType": "ArrayTypeName",
															"src": "20035:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3888,
												"initialValue": {
													"arguments": [
														{
															"id": 3886,
															"name": "updateIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3770,
															"src": "20135:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "20097:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct ISSListingTemplate.PayoutUpdate memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3883,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3882,
																	"name": "ISSListingTemplate.PayoutUpdate",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1028,
																	"src": "20101:31:9"
																},
																"referencedDeclaration": 1028,
																"src": "20101:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_storage_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate"
																}
															},
															"id": 3884,
															"nodeType": "ArrayTypeName",
															"src": "20101:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_storage_$dyn_storage_ptr",
																"typeString": "struct ISSListingTemplate.PayoutUpdate[]"
															}
														}
													},
													"id": 3887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20097:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20035:112:9"
											},
											{
												"body": {
													"id": 3907,
													"nodeType": "Block",
													"src": "20199:69:9",
													"statements": [
														{
															"expression": {
																"id": 3905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3899,
																		"name": "finalPayoutUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3881,
																		"src": "20213:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																		}
																	},
																	"id": 3901,
																	"indexExpression": {
																		"id": 3900,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3890,
																		"src": "20232:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20213:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																		"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3902,
																		"name": "tempPayoutUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3760,
																		"src": "20237:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																		}
																	},
																	"id": 3904,
																	"indexExpression": {
																		"id": 3903,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3890,
																		"src": "20255:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20237:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																		"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																	}
																},
																"src": "20213:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutUpdate_$1028_memory_ptr",
																	"typeString": "struct ISSListingTemplate.PayoutUpdate memory"
																}
															},
															"id": 3906,
															"nodeType": "ExpressionStatement",
															"src": "20213:44:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3893,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3890,
														"src": "20177:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3894,
														"name": "updateIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3770,
														"src": "20181:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20177:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3908,
												"initializationExpression": {
													"assignments": [
														3890
													],
													"declarations": [
														{
															"constant": false,
															"id": 3890,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3908,
															"src": "20162:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3889,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20162:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3892,
													"initialValue": {
														"hexValue": "30",
														"id": 3891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20174:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20162:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 3897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "20194:3:9",
														"subExpression": {
															"id": 3896,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3890,
															"src": "20194:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3898,
													"nodeType": "ExpressionStatement",
													"src": "20194:3:9"
												},
												"nodeType": "ForStatement",
												"src": "20157:111:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3909,
														"name": "updateIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3770,
														"src": "20281:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20295:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20281:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3923,
												"nodeType": "IfStatement",
												"src": "20277:105:9",
												"trueBody": {
													"id": 3922,
													"nodeType": "Block",
													"src": "20298:84:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3917,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "20345:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																					"typeString": "contract SSSettlementPartial"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SSSettlementPartial_$3926",
																					"typeString": "contract SSSettlementPartial"
																				}
																			],
																			"id": 3916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20337:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20337:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20337:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3919,
																		"name": "finalPayoutUpdates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3881,
																		"src": "20352:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct ISSListingTemplate.PayoutUpdate memory[] memory"
																		}
																	],
																	"expression": {
																		"id": 3912,
																		"name": "listingContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3737,
																		"src": "20312:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ISSListingTemplate_$1264",
																			"typeString": "contract ISSListingTemplate"
																		}
																	},
																	"id": 3914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ssUpdate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1087,
																	"src": "20312:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_struct$_PayoutUpdate_$1028_memory_ptr_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,struct ISSListingTemplate.PayoutUpdate memory[] memory) external"
																	}
																},
																"id": 3920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20312:59:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3921,
															"nodeType": "ExpressionStatement",
															"src": "20312:59:9"
														}
													]
												}
											}
										]
									},
									"id": 3925,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3732,
													"name": "listing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3727,
													"src": "18813:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3733,
											"modifierName": {
												"id": 3731,
												"name": "onlyValidListing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1636,
												"src": "18796:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "18796:25:9"
										}
									],
									"name": "executeShortPayouts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3727,
												"mutability": "mutable",
												"name": "listing",
												"nodeType": "VariableDeclaration",
												"scope": 3925,
												"src": "18747:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18747:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3729,
												"mutability": "mutable",
												"name": "maxIterations",
												"nodeType": "VariableDeclaration",
												"scope": 3925,
												"src": "18764:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18764:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18746:40:9"
									},
									"returnParameters": {
										"id": 3734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18822:0:9"
									},
									"scope": 3926,
									"src": "18718:1670:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3927,
							"src": "2907:17483:9"
						}
					],
					"src": "41:20349:9"
				},
				"id": 9
			}
		}
	}
}