{
	"id": "53e0e68382c1c8f208556b1c87db91fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DOHL.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title Dexhune ERC20 Root Implementation\r\n\r\n/*\r\n *    ||_ __  __\r\n *   (|| |  \\/  \\|__||\r\n *   _||)|__/\\__/|  ||__\r\n *    ||\r\n */\r\n\r\npragma solidity ^0.8.28;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./Ownable.sol\";\r\nimport \"./interfaces/AggregatorInterface.sol\";\r\n\r\ncontract DOHL is ERC20, Ownable {\r\n    address public tokenZero;\r\n    address public taxCollector;\r\n    address public liquidityAddress;\r\n    address public oracleAddress;\r\n\r\n    uint256 private _stub2;\r\n\r\n    AggregatorInterface public aggregator;\r\n\r\n    uint256 private constant INITIAL_SUPPLY = 4e18;\r\n    uint256 private constant FEE_PERC = 500; // 0.5 fee * 10k\r\n\r\n    constructor() ERC20(\"Link Dollar\", \"DOHL\") {\r\n        _mint(_owner, INITIAL_SUPPLY);\r\n    }\r\n\r\n    function initialize(\r\n        address liquidityAddr,\r\n        address oracleAddr,\r\n        address tokenZeroAddr,\r\n        address taxAddr\r\n    ) external onlyOwner {\r\n        require(liquidityAddress == address(0));\r\n        require(tokenZero == address(0));\r\n        require(taxCollector == address(0));\r\n\r\n        liquidityAddress = liquidityAddr;\r\n        tokenZero = tokenZeroAddr;\r\n        taxCollector = taxAddr;\r\n        oracleAddress = oracleAddr;\r\n        aggregator = AggregatorInterface(oracleAddress);\r\n\r\n        _mint(liquidityAddress, 1e18);\r\n        rebase();\r\n    }\r\n\r\n    function getBalances()\r\n        external\r\n        view\r\n        returns (uint256 balanceZero, uint256 balanceOne)\r\n    {\r\n        balanceZero = IERC20(tokenZero).balanceOf(liquidityAddress);\r\n        balanceOne = balanceOf(liquidityAddress);\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n\r\n        rebase();\r\n\r\n        uint256 transferAmount = value;\r\n        uint256 fee = (value * FEE_PERC) / 10_000;\r\n        (uint256 amount, bool negative) = _absDiff(value, fee);\r\n\r\n        if (!negative && fee > 0) {\r\n            transferAmount = amount;\r\n            _transfer(from, taxCollector, fee);\r\n        }\r\n\r\n        _transfer(from, to, transferAmount);\r\n        rebase();\r\n        return true;\r\n    }\r\n\r\n    function _absDiff(\r\n        uint256 v1,\r\n        uint256 v2\r\n    ) private pure returns (uint256 diff, bool negative) {\r\n        if (v2 > v1) {\r\n            uint256 tmp = v1;\r\n            v1 = v2;\r\n            v2 = tmp;\r\n            negative = true;\r\n        }\r\n\r\n        diff = v1 - v2;\r\n    }\r\n\r\n    function getPrice() public view returns (int256) {\r\n        return aggregator.latestAnswer();\r\n    }\r\n\r\n    function rebase() public {\r\n        uint256 price = uint256(getPrice());\r\n        uint256 balanceZero = balanceOf(address(liquidityAddress));\r\n        uint256 balanceOne = balanceOf(address(this));\r\n\r\n        uint256 lastRebase = balanceZero * price;\r\n\r\n        (uint256 rebaseFactor, bool negative) = _absDiff(\r\n            lastRebase,\r\n            balanceOne\r\n        );\r\n\r\n        if (!negative) {\r\n            _mint(liquidityAddress, rebaseFactor);\r\n        } else {\r\n            _burn(liquidityAddress, rebaseFactor);\r\n        }\r\n    }\r\n}\r\n"
			},
			"contracts/interfaces/AggregatorInterface.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title AggregatorInterface\r\n\r\n\r\n/*\r\n*    ||_ __  __         \r\n*   (|| |  \\/  \\|__||   \r\n*   _||)|__/\\__/|  ||__ \r\n*    ||                 \r\n*/\r\n\r\npragma solidity ^0.8.28;\r\n\r\n\r\ninterface AggregatorInterface {\r\n  function latestAnswer() external view returns (int256);\r\n  function latestTimestamp() external view returns (uint256);\r\n  function latestRound() external view returns (uint256);\r\n  function getAnswer(uint256 roundId) external view returns (int256);\r\n  function getTimestamp(uint256 roundId) external view returns (uint256);\r\n\r\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\r\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\r\n}"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title Owner Base Class\r\n/*\r\n*    ||_ __  __         \r\n*   (|| |  \\/  \\|__||   \r\n*   _||)|__/\\__/|  ||__ \r\n*    ||                 \r\n*/\r\npragma solidity ^0.8.28;\r\n\r\ninterface IOwnable {\r\n    function transferOwnership(address newOwner) external;\r\n}\r\n\r\ncontract Ownable is IOwnable {\r\n    address internal _owner;\r\n\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipRenounced(_owner);\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DOHL.sol": {
				"DOHL": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "aggregator",
							"outputs": [
								{
									"internalType": "contract AggregatorInterface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balanceZero",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceOne",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "liquidityAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracleAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenZeroAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "taxAddr",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracleAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenZero",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DOHL.sol\":337:3249  contract DOHL is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DOHL.sol\":711:802  constructor() ERC20(\"Link Dollar\", \"DOHL\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x4c696e6b20446f6c6c6172000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x444f484c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Ownable.sol\":581:591  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":572:578  _owner */\n  0x05\n  0x00\n    /* \"contracts/Ownable.sol\":572:591  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DOHL.sol\":765:794  _mint(_owner, INITIAL_SUPPLY) */\n  tag_11\n    /* \"contracts/DOHL.sol\":771:777  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/DOHL.sol\":635:639  4e18 */\n  0x3782dace9d900000\n    /* \"contracts/DOHL.sol\":765:770  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/DOHL.sol\":765:794  _mint(_owner, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/DOHL.sol\":337:3249  contract DOHL is ERC20, Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_18\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_32:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_33:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_34:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_35:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_62:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_64\n  tag_34\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":714:798   */\ntag_63:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_36:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_37:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_38:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_39:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_69\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1429:1468   */\n  tag_70\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_38\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_40:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_41:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_42:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_74\n    /* \"#utility.yul\":1818:1852   */\n  tag_75\n    /* \"#utility.yul\":1827:1851   */\n  tag_76\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1818:1852   */\n  tag_41\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1800:1853   */\n  tag_40\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_43:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_44:\n    /* \"#utility.yul\":2056:2095   */\n  tag_79\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_42\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2117:2208   */\n  tag_80\n    /* \"#utility.yul\":2166:2207   */\n  tag_81\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_43\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_39\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_45:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_46:\n    /* \"#utility.yul\":2377:2409   */\n  tag_84\n  tag_45\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2418:2483   */\n  tag_85\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_44\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_47:\n    /* \"#utility.yul\":2555:2675   */\ntag_87:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_90\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_46\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_48:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_93\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_36\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2906:2935   */\n  tag_94\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_37\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_95:\n    /* \"#utility.yul\":3133:3213   */\n  tag_96\n    /* \"#utility.yul\":3189:3211   */\n  tag_97\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_37\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_92:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_49:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_50:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_100\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_49\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_51:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_102\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_50\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_104\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_106\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4038:4094   */\ntag_105:\n    /* \"#utility.yul\":4118:4156   */\n  tag_107\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_35\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4203:4270   */\n  tag_108\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_48\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_110\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_111:\n    /* \"#utility.yul\":5144:5211   */\n  tag_112\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_51\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_109)\n    /* \"#utility.yul\":4365:4983   */\ntag_110:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_113\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_36\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_114:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_118\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_50\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_117:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_109:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_52:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_53:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_121\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_52\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_54:\n    /* \"#utility.yul\":5555:5579   */\n  tag_123\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_53\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_17:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_125\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_54\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_55:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_23:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_128\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_40\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_129\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_40\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_131\n  tag_55\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6154:6190   */\ntag_130:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_56:\n    /* \"#utility.yul\":6290:6314   */\n  tag_133\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_40\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_27:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_135\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_54\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6608:6680   */\n  tag_136\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_56\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6690:6762   */\n  tag_137\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_56\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_31:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_139\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_56\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DOHL.sol\":337:3249  contract DOHL is ERC20, Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DOHL.sol\":337:3249  contract DOHL is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f32d59b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xaf14052c\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xaf14052c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xbea1dcf8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf8c8765e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfaad24f4\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x8f32d59b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa89ae4ba\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x245a7bfc\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x245a7bfc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3221c93f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x113e08\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/DOHL.sol\":1400:1648  function getBalances()... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DOHL.sol\":1656:2288  function transferFrom(... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DOHL.sol\":547:584  AggregatorInterface public aggregator */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DOHL.sol\":441:472  address public liquidityAddress */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":872:998  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/Ownable.sol\":607:686  function owner() public view returns (address) {... */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":772:864  function isOwner() public view returns (bool) {... */\n    tag_14:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DOHL.sol\":2598:2698  function getPrice() public view returns (int256) {... */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DOHL.sol\":479:507  address public oracleAddress */\n    tag_17:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DOHL.sol\":2706:3246  function rebase() public {... */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/DOHL.sol\":407:434  address public taxCollector */\n    tag_20:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1006:1115  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/DOHL.sol\":810:1392  function initialize(... */\n    tag_23:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/DOHL.sol\":376:400  address public tokenZero */\n    tag_24:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DOHL.sol\":1400:1648  function getBalances()... */\n    tag_29:\n        /* \"contracts/DOHL.sol\":1473:1492  uint256 balanceZero */\n      0x00\n        /* \"contracts/DOHL.sol\":1494:1512  uint256 balanceOne */\n      0x00\n        /* \"contracts/DOHL.sol\":1551:1560  tokenZero */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1544:1571  IERC20(tokenZero).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/DOHL.sol\":1572:1588  liquidityAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1544:1589  IERC20(tokenZero).balanceOf(liquidityAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"contracts/DOHL.sol\":1530:1589  balanceZero = IERC20(tokenZero).balanceOf(liquidityAddress) */\n      swap2\n      pop\n        /* \"contracts/DOHL.sol\":1613:1640  balanceOf(liquidityAddress) */\n      tag_116\n        /* \"contracts/DOHL.sol\":1623:1639  liquidityAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1613:1622  balanceOf */\n      tag_66\n        /* \"contracts/DOHL.sol\":1613:1640  balanceOf(liquidityAddress) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/DOHL.sol\":1600:1640  balanceOne = balanceOf(liquidityAddress) */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":1400:1648  function getBalances()... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DOHL.sol\":1656:2288  function transferFrom(... */\n    tag_49:\n        /* \"contracts/DOHL.sol\":1778:1782  bool */\n      0x00\n        /* \"contracts/DOHL.sol\":1795:1810  address spender */\n      0x00\n        /* \"contracts/DOHL.sol\":1813:1825  _msgSender() */\n      tag_131\n        /* \"contracts/DOHL.sol\":1813:1823  _msgSender */\n      tag_126\n        /* \"contracts/DOHL.sol\":1813:1825  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/DOHL.sol\":1795:1825  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":1836:1873  _spendAllowance(from, spender, value) */\n      tag_132\n        /* \"contracts/DOHL.sol\":1852:1856  from */\n      dup6\n        /* \"contracts/DOHL.sol\":1858:1865  spender */\n      dup3\n        /* \"contracts/DOHL.sol\":1867:1872  value */\n      dup6\n        /* \"contracts/DOHL.sol\":1836:1851  _spendAllowance */\n      tag_133\n        /* \"contracts/DOHL.sol\":1836:1873  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/DOHL.sol\":1886:1894  rebase() */\n      tag_134\n        /* \"contracts/DOHL.sol\":1886:1892  rebase */\n      tag_91\n        /* \"contracts/DOHL.sol\":1886:1894  rebase() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/DOHL.sol\":1907:1929  uint256 transferAmount */\n      0x00\n        /* \"contracts/DOHL.sol\":1932:1937  value */\n      dup4\n        /* \"contracts/DOHL.sol\":1907:1937  uint256 transferAmount = value */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":1948:1959  uint256 fee */\n      0x00\n        /* \"contracts/DOHL.sol\":1983:1989  10_000 */\n      0x2710\n        /* \"contracts/DOHL.sol\":682:685  500 */\n      0x01f4\n        /* \"contracts/DOHL.sol\":1963:1968  value */\n      dup7\n        /* \"contracts/DOHL.sol\":1963:1979  value * FEE_PERC */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/DOHL.sol\":1962:1989  (value * FEE_PERC) / 10_000 */\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/DOHL.sol\":1948:1989  uint256 fee = (value * FEE_PERC) / 10_000 */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":2001:2015  uint256 amount */\n      0x00\n        /* \"contracts/DOHL.sol\":2017:2030  bool negative */\n      0x00\n        /* \"contracts/DOHL.sol\":2034:2054  _absDiff(value, fee) */\n      tag_139\n        /* \"contracts/DOHL.sol\":2043:2048  value */\n      dup8\n        /* \"contracts/DOHL.sol\":2050:2053  fee */\n      dup5\n        /* \"contracts/DOHL.sol\":2034:2042  _absDiff */\n      tag_140\n        /* \"contracts/DOHL.sol\":2034:2054  _absDiff(value, fee) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/DOHL.sol\":2000:2054  (uint256 amount, bool negative) = _absDiff(value, fee) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/DOHL.sol\":2072:2080  negative */\n      dup1\n        /* \"contracts/DOHL.sol\":2071:2080  !negative */\n      iszero\n        /* \"contracts/DOHL.sol\":2071:2091  !negative && fee > 0 */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/DOHL.sol\":2090:2091  0 */\n      0x00\n        /* \"contracts/DOHL.sol\":2084:2087  fee */\n      dup4\n        /* \"contracts/DOHL.sol\":2084:2091  fee > 0 */\n      gt\n        /* \"contracts/DOHL.sol\":2071:2091  !negative && fee > 0 */\n    tag_141:\n        /* \"contracts/DOHL.sol\":2067:2192  if (!negative && fee > 0) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"contracts/DOHL.sol\":2125:2131  amount */\n      dup2\n        /* \"contracts/DOHL.sol\":2108:2131  transferAmount = amount */\n      swap4\n      pop\n        /* \"contracts/DOHL.sol\":2146:2180  _transfer(from, taxCollector, fee) */\n      tag_143\n        /* \"contracts/DOHL.sol\":2156:2160  from */\n      dup10\n        /* \"contracts/DOHL.sol\":2162:2174  taxCollector */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":2176:2179  fee */\n      dup6\n        /* \"contracts/DOHL.sol\":2146:2155  _transfer */\n      tag_144\n        /* \"contracts/DOHL.sol\":2146:2180  _transfer(from, taxCollector, fee) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/DOHL.sol\":2067:2192  if (!negative && fee > 0) {... */\n    tag_142:\n        /* \"contracts/DOHL.sol\":2204:2239  _transfer(from, to, transferAmount) */\n      tag_145\n        /* \"contracts/DOHL.sol\":2214:2218  from */\n      dup10\n        /* \"contracts/DOHL.sol\":2220:2222  to */\n      dup10\n        /* \"contracts/DOHL.sol\":2224:2238  transferAmount */\n      dup7\n        /* \"contracts/DOHL.sol\":2204:2213  _transfer */\n      tag_144\n        /* \"contracts/DOHL.sol\":2204:2239  _transfer(from, to, transferAmount) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/DOHL.sol\":2250:2258  rebase() */\n      tag_146\n        /* \"contracts/DOHL.sol\":2250:2256  rebase */\n      tag_91\n        /* \"contracts/DOHL.sol\":2250:2258  rebase() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/DOHL.sol\":2276:2280  true */\n      0x01\n        /* \"contracts/DOHL.sol\":2269:2280  return true */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DOHL.sol\":1656:2288  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DOHL.sol\":547:584  AggregatorInterface public aggregator */\n    tag_52:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DOHL.sol\":441:472  address public liquidityAddress */\n    tag_60:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":872:998  function renounceOwnership() public onlyOwner {... */\n    tag_69:\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      tag_150\n        /* \"contracts/Ownable.sol\":734:741  isOwner */\n      tag_74\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/Ownable.sol\":726:744  require(isOwner()) */\n      tag_151\n      jumpi\n      revert(0x00, 0x00)\n    tag_151:\n        /* \"contracts/Ownable.sol\":953:959  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":934:960  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":988:989  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":971:977  _owner */\n      0x05\n      0x00\n        /* \"contracts/Ownable.sol\":971:990  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":872:998  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":607:686  function owner() public view returns (address) {... */\n    tag_71:\n        /* \"contracts/Ownable.sol\":645:652  address */\n      0x00\n        /* \"contracts/Ownable.sol\":672:678  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":665:678  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":607:686  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":772:864  function isOwner() public view returns (bool) {... */\n    tag_74:\n        /* \"contracts/Ownable.sol\":812:816  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":850:856  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":836:856  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":836:846  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":836:856  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":829:856  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":772:864  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_119\n      jump\t// in\n    tag_156:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_119\n      jump\t// in\n    tag_157:\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_159\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_158)\n    tag_159:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_160:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_160\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DOHL.sol\":2598:2698  function getPrice() public view returns (int256) {... */\n    tag_80:\n        /* \"contracts/DOHL.sol\":2639:2645  int256 */\n      0x00\n        /* \"contracts/DOHL.sol\":2665:2675  aggregator */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":2665:2688  aggregator.latestAnswer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x50d25bcd\n        /* \"contracts/DOHL.sol\":2665:2690  aggregator.latestAnswer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"contracts/DOHL.sol\":2658:2690  return aggregator.latestAnswer() */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":2598:2698  function getPrice() public view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DOHL.sol\":479:507  address public oracleAddress */\n    tag_84:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DOHL.sol\":2706:3246  function rebase() public {... */\n    tag_91:\n        /* \"contracts/DOHL.sol\":2742:2755  uint256 price */\n      0x00\n        /* \"contracts/DOHL.sol\":2766:2776  getPrice() */\n      tag_170\n        /* \"contracts/DOHL.sol\":2766:2774  getPrice */\n      tag_80\n        /* \"contracts/DOHL.sol\":2766:2776  getPrice() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/DOHL.sol\":2742:2777  uint256 price = uint256(getPrice()) */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":2788:2807  uint256 balanceZero */\n      0x00\n        /* \"contracts/DOHL.sol\":2810:2846  balanceOf(address(liquidityAddress)) */\n      tag_171\n        /* \"contracts/DOHL.sol\":2828:2844  liquidityAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":2810:2819  balanceOf */\n      tag_66\n        /* \"contracts/DOHL.sol\":2810:2846  balanceOf(address(liquidityAddress)) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/DOHL.sol\":2788:2846  uint256 balanceZero = balanceOf(address(liquidityAddress)) */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":2857:2875  uint256 balanceOne */\n      0x00\n        /* \"contracts/DOHL.sol\":2878:2902  balanceOf(address(this)) */\n      tag_172\n        /* \"contracts/DOHL.sol\":2896:2900  this */\n      address\n        /* \"contracts/DOHL.sol\":2878:2887  balanceOf */\n      tag_66\n        /* \"contracts/DOHL.sol\":2878:2902  balanceOf(address(this)) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/DOHL.sol\":2857:2902  uint256 balanceOne = balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":2915:2933  uint256 lastRebase */\n      0x00\n        /* \"contracts/DOHL.sol\":2950:2955  price */\n      dup4\n        /* \"contracts/DOHL.sol\":2936:2947  balanceZero */\n      dup4\n        /* \"contracts/DOHL.sol\":2936:2955  balanceZero * price */\n      tag_173\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_173:\n        /* \"contracts/DOHL.sol\":2915:2955  uint256 lastRebase = balanceZero * price */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":2969:2989  uint256 rebaseFactor */\n      0x00\n        /* \"contracts/DOHL.sol\":2991:3004  bool negative */\n      0x00\n        /* \"contracts/DOHL.sol\":3008:3077  _absDiff(... */\n      tag_174\n        /* \"contracts/DOHL.sol\":3031:3041  lastRebase */\n      dup4\n        /* \"contracts/DOHL.sol\":3056:3066  balanceOne */\n      dup6\n        /* \"contracts/DOHL.sol\":3008:3016  _absDiff */\n      tag_140\n        /* \"contracts/DOHL.sol\":3008:3077  _absDiff(... */\n      jump\t// in\n    tag_174:\n        /* \"contracts/DOHL.sol\":2968:3077  (uint256 rebaseFactor, bool negative) = _absDiff(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/DOHL.sol\":3095:3103  negative */\n      dup1\n        /* \"contracts/DOHL.sol\":3090:3239  if (!negative) {... */\n      tag_175\n      jumpi\n        /* \"contracts/DOHL.sol\":3120:3157  _mint(liquidityAddress, rebaseFactor) */\n      tag_176\n        /* \"contracts/DOHL.sol\":3126:3142  liquidityAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":3144:3156  rebaseFactor */\n      dup4\n        /* \"contracts/DOHL.sol\":3120:3125  _mint */\n      tag_177\n        /* \"contracts/DOHL.sol\":3120:3157  _mint(liquidityAddress, rebaseFactor) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/DOHL.sol\":3090:3239  if (!negative) {... */\n      jump(tag_178)\n    tag_175:\n        /* \"contracts/DOHL.sol\":3190:3227  _burn(liquidityAddress, rebaseFactor) */\n      tag_179\n        /* \"contracts/DOHL.sol\":3196:3212  liquidityAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":3214:3226  rebaseFactor */\n      dup4\n        /* \"contracts/DOHL.sol\":3190:3195  _burn */\n      tag_180\n        /* \"contracts/DOHL.sol\":3190:3227  _burn(liquidityAddress, rebaseFactor) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/DOHL.sol\":3090:3239  if (!negative) {... */\n    tag_178:\n        /* \"contracts/DOHL.sol\":2731:3246  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DOHL.sol\":2706:3246  function rebase() public {... */\n      jump\t// out\n        /* \"contracts/DOHL.sol\":407:434  address public taxCollector */\n    tag_93:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1006:1115  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_102:\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      tag_183\n        /* \"contracts/Ownable.sol\":734:741  isOwner */\n      tag_74\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Ownable.sol\":726:744  require(isOwner()) */\n      tag_184\n      jumpi\n      revert(0x00, 0x00)\n    tag_184:\n        /* \"contracts/Ownable.sol\":1079:1107  _transferOwnership(newOwner) */\n      tag_186\n        /* \"contracts/Ownable.sol\":1098:1106  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1079:1097  _transferOwnership */\n      tag_187\n        /* \"contracts/Ownable.sol\":1079:1107  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/Ownable.sol\":1006:1115  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DOHL.sol\":810:1392  function initialize(... */\n    tag_106:\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      tag_189\n        /* \"contracts/Ownable.sol\":734:741  isOwner */\n      tag_74\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/Ownable.sol\":726:744  require(isOwner()) */\n      tag_190\n      jumpi\n      revert(0x00, 0x00)\n    tag_190:\n        /* \"contracts/DOHL.sol\":1022:1023  0 */\n      0x00\n        /* \"contracts/DOHL.sol\":994:1024  liquidityAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":994:1010  liquidityAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":994:1024  liquidityAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DOHL.sol\":986:1025  require(liquidityAddress == address(0)) */\n      tag_192\n      jumpi\n      revert(0x00, 0x00)\n    tag_192:\n        /* \"contracts/DOHL.sol\":1065:1066  0 */\n      0x00\n        /* \"contracts/DOHL.sol\":1044:1067  tokenZero == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1044:1053  tokenZero */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1044:1067  tokenZero == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DOHL.sol\":1036:1068  require(tokenZero == address(0)) */\n      tag_193\n      jumpi\n      revert(0x00, 0x00)\n    tag_193:\n        /* \"contracts/DOHL.sol\":1111:1112  0 */\n      0x00\n        /* \"contracts/DOHL.sol\":1087:1113  taxCollector == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1087:1099  taxCollector */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1087:1113  taxCollector == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DOHL.sol\":1079:1114  require(taxCollector == address(0)) */\n      tag_194\n      jumpi\n      revert(0x00, 0x00)\n    tag_194:\n        /* \"contracts/DOHL.sol\":1146:1159  liquidityAddr */\n      dup4\n        /* \"contracts/DOHL.sol\":1127:1143  liquidityAddress */\n      0x08\n      0x00\n        /* \"contracts/DOHL.sol\":1127:1159  liquidityAddress = liquidityAddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DOHL.sol\":1182:1195  tokenZeroAddr */\n      dup2\n        /* \"contracts/DOHL.sol\":1170:1179  tokenZero */\n      0x06\n      0x00\n        /* \"contracts/DOHL.sol\":1170:1195  tokenZero = tokenZeroAddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DOHL.sol\":1221:1228  taxAddr */\n      dup1\n        /* \"contracts/DOHL.sol\":1206:1218  taxCollector */\n      0x07\n      0x00\n        /* \"contracts/DOHL.sol\":1206:1228  taxCollector = taxAddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DOHL.sol\":1255:1265  oracleAddr */\n      dup3\n        /* \"contracts/DOHL.sol\":1239:1252  oracleAddress */\n      0x09\n      0x00\n        /* \"contracts/DOHL.sol\":1239:1265  oracleAddress = oracleAddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DOHL.sol\":1309:1322  oracleAddress */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1276:1286  aggregator */\n      0x0b\n      0x00\n        /* \"contracts/DOHL.sol\":1276:1323  aggregator = AggregatorInterface(oracleAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DOHL.sol\":1336:1365  _mint(liquidityAddress, 1e18) */\n      tag_195\n        /* \"contracts/DOHL.sol\":1342:1358  liquidityAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DOHL.sol\":1360:1364  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/DOHL.sol\":1336:1341  _mint */\n      tag_177\n        /* \"contracts/DOHL.sol\":1336:1365  _mint(liquidityAddress, 1e18) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/DOHL.sol\":1376:1384  rebase() */\n      tag_196\n        /* \"contracts/DOHL.sol\":1376:1382  rebase */\n      tag_91\n        /* \"contracts/DOHL.sol\":1376:1384  rebase() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/DOHL.sol\":810:1392  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DOHL.sol\":376:400  address public tokenZero */\n    tag_108:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DOHL.sol\":2296:2590  function _absDiff(... */\n    tag_140:\n        /* \"contracts/DOHL.sol\":2385:2397  uint256 diff */\n      0x00\n        /* \"contracts/DOHL.sol\":2399:2412  bool negative */\n      0x00\n        /* \"contracts/DOHL.sol\":2434:2436  v1 */\n      dup4\n        /* \"contracts/DOHL.sol\":2429:2431  v2 */\n      dup4\n        /* \"contracts/DOHL.sol\":2429:2436  v2 > v1 */\n      gt\n        /* \"contracts/DOHL.sol\":2425:2556  if (v2 > v1) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/DOHL.sol\":2453:2464  uint256 tmp */\n      0x00\n        /* \"contracts/DOHL.sol\":2467:2469  v1 */\n      dup5\n        /* \"contracts/DOHL.sol\":2453:2469  uint256 tmp = v1 */\n      swap1\n      pop\n        /* \"contracts/DOHL.sol\":2489:2491  v2 */\n      dup4\n        /* \"contracts/DOHL.sol\":2484:2491  v1 = v2 */\n      swap5\n      pop\n        /* \"contracts/DOHL.sol\":2511:2514  tmp */\n      dup1\n        /* \"contracts/DOHL.sol\":2506:2514  v2 = tmp */\n      swap4\n      pop\n        /* \"contracts/DOHL.sol\":2540:2544  true */\n      0x01\n        /* \"contracts/DOHL.sol\":2529:2544  negative = true */\n      swap2\n      pop\n        /* \"contracts/DOHL.sol\":2438:2556  {... */\n      pop\n        /* \"contracts/DOHL.sol\":2425:2556  if (v2 > v1) {... */\n    tag_209:\n        /* \"contracts/DOHL.sol\":2580:2582  v2 */\n      dup3\n        /* \"contracts/DOHL.sol\":2575:2577  v1 */\n      dup5\n        /* \"contracts/DOHL.sol\":2575:2582  v1 - v2 */\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"contracts/DOHL.sol\":2568:2582  diff = v1 - v2 */\n      swap2\n      pop\n        /* \"contracts/DOHL.sol\":2296:2590  function _absDiff(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1123:1310  function _transferOwnership(address newOwner) internal {... */\n    tag_187:\n        /* \"contracts/Ownable.sol\":1217:1218  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1197:1219  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1197:1205  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1197:1219  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":1189:1220  require(newOwner != address(0)) */\n      tag_228\n      jumpi\n      revert(0x00, 0x00)\n    tag_228:\n        /* \"contracts/Ownable.sol\":1265:1273  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1236:1274  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1257:1263  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1236:1274  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1294:1302  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1285:1291  _owner */\n      0x05\n      0x00\n        /* \"contracts/Ownable.sol\":1285:1302  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1123:1310  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_240)\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_244)\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_245\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_246:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_247:\n        /* \"#utility.yul\":177:201   */\n      tag_283\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_246\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:546   */\n    tag_31:\n        /* \"#utility.yul\":335:339   */\n      0x00\n        /* \"#utility.yul\":373:375   */\n      0x40\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":358:376   */\n      add\n        /* \"#utility.yul\":350:376   */\n      swap1\n      pop\n        /* \"#utility.yul\":386:457   */\n      tag_285\n        /* \"#utility.yul\":454:455   */\n      0x00\n        /* \"#utility.yul\":443:452   */\n      dup4\n        /* \"#utility.yul\":439:456   */\n      add\n        /* \"#utility.yul\":430:436   */\n      dup6\n        /* \"#utility.yul\":386:457   */\n      tag_247\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":467:539   */\n      tag_286\n        /* \"#utility.yul\":535:537   */\n      0x20\n        /* \"#utility.yul\":524:533   */\n      dup4\n        /* \"#utility.yul\":520:538   */\n      add\n        /* \"#utility.yul\":511:517   */\n      dup5\n        /* \"#utility.yul\":467:539   */\n      tag_247\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":214:546   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:651   */\n    tag_248:\n        /* \"#utility.yul\":604:610   */\n      0x00\n        /* \"#utility.yul\":638:643   */\n      dup2\n        /* \"#utility.yul\":632:644   */\n      mload\n        /* \"#utility.yul\":622:644   */\n      swap1\n      pop\n        /* \"#utility.yul\":552:651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":657:826   */\n    tag_249:\n        /* \"#utility.yul\":741:752   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      dup3\n        /* \"#utility.yul\":770:773   */\n      dup3\n        /* \"#utility.yul\":763:782   */\n      mstore\n        /* \"#utility.yul\":815:819   */\n      0x20\n        /* \"#utility.yul\":810:813   */\n      dup3\n        /* \"#utility.yul\":806:820   */\n      add\n        /* \"#utility.yul\":791:820   */\n      swap1\n      pop\n        /* \"#utility.yul\":657:826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":832:971   */\n    tag_250:\n        /* \"#utility.yul\":921:927   */\n      dup3\n        /* \"#utility.yul\":916:919   */\n      dup2\n        /* \"#utility.yul\":911:914   */\n      dup4\n        /* \"#utility.yul\":905:928   */\n      mcopy\n        /* \"#utility.yul\":962:963   */\n      0x00\n        /* \"#utility.yul\":953:959   */\n      dup4\n        /* \"#utility.yul\":948:951   */\n      dup4\n        /* \"#utility.yul\":944:960   */\n      add\n        /* \"#utility.yul\":937:964   */\n      mstore\n        /* \"#utility.yul\":832:971   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":977:1079   */\n    tag_251:\n        /* \"#utility.yul\":1018:1024   */\n      0x00\n        /* \"#utility.yul\":1069:1071   */\n      0x1f\n        /* \"#utility.yul\":1065:1072   */\n      not\n        /* \"#utility.yul\":1060:1062   */\n      0x1f\n        /* \"#utility.yul\":1053:1058   */\n      dup4\n        /* \"#utility.yul\":1049:1063   */\n      add\n        /* \"#utility.yul\":1045:1073   */\n      and\n        /* \"#utility.yul\":1035:1073   */\n      swap1\n      pop\n        /* \"#utility.yul\":977:1079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1085:1462   */\n    tag_252:\n        /* \"#utility.yul\":1173:1176   */\n      0x00\n        /* \"#utility.yul\":1201:1240   */\n      tag_292\n        /* \"#utility.yul\":1234:1239   */\n      dup3\n        /* \"#utility.yul\":1201:1240   */\n      tag_248\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":1256:1327   */\n      tag_293\n        /* \"#utility.yul\":1320:1326   */\n      dup2\n        /* \"#utility.yul\":1315:1318   */\n      dup6\n        /* \"#utility.yul\":1256:1327   */\n      tag_249\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1249:1327   */\n      swap4\n      pop\n        /* \"#utility.yul\":1336:1401   */\n      tag_294\n        /* \"#utility.yul\":1394:1400   */\n      dup2\n        /* \"#utility.yul\":1389:1392   */\n      dup6\n        /* \"#utility.yul\":1382:1386   */\n      0x20\n        /* \"#utility.yul\":1375:1380   */\n      dup7\n        /* \"#utility.yul\":1371:1387   */\n      add\n        /* \"#utility.yul\":1336:1401   */\n      tag_250\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":1426:1455   */\n      tag_295\n        /* \"#utility.yul\":1448:1454   */\n      dup2\n        /* \"#utility.yul\":1426:1455   */\n      tag_251\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1421:1424   */\n      dup5\n        /* \"#utility.yul\":1417:1456   */\n      add\n        /* \"#utility.yul\":1410:1456   */\n      swap2\n      pop\n        /* \"#utility.yul\":1177:1462   */\n      pop\n        /* \"#utility.yul\":1085:1462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1468:1781   */\n    tag_35:\n        /* \"#utility.yul\":1581:1585   */\n      0x00\n        /* \"#utility.yul\":1619:1621   */\n      0x20\n        /* \"#utility.yul\":1608:1617   */\n      dup3\n        /* \"#utility.yul\":1604:1622   */\n      add\n        /* \"#utility.yul\":1596:1622   */\n      swap1\n      pop\n        /* \"#utility.yul\":1668:1677   */\n      dup2\n        /* \"#utility.yul\":1662:1666   */\n      dup2\n        /* \"#utility.yul\":1658:1678   */\n      sub\n        /* \"#utility.yul\":1654:1655   */\n      0x00\n        /* \"#utility.yul\":1643:1652   */\n      dup4\n        /* \"#utility.yul\":1639:1656   */\n      add\n        /* \"#utility.yul\":1632:1679   */\n      mstore\n        /* \"#utility.yul\":1696:1774   */\n      tag_297\n        /* \"#utility.yul\":1769:1773   */\n      dup2\n        /* \"#utility.yul\":1760:1766   */\n      dup5\n        /* \"#utility.yul\":1696:1774   */\n      tag_252\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1688:1774   */\n      swap1\n      pop\n        /* \"#utility.yul\":1468:1781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1868:1985   */\n    tag_254:\n        /* \"#utility.yul\":1977:1978   */\n      0x00\n        /* \"#utility.yul\":1974:1975   */\n      0x00\n        /* \"#utility.yul\":1967:1979   */\n      revert\n        /* \"#utility.yul\":2114:2240   */\n    tag_256:\n        /* \"#utility.yul\":2151:2158   */\n      0x00\n        /* \"#utility.yul\":2191:2233   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2184:2189   */\n      dup3\n        /* \"#utility.yul\":2180:2234   */\n      and\n        /* \"#utility.yul\":2169:2234   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2342   */\n    tag_257:\n        /* \"#utility.yul\":2283:2290   */\n      0x00\n        /* \"#utility.yul\":2312:2336   */\n      tag_303\n        /* \"#utility.yul\":2330:2335   */\n      dup3\n        /* \"#utility.yul\":2312:2336   */\n      tag_256\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2301:2336   */\n      swap1\n      pop\n        /* \"#utility.yul\":2246:2342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2348:2470   */\n    tag_258:\n        /* \"#utility.yul\":2421:2445   */\n      tag_305\n        /* \"#utility.yul\":2439:2444   */\n      dup2\n        /* \"#utility.yul\":2421:2445   */\n      tag_257\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2411:2446   */\n      eq\n        /* \"#utility.yul\":2401:2464   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2450:2462   */\n      revert\n        /* \"#utility.yul\":2401:2464   */\n    tag_306:\n        /* \"#utility.yul\":2348:2470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2476:2615   */\n    tag_259:\n        /* \"#utility.yul\":2522:2527   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup2\n        /* \"#utility.yul\":2547:2567   */\n      calldataload\n        /* \"#utility.yul\":2538:2567   */\n      swap1\n      pop\n        /* \"#utility.yul\":2576:2609   */\n      tag_308\n        /* \"#utility.yul\":2603:2608   */\n      dup2\n        /* \"#utility.yul\":2576:2609   */\n      tag_258\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2476:2615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2621:2743   */\n    tag_260:\n        /* \"#utility.yul\":2694:2718   */\n      tag_310\n        /* \"#utility.yul\":2712:2717   */\n      dup2\n        /* \"#utility.yul\":2694:2718   */\n      tag_246\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2687:2692   */\n      dup2\n        /* \"#utility.yul\":2684:2719   */\n      eq\n        /* \"#utility.yul\":2674:2737   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":2733:2734   */\n      0x00\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2723:2735   */\n      revert\n        /* \"#utility.yul\":2674:2737   */\n    tag_311:\n        /* \"#utility.yul\":2621:2743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:2888   */\n    tag_261:\n        /* \"#utility.yul\":2795:2800   */\n      0x00\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2811:2840   */\n      swap1\n      pop\n        /* \"#utility.yul\":2849:2882   */\n      tag_313\n        /* \"#utility.yul\":2876:2881   */\n      dup2\n        /* \"#utility.yul\":2849:2882   */\n      tag_260\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2749:2888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2894:3368   */\n    tag_38:\n        /* \"#utility.yul\":2962:2968   */\n      0x00\n        /* \"#utility.yul\":2970:2976   */\n      0x00\n        /* \"#utility.yul\":3019:3021   */\n      0x40\n        /* \"#utility.yul\":3007:3016   */\n      dup4\n        /* \"#utility.yul\":2998:3005   */\n      dup6\n        /* \"#utility.yul\":2994:3017   */\n      sub\n        /* \"#utility.yul\":2990:3022   */\n      slt\n        /* \"#utility.yul\":2987:3106   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3025:3104   */\n      tag_316\n      tag_254\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2987:3106   */\n    tag_315:\n        /* \"#utility.yul\":3145:3146   */\n      0x00\n        /* \"#utility.yul\":3170:3223   */\n      tag_317\n        /* \"#utility.yul\":3215:3222   */\n      dup6\n        /* \"#utility.yul\":3206:3212   */\n      dup3\n        /* \"#utility.yul\":3195:3204   */\n      dup7\n        /* \"#utility.yul\":3191:3213   */\n      add\n        /* \"#utility.yul\":3170:3223   */\n      tag_259\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3160:3223   */\n      swap3\n      pop\n        /* \"#utility.yul\":3116:3233   */\n      pop\n        /* \"#utility.yul\":3272:3274   */\n      0x20\n        /* \"#utility.yul\":3298:3351   */\n      tag_318\n        /* \"#utility.yul\":3343:3350   */\n      dup6\n        /* \"#utility.yul\":3334:3340   */\n      dup3\n        /* \"#utility.yul\":3323:3332   */\n      dup7\n        /* \"#utility.yul\":3319:3341   */\n      add\n        /* \"#utility.yul\":3298:3351   */\n      tag_261\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3288:3351   */\n      swap2\n      pop\n        /* \"#utility.yul\":3243:3361   */\n      pop\n        /* \"#utility.yul\":2894:3368   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3374:3464   */\n    tag_262:\n        /* \"#utility.yul\":3408:3415   */\n      0x00\n        /* \"#utility.yul\":3451:3456   */\n      dup2\n        /* \"#utility.yul\":3444:3457   */\n      iszero\n        /* \"#utility.yul\":3437:3458   */\n      iszero\n        /* \"#utility.yul\":3426:3458   */\n      swap1\n      pop\n        /* \"#utility.yul\":3374:3464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3470:3579   */\n    tag_263:\n        /* \"#utility.yul\":3551:3572   */\n      tag_321\n        /* \"#utility.yul\":3566:3571   */\n      dup2\n        /* \"#utility.yul\":3551:3572   */\n      tag_262\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3546:3549   */\n      dup3\n        /* \"#utility.yul\":3539:3573   */\n      mstore\n        /* \"#utility.yul\":3470:3579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3585:3795   */\n    tag_41:\n        /* \"#utility.yul\":3672:3676   */\n      0x00\n        /* \"#utility.yul\":3710:3712   */\n      0x20\n        /* \"#utility.yul\":3699:3708   */\n      dup3\n        /* \"#utility.yul\":3695:3713   */\n      add\n        /* \"#utility.yul\":3687:3713   */\n      swap1\n      pop\n        /* \"#utility.yul\":3723:3788   */\n      tag_323\n        /* \"#utility.yul\":3785:3786   */\n      0x00\n        /* \"#utility.yul\":3774:3783   */\n      dup4\n        /* \"#utility.yul\":3770:3787   */\n      add\n        /* \"#utility.yul\":3761:3767   */\n      dup5\n        /* \"#utility.yul\":3723:3788   */\n      tag_263\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3585:3795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3801:4023   */\n    tag_45:\n        /* \"#utility.yul\":3894:3898   */\n      0x00\n        /* \"#utility.yul\":3932:3934   */\n      0x20\n        /* \"#utility.yul\":3921:3930   */\n      dup3\n        /* \"#utility.yul\":3917:3935   */\n      add\n        /* \"#utility.yul\":3909:3935   */\n      swap1\n      pop\n        /* \"#utility.yul\":3945:4016   */\n      tag_325\n        /* \"#utility.yul\":4013:4014   */\n      0x00\n        /* \"#utility.yul\":4002:4011   */\n      dup4\n        /* \"#utility.yul\":3998:4015   */\n      add\n        /* \"#utility.yul\":3989:3995   */\n      dup5\n        /* \"#utility.yul\":3945:4016   */\n      tag_247\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3801:4023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4029:4648   */\n    tag_48:\n        /* \"#utility.yul\":4106:4112   */\n      0x00\n        /* \"#utility.yul\":4114:4120   */\n      0x00\n        /* \"#utility.yul\":4122:4128   */\n      0x00\n        /* \"#utility.yul\":4171:4173   */\n      0x60\n        /* \"#utility.yul\":4159:4168   */\n      dup5\n        /* \"#utility.yul\":4150:4157   */\n      dup7\n        /* \"#utility.yul\":4146:4169   */\n      sub\n        /* \"#utility.yul\":4142:4174   */\n      slt\n        /* \"#utility.yul\":4139:4258   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":4177:4256   */\n      tag_328\n      tag_254\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4139:4258   */\n    tag_327:\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4322:4375   */\n      tag_329\n        /* \"#utility.yul\":4367:4374   */\n      dup7\n        /* \"#utility.yul\":4358:4364   */\n      dup3\n        /* \"#utility.yul\":4347:4356   */\n      dup8\n        /* \"#utility.yul\":4343:4365   */\n      add\n        /* \"#utility.yul\":4322:4375   */\n      tag_259\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4312:4375   */\n      swap4\n      pop\n        /* \"#utility.yul\":4268:4385   */\n      pop\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4450:4503   */\n      tag_330\n        /* \"#utility.yul\":4495:4502   */\n      dup7\n        /* \"#utility.yul\":4486:4492   */\n      dup3\n        /* \"#utility.yul\":4475:4484   */\n      dup8\n        /* \"#utility.yul\":4471:4493   */\n      add\n        /* \"#utility.yul\":4450:4503   */\n      tag_259\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4440:4503   */\n      swap3\n      pop\n        /* \"#utility.yul\":4395:4513   */\n      pop\n        /* \"#utility.yul\":4552:4554   */\n      0x40\n        /* \"#utility.yul\":4578:4631   */\n      tag_331\n        /* \"#utility.yul\":4623:4630   */\n      dup7\n        /* \"#utility.yul\":4614:4620   */\n      dup3\n        /* \"#utility.yul\":4603:4612   */\n      dup8\n        /* \"#utility.yul\":4599:4621   */\n      add\n        /* \"#utility.yul\":4578:4631   */\n      tag_261\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4568:4631   */\n      swap2\n      pop\n        /* \"#utility.yul\":4523:4641   */\n      pop\n        /* \"#utility.yul\":4029:4648   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4654:4714   */\n    tag_264:\n        /* \"#utility.yul\":4682:4685   */\n      0x00\n        /* \"#utility.yul\":4703:4708   */\n      dup2\n        /* \"#utility.yul\":4696:4708   */\n      swap1\n      pop\n        /* \"#utility.yul\":4654:4714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4720:4862   */\n    tag_265:\n        /* \"#utility.yul\":4770:4779   */\n      0x00\n        /* \"#utility.yul\":4803:4856   */\n      tag_334\n        /* \"#utility.yul\":4821:4855   */\n      tag_335\n        /* \"#utility.yul\":4830:4854   */\n      tag_336\n        /* \"#utility.yul\":4848:4853   */\n      dup5\n        /* \"#utility.yul\":4830:4854   */\n      tag_256\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4821:4855   */\n      tag_264\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4803:4856   */\n      tag_256\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4790:4856   */\n      swap1\n      pop\n        /* \"#utility.yul\":4720:4862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4868:4994   */\n    tag_266:\n        /* \"#utility.yul\":4918:4927   */\n      0x00\n        /* \"#utility.yul\":4951:4988   */\n      tag_338\n        /* \"#utility.yul\":4982:4987   */\n      dup3\n        /* \"#utility.yul\":4951:4988   */\n      tag_265\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4938:4988   */\n      swap1\n      pop\n        /* \"#utility.yul\":4868:4994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5000:5154   */\n    tag_267:\n        /* \"#utility.yul\":5078:5087   */\n      0x00\n        /* \"#utility.yul\":5111:5148   */\n      tag_340\n        /* \"#utility.yul\":5142:5147   */\n      dup3\n        /* \"#utility.yul\":5111:5148   */\n      tag_266\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5098:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5000:5154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5160:5347   */\n    tag_268:\n        /* \"#utility.yul\":5275:5340   */\n      tag_342\n        /* \"#utility.yul\":5334:5339   */\n      dup2\n        /* \"#utility.yul\":5275:5340   */\n      tag_267\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5341   */\n      mstore\n        /* \"#utility.yul\":5160:5347   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5353:5631   */\n    tag_54:\n        /* \"#utility.yul\":5474:5478   */\n      0x00\n        /* \"#utility.yul\":5512:5514   */\n      0x20\n        /* \"#utility.yul\":5501:5510   */\n      dup3\n        /* \"#utility.yul\":5497:5515   */\n      add\n        /* \"#utility.yul\":5489:5515   */\n      swap1\n      pop\n        /* \"#utility.yul\":5525:5624   */\n      tag_344\n        /* \"#utility.yul\":5621:5622   */\n      0x00\n        /* \"#utility.yul\":5610:5619   */\n      dup4\n        /* \"#utility.yul\":5606:5623   */\n      add\n        /* \"#utility.yul\":5597:5603   */\n      dup5\n        /* \"#utility.yul\":5525:5624   */\n      tag_268\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5353:5631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5637:5723   */\n    tag_269:\n        /* \"#utility.yul\":5672:5679   */\n      0x00\n        /* \"#utility.yul\":5712:5716   */\n      0xff\n        /* \"#utility.yul\":5705:5710   */\n      dup3\n        /* \"#utility.yul\":5701:5717   */\n      and\n        /* \"#utility.yul\":5690:5717   */\n      swap1\n      pop\n        /* \"#utility.yul\":5637:5723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5729:5841   */\n    tag_270:\n        /* \"#utility.yul\":5812:5834   */\n      tag_347\n        /* \"#utility.yul\":5828:5833   */\n      dup2\n        /* \"#utility.yul\":5812:5834   */\n      tag_269\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5807:5810   */\n      dup3\n        /* \"#utility.yul\":5800:5835   */\n      mstore\n        /* \"#utility.yul\":5729:5841   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5847:6061   */\n    tag_58:\n        /* \"#utility.yul\":5936:5940   */\n      0x00\n        /* \"#utility.yul\":5974:5976   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5959:5977   */\n      add\n        /* \"#utility.yul\":5951:5977   */\n      swap1\n      pop\n        /* \"#utility.yul\":5987:6054   */\n      tag_349\n        /* \"#utility.yul\":6051:6052   */\n      0x00\n        /* \"#utility.yul\":6040:6049   */\n      dup4\n        /* \"#utility.yul\":6036:6053   */\n      add\n        /* \"#utility.yul\":6027:6033   */\n      dup5\n        /* \"#utility.yul\":5987:6054   */\n      tag_270\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5847:6061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6067:6185   */\n    tag_271:\n        /* \"#utility.yul\":6154:6178   */\n      tag_351\n        /* \"#utility.yul\":6172:6177   */\n      dup2\n        /* \"#utility.yul\":6154:6178   */\n      tag_257\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":6149:6152   */\n      dup3\n        /* \"#utility.yul\":6142:6179   */\n      mstore\n        /* \"#utility.yul\":6067:6185   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6191:6413   */\n    tag_62:\n        /* \"#utility.yul\":6284:6288   */\n      0x00\n        /* \"#utility.yul\":6322:6324   */\n      0x20\n        /* \"#utility.yul\":6311:6320   */\n      dup3\n        /* \"#utility.yul\":6307:6325   */\n      add\n        /* \"#utility.yul\":6299:6325   */\n      swap1\n      pop\n        /* \"#utility.yul\":6335:6406   */\n      tag_353\n        /* \"#utility.yul\":6403:6404   */\n      0x00\n        /* \"#utility.yul\":6392:6401   */\n      dup4\n        /* \"#utility.yul\":6388:6405   */\n      add\n        /* \"#utility.yul\":6379:6385   */\n      dup5\n        /* \"#utility.yul\":6335:6406   */\n      tag_271\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6191:6413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6419:6748   */\n    tag_65:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6527:6529   */\n      0x20\n        /* \"#utility.yul\":6515:6524   */\n      dup3\n        /* \"#utility.yul\":6506:6513   */\n      dup5\n        /* \"#utility.yul\":6502:6525   */\n      sub\n        /* \"#utility.yul\":6498:6530   */\n      slt\n        /* \"#utility.yul\":6495:6614   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":6533:6612   */\n      tag_356\n      tag_254\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6495:6614   */\n    tag_355:\n        /* \"#utility.yul\":6653:6654   */\n      0x00\n        /* \"#utility.yul\":6678:6731   */\n      tag_357\n        /* \"#utility.yul\":6723:6730   */\n      dup5\n        /* \"#utility.yul\":6714:6720   */\n      dup3\n        /* \"#utility.yul\":6703:6712   */\n      dup6\n        /* \"#utility.yul\":6699:6721   */\n      add\n        /* \"#utility.yul\":6678:6731   */\n      tag_259\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6668:6731   */\n      swap2\n      pop\n        /* \"#utility.yul\":6624:6741   */\n      pop\n        /* \"#utility.yul\":6419:6748   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6754:6830   */\n    tag_272:\n        /* \"#utility.yul\":6790:6797   */\n      0x00\n        /* \"#utility.yul\":6819:6824   */\n      dup2\n        /* \"#utility.yul\":6808:6824   */\n      swap1\n      pop\n        /* \"#utility.yul\":6754:6830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6836:6951   */\n    tag_273:\n        /* \"#utility.yul\":6921:6944   */\n      tag_360\n        /* \"#utility.yul\":6938:6943   */\n      dup2\n        /* \"#utility.yul\":6921:6944   */\n      tag_272\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6916:6919   */\n      dup3\n        /* \"#utility.yul\":6909:6945   */\n      mstore\n        /* \"#utility.yul\":6836:6951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6957:7175   */\n    tag_82:\n        /* \"#utility.yul\":7048:7052   */\n      0x00\n        /* \"#utility.yul\":7086:7088   */\n      0x20\n        /* \"#utility.yul\":7075:7084   */\n      dup3\n        /* \"#utility.yul\":7071:7089   */\n      add\n        /* \"#utility.yul\":7063:7089   */\n      swap1\n      pop\n        /* \"#utility.yul\":7099:7168   */\n      tag_362\n        /* \"#utility.yul\":7165:7166   */\n      0x00\n        /* \"#utility.yul\":7154:7163   */\n      dup4\n        /* \"#utility.yul\":7150:7167   */\n      add\n        /* \"#utility.yul\":7141:7147   */\n      dup5\n        /* \"#utility.yul\":7099:7168   */\n      tag_273\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6957:7175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7181:7655   */\n    tag_97:\n        /* \"#utility.yul\":7249:7255   */\n      0x00\n        /* \"#utility.yul\":7257:7263   */\n      0x00\n        /* \"#utility.yul\":7306:7308   */\n      0x40\n        /* \"#utility.yul\":7294:7303   */\n      dup4\n        /* \"#utility.yul\":7285:7292   */\n      dup6\n        /* \"#utility.yul\":7281:7304   */\n      sub\n        /* \"#utility.yul\":7277:7309   */\n      slt\n        /* \"#utility.yul\":7274:7393   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":7312:7391   */\n      tag_365\n      tag_254\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7274:7393   */\n    tag_364:\n        /* \"#utility.yul\":7432:7433   */\n      0x00\n        /* \"#utility.yul\":7457:7510   */\n      tag_366\n        /* \"#utility.yul\":7502:7509   */\n      dup6\n        /* \"#utility.yul\":7493:7499   */\n      dup3\n        /* \"#utility.yul\":7482:7491   */\n      dup7\n        /* \"#utility.yul\":7478:7500   */\n      add\n        /* \"#utility.yul\":7457:7510   */\n      tag_259\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7447:7510   */\n      swap3\n      pop\n        /* \"#utility.yul\":7403:7520   */\n      pop\n        /* \"#utility.yul\":7559:7561   */\n      0x20\n        /* \"#utility.yul\":7585:7638   */\n      tag_367\n        /* \"#utility.yul\":7630:7637   */\n      dup6\n        /* \"#utility.yul\":7621:7627   */\n      dup3\n        /* \"#utility.yul\":7610:7619   */\n      dup7\n        /* \"#utility.yul\":7606:7628   */\n      add\n        /* \"#utility.yul\":7585:7638   */\n      tag_259\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7575:7638   */\n      swap2\n      pop\n        /* \"#utility.yul\":7530:7648   */\n      pop\n        /* \"#utility.yul\":7181:7655   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7661:8426   */\n    tag_105:\n        /* \"#utility.yul\":7747:7753   */\n      0x00\n        /* \"#utility.yul\":7755:7761   */\n      0x00\n        /* \"#utility.yul\":7763:7769   */\n      0x00\n        /* \"#utility.yul\":7771:7777   */\n      0x00\n        /* \"#utility.yul\":7820:7823   */\n      0x80\n        /* \"#utility.yul\":7808:7817   */\n      dup6\n        /* \"#utility.yul\":7799:7806   */\n      dup8\n        /* \"#utility.yul\":7795:7818   */\n      sub\n        /* \"#utility.yul\":7791:7824   */\n      slt\n        /* \"#utility.yul\":7788:7908   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":7827:7906   */\n      tag_370\n      tag_254\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7788:7908   */\n    tag_369:\n        /* \"#utility.yul\":7947:7948   */\n      0x00\n        /* \"#utility.yul\":7972:8025   */\n      tag_371\n        /* \"#utility.yul\":8017:8024   */\n      dup8\n        /* \"#utility.yul\":8008:8014   */\n      dup3\n        /* \"#utility.yul\":7997:8006   */\n      dup9\n        /* \"#utility.yul\":7993:8015   */\n      add\n        /* \"#utility.yul\":7972:8025   */\n      tag_259\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7962:8025   */\n      swap5\n      pop\n        /* \"#utility.yul\":7918:8035   */\n      pop\n        /* \"#utility.yul\":8074:8076   */\n      0x20\n        /* \"#utility.yul\":8100:8153   */\n      tag_372\n        /* \"#utility.yul\":8145:8152   */\n      dup8\n        /* \"#utility.yul\":8136:8142   */\n      dup3\n        /* \"#utility.yul\":8125:8134   */\n      dup9\n        /* \"#utility.yul\":8121:8143   */\n      add\n        /* \"#utility.yul\":8100:8153   */\n      tag_259\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":8090:8153   */\n      swap4\n      pop\n        /* \"#utility.yul\":8045:8163   */\n      pop\n        /* \"#utility.yul\":8202:8204   */\n      0x40\n        /* \"#utility.yul\":8228:8281   */\n      tag_373\n        /* \"#utility.yul\":8273:8280   */\n      dup8\n        /* \"#utility.yul\":8264:8270   */\n      dup3\n        /* \"#utility.yul\":8253:8262   */\n      dup9\n        /* \"#utility.yul\":8249:8271   */\n      add\n        /* \"#utility.yul\":8228:8281   */\n      tag_259\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8218:8281   */\n      swap3\n      pop\n        /* \"#utility.yul\":8173:8291   */\n      pop\n        /* \"#utility.yul\":8330:8332   */\n      0x60\n        /* \"#utility.yul\":8356:8409   */\n      tag_374\n        /* \"#utility.yul\":8401:8408   */\n      dup8\n        /* \"#utility.yul\":8392:8398   */\n      dup3\n        /* \"#utility.yul\":8381:8390   */\n      dup9\n        /* \"#utility.yul\":8377:8399   */\n      add\n        /* \"#utility.yul\":8356:8409   */\n      tag_259\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8346:8409   */\n      swap2\n      pop\n        /* \"#utility.yul\":8301:8419   */\n      pop\n        /* \"#utility.yul\":7661:8426   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8432:8575   */\n    tag_274:\n        /* \"#utility.yul\":8489:8494   */\n      0x00\n        /* \"#utility.yul\":8520:8526   */\n      dup2\n        /* \"#utility.yul\":8514:8527   */\n      mload\n        /* \"#utility.yul\":8505:8527   */\n      swap1\n      pop\n        /* \"#utility.yul\":8536:8569   */\n      tag_376\n        /* \"#utility.yul\":8563:8568   */\n      dup2\n        /* \"#utility.yul\":8536:8569   */\n      tag_260\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8432:8575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8581:8932   */\n    tag_115:\n        /* \"#utility.yul\":8651:8657   */\n      0x00\n        /* \"#utility.yul\":8700:8702   */\n      0x20\n        /* \"#utility.yul\":8688:8697   */\n      dup3\n        /* \"#utility.yul\":8679:8686   */\n      dup5\n        /* \"#utility.yul\":8675:8698   */\n      sub\n        /* \"#utility.yul\":8671:8703   */\n      slt\n        /* \"#utility.yul\":8668:8787   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":8706:8785   */\n      tag_379\n      tag_254\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8668:8787   */\n    tag_378:\n        /* \"#utility.yul\":8826:8827   */\n      0x00\n        /* \"#utility.yul\":8851:8915   */\n      tag_380\n        /* \"#utility.yul\":8907:8914   */\n      dup5\n        /* \"#utility.yul\":8898:8904   */\n      dup3\n        /* \"#utility.yul\":8887:8896   */\n      dup6\n        /* \"#utility.yul\":8883:8905   */\n      add\n        /* \"#utility.yul\":8851:8915   */\n      tag_274\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":8841:8915   */\n      swap2\n      pop\n        /* \"#utility.yul\":8797:8925   */\n      pop\n        /* \"#utility.yul\":8581:8932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8938:9118   */\n    tag_275:\n        /* \"#utility.yul\":8986:9063   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8983:8984   */\n      0x00\n        /* \"#utility.yul\":8976:9064   */\n      mstore\n        /* \"#utility.yul\":9083:9087   */\n      0x22\n        /* \"#utility.yul\":9080:9081   */\n      0x04\n        /* \"#utility.yul\":9073:9088   */\n      mstore\n        /* \"#utility.yul\":9107:9111   */\n      0x24\n        /* \"#utility.yul\":9104:9105   */\n      0x00\n        /* \"#utility.yul\":9097:9112   */\n      revert\n        /* \"#utility.yul\":9124:9444   */\n    tag_119:\n        /* \"#utility.yul\":9168:9174   */\n      0x00\n        /* \"#utility.yul\":9205:9206   */\n      0x02\n        /* \"#utility.yul\":9199:9203   */\n      dup3\n        /* \"#utility.yul\":9195:9207   */\n      div\n        /* \"#utility.yul\":9185:9207   */\n      swap1\n      pop\n        /* \"#utility.yul\":9252:9253   */\n      0x01\n        /* \"#utility.yul\":9246:9250   */\n      dup3\n        /* \"#utility.yul\":9242:9254   */\n      and\n        /* \"#utility.yul\":9273:9291   */\n      dup1\n        /* \"#utility.yul\":9263:9344   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":9329:9333   */\n      0x7f\n        /* \"#utility.yul\":9321:9327   */\n      dup3\n        /* \"#utility.yul\":9317:9334   */\n      and\n        /* \"#utility.yul\":9307:9334   */\n      swap2\n      pop\n        /* \"#utility.yul\":9263:9344   */\n    tag_383:\n        /* \"#utility.yul\":9391:9393   */\n      0x20\n        /* \"#utility.yul\":9383:9389   */\n      dup3\n        /* \"#utility.yul\":9380:9394   */\n      lt\n        /* \"#utility.yul\":9360:9378   */\n      dup2\n        /* \"#utility.yul\":9357:9395   */\n      sub\n        /* \"#utility.yul\":9354:9438   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":9410:9428   */\n      tag_385\n      tag_275\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":9354:9438   */\n    tag_384:\n        /* \"#utility.yul\":9175:9444   */\n      pop\n        /* \"#utility.yul\":9124:9444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9450:9630   */\n    tag_276:\n        /* \"#utility.yul\":9498:9575   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9495:9496   */\n      0x00\n        /* \"#utility.yul\":9488:9576   */\n      mstore\n        /* \"#utility.yul\":9595:9599   */\n      0x11\n        /* \"#utility.yul\":9592:9593   */\n      0x04\n        /* \"#utility.yul\":9585:9600   */\n      mstore\n        /* \"#utility.yul\":9619:9623   */\n      0x24\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9609:9624   */\n      revert\n        /* \"#utility.yul\":9636:10046   */\n    tag_136:\n        /* \"#utility.yul\":9676:9683   */\n      0x00\n        /* \"#utility.yul\":9699:9719   */\n      tag_388\n        /* \"#utility.yul\":9717:9718   */\n      dup3\n        /* \"#utility.yul\":9699:9719   */\n      tag_246\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":9694:9719   */\n      swap2\n      pop\n        /* \"#utility.yul\":9733:9753   */\n      tag_389\n        /* \"#utility.yul\":9751:9752   */\n      dup4\n        /* \"#utility.yul\":9733:9753   */\n      tag_246\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9728:9753   */\n      swap3\n      pop\n        /* \"#utility.yul\":9788:9789   */\n      dup3\n        /* \"#utility.yul\":9785:9786   */\n      dup3\n        /* \"#utility.yul\":9781:9790   */\n      mul\n        /* \"#utility.yul\":9810:9840   */\n      tag_390\n        /* \"#utility.yul\":9828:9839   */\n      dup2\n        /* \"#utility.yul\":9810:9840   */\n      tag_246\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9799:9840   */\n      swap2\n      pop\n        /* \"#utility.yul\":9989:9990   */\n      dup3\n        /* \"#utility.yul\":9980:9987   */\n      dup3\n        /* \"#utility.yul\":9976:9991   */\n      div\n        /* \"#utility.yul\":9973:9974   */\n      dup5\n        /* \"#utility.yul\":9970:9992   */\n      eq\n        /* \"#utility.yul\":9950:9951   */\n      dup4\n        /* \"#utility.yul\":9943:9952   */\n      iszero\n        /* \"#utility.yul\":9923:10006   */\n      or\n        /* \"#utility.yul\":9900:10039   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":10019:10037   */\n      tag_392\n      tag_276\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9900:10039   */\n    tag_391:\n        /* \"#utility.yul\":9684:10046   */\n      pop\n        /* \"#utility.yul\":9636:10046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10052:10232   */\n    tag_277:\n        /* \"#utility.yul\":10100:10177   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10097:10098   */\n      0x00\n        /* \"#utility.yul\":10090:10178   */\n      mstore\n        /* \"#utility.yul\":10197:10201   */\n      0x12\n        /* \"#utility.yul\":10194:10195   */\n      0x04\n        /* \"#utility.yul\":10187:10202   */\n      mstore\n        /* \"#utility.yul\":10221:10225   */\n      0x24\n        /* \"#utility.yul\":10218:10219   */\n      0x00\n        /* \"#utility.yul\":10211:10226   */\n      revert\n        /* \"#utility.yul\":10238:10423   */\n    tag_138:\n        /* \"#utility.yul\":10278:10279   */\n      0x00\n        /* \"#utility.yul\":10295:10315   */\n      tag_395\n        /* \"#utility.yul\":10313:10314   */\n      dup3\n        /* \"#utility.yul\":10295:10315   */\n      tag_246\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":10290:10315   */\n      swap2\n      pop\n        /* \"#utility.yul\":10329:10349   */\n      tag_396\n        /* \"#utility.yul\":10347:10348   */\n      dup4\n        /* \"#utility.yul\":10329:10349   */\n      tag_246\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10324:10349   */\n      swap3\n      pop\n        /* \"#utility.yul\":10368:10369   */\n      dup3\n        /* \"#utility.yul\":10358:10393   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":10373:10391   */\n      tag_398\n      tag_277\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10358:10393   */\n    tag_397:\n        /* \"#utility.yul\":10415:10416   */\n      dup3\n        /* \"#utility.yul\":10412:10413   */\n      dup3\n        /* \"#utility.yul\":10408:10417   */\n      div\n        /* \"#utility.yul\":10403:10417   */\n      swap1\n      pop\n        /* \"#utility.yul\":10238:10423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10429:10549   */\n    tag_278:\n        /* \"#utility.yul\":10501:10524   */\n      tag_400\n        /* \"#utility.yul\":10518:10523   */\n      dup2\n        /* \"#utility.yul\":10501:10524   */\n      tag_272\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10494:10499   */\n      dup2\n        /* \"#utility.yul\":10491:10525   */\n      eq\n        /* \"#utility.yul\":10481:10543   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":10539:10540   */\n      0x00\n        /* \"#utility.yul\":10536:10537   */\n      0x00\n        /* \"#utility.yul\":10529:10541   */\n      revert\n        /* \"#utility.yul\":10481:10543   */\n    tag_401:\n        /* \"#utility.yul\":10429:10549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10555:10696   */\n    tag_279:\n        /* \"#utility.yul\":10611:10616   */\n      0x00\n        /* \"#utility.yul\":10642:10648   */\n      dup2\n        /* \"#utility.yul\":10636:10649   */\n      mload\n        /* \"#utility.yul\":10627:10649   */\n      swap1\n      pop\n        /* \"#utility.yul\":10658:10690   */\n      tag_403\n        /* \"#utility.yul\":10684:10689   */\n      dup2\n        /* \"#utility.yul\":10658:10690   */\n      tag_278\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10555:10696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10702:11051   */\n    tag_165:\n        /* \"#utility.yul\":10771:10777   */\n      0x00\n        /* \"#utility.yul\":10820:10822   */\n      0x20\n        /* \"#utility.yul\":10808:10817   */\n      dup3\n        /* \"#utility.yul\":10799:10806   */\n      dup5\n        /* \"#utility.yul\":10795:10818   */\n      sub\n        /* \"#utility.yul\":10791:10823   */\n      slt\n        /* \"#utility.yul\":10788:10907   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":10826:10905   */\n      tag_406\n      tag_254\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10788:10907   */\n    tag_405:\n        /* \"#utility.yul\":10946:10947   */\n      0x00\n        /* \"#utility.yul\":10971:11034   */\n      tag_407\n        /* \"#utility.yul\":11026:11033   */\n      dup5\n        /* \"#utility.yul\":11017:11023   */\n      dup3\n        /* \"#utility.yul\":11006:11015   */\n      dup6\n        /* \"#utility.yul\":11002:11024   */\n      add\n        /* \"#utility.yul\":10971:11034   */\n      tag_279\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10961:11034   */\n      swap2\n      pop\n        /* \"#utility.yul\":10917:11044   */\n      pop\n        /* \"#utility.yul\":10702:11051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11057:11499   */\n    tag_206:\n        /* \"#utility.yul\":11206:11210   */\n      0x00\n        /* \"#utility.yul\":11244:11246   */\n      0x60\n        /* \"#utility.yul\":11233:11242   */\n      dup3\n        /* \"#utility.yul\":11229:11247   */\n      add\n        /* \"#utility.yul\":11221:11247   */\n      swap1\n      pop\n        /* \"#utility.yul\":11257:11328   */\n      tag_409\n        /* \"#utility.yul\":11325:11326   */\n      0x00\n        /* \"#utility.yul\":11314:11323   */\n      dup4\n        /* \"#utility.yul\":11310:11327   */\n      add\n        /* \"#utility.yul\":11301:11307   */\n      dup7\n        /* \"#utility.yul\":11257:11328   */\n      tag_271\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11338:11410   */\n      tag_410\n        /* \"#utility.yul\":11406:11408   */\n      0x20\n        /* \"#utility.yul\":11395:11404   */\n      dup4\n        /* \"#utility.yul\":11391:11409   */\n      add\n        /* \"#utility.yul\":11382:11388   */\n      dup6\n        /* \"#utility.yul\":11338:11410   */\n      tag_247\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11420:11492   */\n      tag_411\n        /* \"#utility.yul\":11488:11490   */\n      0x40\n        /* \"#utility.yul\":11477:11486   */\n      dup4\n        /* \"#utility.yul\":11473:11491   */\n      add\n        /* \"#utility.yul\":11464:11470   */\n      dup5\n        /* \"#utility.yul\":11420:11492   */\n      tag_247\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11057:11499   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11505:11699   */\n    tag_211:\n        /* \"#utility.yul\":11545:11549   */\n      0x00\n        /* \"#utility.yul\":11565:11585   */\n      tag_413\n        /* \"#utility.yul\":11583:11584   */\n      dup3\n        /* \"#utility.yul\":11565:11585   */\n      tag_246\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11560:11585   */\n      swap2\n      pop\n        /* \"#utility.yul\":11599:11619   */\n      tag_414\n        /* \"#utility.yul\":11617:11618   */\n      dup4\n        /* \"#utility.yul\":11599:11619   */\n      tag_246\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11594:11619   */\n      swap3\n      pop\n        /* \"#utility.yul\":11643:11644   */\n      dup3\n        /* \"#utility.yul\":11640:11641   */\n      dup3\n        /* \"#utility.yul\":11636:11645   */\n      sub\n        /* \"#utility.yul\":11628:11645   */\n      swap1\n      pop\n        /* \"#utility.yul\":11667:11668   */\n      dup2\n        /* \"#utility.yul\":11661:11665   */\n      dup2\n        /* \"#utility.yul\":11658:11669   */\n      gt\n        /* \"#utility.yul\":11655:11692   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":11672:11690   */\n      tag_416\n      tag_276\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11655:11692   */\n    tag_415:\n        /* \"#utility.yul\":11505:11699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11705:11896   */\n    tag_239:\n        /* \"#utility.yul\":11745:11748   */\n      0x00\n        /* \"#utility.yul\":11764:11784   */\n      tag_418\n        /* \"#utility.yul\":11782:11783   */\n      dup3\n        /* \"#utility.yul\":11764:11784   */\n      tag_246\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11759:11784   */\n      swap2\n      pop\n        /* \"#utility.yul\":11798:11818   */\n      tag_419\n        /* \"#utility.yul\":11816:11817   */\n      dup4\n        /* \"#utility.yul\":11798:11818   */\n      tag_246\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11793:11818   */\n      swap3\n      pop\n        /* \"#utility.yul\":11841:11842   */\n      dup3\n        /* \"#utility.yul\":11838:11839   */\n      dup3\n        /* \"#utility.yul\":11834:11843   */\n      add\n        /* \"#utility.yul\":11827:11843   */\n      swap1\n      pop\n        /* \"#utility.yul\":11862:11865   */\n      dup1\n        /* \"#utility.yul\":11859:11860   */\n      dup3\n        /* \"#utility.yul\":11856:11866   */\n      gt\n        /* \"#utility.yul\":11853:11889   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":11869:11887   */\n      tag_421\n      tag_276\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11853:11889   */\n    tag_420:\n        /* \"#utility.yul\":11705:11896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204cb8b8dd2318b6d4ae1fc281313adcfee0ae29edeaac788bf79273e3f6a26c5264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1139": {
									"entryPoint": null,
									"id": 1139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_826": {
									"entryPoint": null,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 284,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 417,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:8",
										"nodeType": "YulBlock",
										"src": "0:7000:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "140:152:8",
													"nodeType": "YulBlock",
													"src": "140:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:8",
																		"nodeType": "YulLiteral",
																		"src": "157:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:8",
																		"nodeType": "YulLiteral",
																		"src": "160:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:8"
																},
																"nativeSrc": "150:88:8",
																"nodeType": "YulFunctionCall",
																"src": "150:88:8"
															},
															"nativeSrc": "150:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:8",
																		"nodeType": "YulLiteral",
																		"src": "254:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:8",
																		"nodeType": "YulLiteral",
																		"src": "257:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:8"
																},
																"nativeSrc": "247:15:8",
																"nodeType": "YulFunctionCall",
																"src": "247:15:8"
															},
															"nativeSrc": "247:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:8",
																		"nodeType": "YulLiteral",
																		"src": "281:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:8"
																},
																"nativeSrc": "271:15:8",
																"nodeType": "YulFunctionCall",
																"src": "271:15:8"
															},
															"nativeSrc": "271:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:8"
											},
											{
												"body": {
													"nativeSrc": "326:152:8",
													"nodeType": "YulBlock",
													"src": "326:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:8",
																		"nodeType": "YulLiteral",
																		"src": "343:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:8",
																		"nodeType": "YulLiteral",
																		"src": "346:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:8"
																},
																"nativeSrc": "336:88:8",
																"nodeType": "YulFunctionCall",
																"src": "336:88:8"
															},
															"nativeSrc": "336:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:8",
																		"nodeType": "YulLiteral",
																		"src": "443:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:15:8",
																"nodeType": "YulFunctionCall",
																"src": "433:15:8"
															},
															"nativeSrc": "433:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:8",
																		"nodeType": "YulLiteral",
																		"src": "464:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:8",
																		"nodeType": "YulLiteral",
																		"src": "467:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:8"
																},
																"nativeSrc": "457:15:8",
																"nodeType": "YulFunctionCall",
																"src": "457:15:8"
															},
															"nativeSrc": "457:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:8"
											},
											{
												"body": {
													"nativeSrc": "535:269:8",
													"nodeType": "YulBlock",
													"src": "535:269:8",
													"statements": [
														{
															"nativeSrc": "545:22:8",
															"nodeType": "YulAssignment",
															"src": "545:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "565:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:8"
																},
																"nativeSrc": "555:12:8",
																"nodeType": "YulFunctionCall",
																"src": "555:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:8"
																}
															]
														},
														{
															"nativeSrc": "576:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:8",
																		"nodeType": "YulLiteral",
																		"src": "612:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:8"
																},
																"nativeSrc": "602:12:8",
																"nodeType": "YulFunctionCall",
																"src": "602:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:8",
																	"nodeType": "YulTypedName",
																	"src": "580:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:8",
																"nodeType": "YulBlock",
																"src": "653:51:8",
																"statements": [
																	{
																		"nativeSrc": "667:27:8",
																		"nodeType": "YulAssignment",
																		"src": "667:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:8",
																					"nodeType": "YulLiteral",
																					"src": "689:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:8"
																			},
																			"nativeSrc": "677:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:8"
																},
																"nativeSrc": "626:26:8",
																"nodeType": "YulFunctionCall",
																"src": "626:26:8"
															},
															"nativeSrc": "623:81:8",
															"nodeType": "YulIf",
															"src": "623:81:8"
														},
														{
															"body": {
																"nativeSrc": "756:42:8",
																"nodeType": "YulBlock",
																"src": "756:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:8"
																			},
																			"nativeSrc": "770:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:8"
																		},
																		"nativeSrc": "770:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:8",
																				"nodeType": "YulLiteral",
																				"src": "751:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:8"
																		},
																		"nativeSrc": "740:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:8"
																},
																"nativeSrc": "717:38:8",
																"nodeType": "YulFunctionCall",
																"src": "717:38:8"
															},
															"nativeSrc": "714:84:8",
															"nodeType": "YulIf",
															"src": "714:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:8",
														"nodeType": "YulTypedName",
														"src": "519:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:8",
														"nodeType": "YulTypedName",
														"src": "528:6:8",
														"type": ""
													}
												],
												"src": "484:320:8"
											},
											{
												"body": {
													"nativeSrc": "864:87:8",
													"nodeType": "YulBlock",
													"src": "864:87:8",
													"statements": [
														{
															"nativeSrc": "874:11:8",
															"nodeType": "YulAssignment",
															"src": "874:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:8",
																"nodeType": "YulIdentifier",
																"src": "882:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:8",
																		"nodeType": "YulLiteral",
																		"src": "902:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:8"
																},
																"nativeSrc": "895:14:8",
																"nodeType": "YulFunctionCall",
																"src": "895:14:8"
															},
															"nativeSrc": "895:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:8"
														},
														{
															"nativeSrc": "918:26:8",
															"nodeType": "YulAssignment",
															"src": "918:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:8",
																		"nodeType": "YulLiteral",
																		"src": "936:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:8",
																		"nodeType": "YulLiteral",
																		"src": "939:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:8"
																},
																"nativeSrc": "926:18:8",
																"nodeType": "YulFunctionCall",
																"src": "926:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:8",
														"nodeType": "YulTypedName",
														"src": "851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:8",
														"nodeType": "YulTypedName",
														"src": "859:4:8",
														"type": ""
													}
												],
												"src": "810:141:8"
											},
											{
												"body": {
													"nativeSrc": "1001:49:8",
													"nodeType": "YulBlock",
													"src": "1001:49:8",
													"statements": [
														{
															"nativeSrc": "1011:33:8",
															"nodeType": "YulAssignment",
															"src": "1011:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:8"
																		},
																		"nativeSrc": "1025:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:8"
																},
																"nativeSrc": "1021:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:8",
														"nodeType": "YulTypedName",
														"src": "984:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:8",
														"nodeType": "YulTypedName",
														"src": "994:6:8",
														"type": ""
													}
												],
												"src": "957:93:8"
											},
											{
												"body": {
													"nativeSrc": "1109:54:8",
													"nodeType": "YulBlock",
													"src": "1109:54:8",
													"statements": [
														{
															"nativeSrc": "1119:37:8",
															"nodeType": "YulAssignment",
															"src": "1119:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:8"
																},
																"nativeSrc": "1140:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:8",
														"nodeType": "YulTypedName",
														"src": "1084:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:8",
														"nodeType": "YulTypedName",
														"src": "1090:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:8",
														"nodeType": "YulTypedName",
														"src": "1100:8:8",
														"type": ""
													}
												],
												"src": "1056:107:8"
											},
											{
												"body": {
													"nativeSrc": "1245:317:8",
													"nodeType": "YulBlock",
													"src": "1245:317:8",
													"statements": [
														{
															"nativeSrc": "1255:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:8"
																},
																"nativeSrc": "1272:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:8"
																},
																"nativeSrc": "1311:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:8",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:8",
															"nodeType": "YulAssignment",
															"src": "1417:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:8"
																},
																"nativeSrc": "1429:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:8"
																}
															]
														},
														{
															"nativeSrc": "1477:30:8",
															"nodeType": "YulAssignment",
															"src": "1477:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:8"
																		},
																		"nativeSrc": "1497:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:8"
																},
																"nativeSrc": "1486:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:8"
																}
															]
														},
														{
															"nativeSrc": "1516:40:8",
															"nodeType": "YulAssignment",
															"src": "1516:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:8"
																		},
																		"nativeSrc": "1536:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:8"
																},
																"nativeSrc": "1526:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:8",
														"nodeType": "YulTypedName",
														"src": "1206:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:8",
														"nodeType": "YulTypedName",
														"src": "1213:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:8",
														"nodeType": "YulTypedName",
														"src": "1225:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:8",
														"nodeType": "YulTypedName",
														"src": "1238:6:8",
														"type": ""
													}
												],
												"src": "1169:393:8"
											},
											{
												"body": {
													"nativeSrc": "1613:32:8",
													"nodeType": "YulBlock",
													"src": "1613:32:8",
													"statements": [
														{
															"nativeSrc": "1623:16:8",
															"nodeType": "YulAssignment",
															"src": "1623:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:8",
																"nodeType": "YulIdentifier",
																"src": "1634:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:8",
														"nodeType": "YulTypedName",
														"src": "1595:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:8",
														"nodeType": "YulTypedName",
														"src": "1605:7:8",
														"type": ""
													}
												],
												"src": "1568:77:8"
											},
											{
												"body": {
													"nativeSrc": "1683:28:8",
													"nodeType": "YulBlock",
													"src": "1683:28:8",
													"statements": [
														{
															"nativeSrc": "1693:12:8",
															"nodeType": "YulAssignment",
															"src": "1693:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:8",
																"nodeType": "YulIdentifier",
																"src": "1700:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:8",
														"nodeType": "YulTypedName",
														"src": "1669:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:8",
														"nodeType": "YulTypedName",
														"src": "1679:3:8",
														"type": ""
													}
												],
												"src": "1651:60:8"
											},
											{
												"body": {
													"nativeSrc": "1777:82:8",
													"nodeType": "YulBlock",
													"src": "1777:82:8",
													"statements": [
														{
															"nativeSrc": "1787:66:8",
															"nodeType": "YulAssignment",
															"src": "1787:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:8"
																				},
																				"nativeSrc": "1827:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:8"
																		},
																		"nativeSrc": "1818:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:8"
																},
																"nativeSrc": "1800:53:8",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:8",
														"nodeType": "YulTypedName",
														"src": "1757:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:8",
														"nodeType": "YulTypedName",
														"src": "1767:9:8",
														"type": ""
													}
												],
												"src": "1717:142:8"
											},
											{
												"body": {
													"nativeSrc": "1912:28:8",
													"nodeType": "YulBlock",
													"src": "1912:28:8",
													"statements": [
														{
															"nativeSrc": "1922:12:8",
															"nodeType": "YulAssignment",
															"src": "1922:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:8",
																"nodeType": "YulIdentifier",
																"src": "1929:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:8",
														"nodeType": "YulTypedName",
														"src": "1898:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:8",
														"nodeType": "YulTypedName",
														"src": "1908:3:8",
														"type": ""
													}
												],
												"src": "1865:75:8"
											},
											{
												"body": {
													"nativeSrc": "2022:193:8",
													"nodeType": "YulBlock",
													"src": "2022:193:8",
													"statements": [
														{
															"nativeSrc": "2032:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:8"
																},
																"nativeSrc": "2056:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:8",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:8"
																				},
																				"nativeSrc": "2145:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:8"
																				},
																				"nativeSrc": "2166:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:8"
																		},
																		"nativeSrc": "2117:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:8"
																},
																"nativeSrc": "2104:105:8",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:8"
															},
															"nativeSrc": "2104:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:8",
														"nodeType": "YulTypedName",
														"src": "1999:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:8",
														"nodeType": "YulTypedName",
														"src": "2005:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:8",
														"nodeType": "YulTypedName",
														"src": "2013:7:8",
														"type": ""
													}
												],
												"src": "1946:269:8"
											},
											{
												"body": {
													"nativeSrc": "2270:24:8",
													"nodeType": "YulBlock",
													"src": "2270:24:8",
													"statements": [
														{
															"nativeSrc": "2280:8:8",
															"nodeType": "YulAssignment",
															"src": "2280:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:8",
																"nodeType": "YulLiteral",
																"src": "2287:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:8",
														"nodeType": "YulTypedName",
														"src": "2266:3:8",
														"type": ""
													}
												],
												"src": "2221:73:8"
											},
											{
												"body": {
													"nativeSrc": "2353:136:8",
													"nodeType": "YulBlock",
													"src": "2353:136:8",
													"statements": [
														{
															"nativeSrc": "2363:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:8"
																},
																"nativeSrc": "2377:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:8"
																},
																"nativeSrc": "2418:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:8"
															},
															"nativeSrc": "2418:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:8",
														"nodeType": "YulTypedName",
														"src": "2339:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:8",
														"nodeType": "YulTypedName",
														"src": "2345:6:8",
														"type": ""
													}
												],
												"src": "2300:189:8"
											},
											{
												"body": {
													"nativeSrc": "2545:136:8",
													"nodeType": "YulBlock",
													"src": "2545:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:8",
																"nodeType": "YulBlock",
																"src": "2612:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:8"
																			},
																			"nativeSrc": "2626:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:8"
																		},
																		"nativeSrc": "2626:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:8"
																},
																"nativeSrc": "2562:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:8"
															},
															"nativeSrc": "2555:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:8",
																"nodeType": "YulBlock",
																"src": "2577:26:8",
																"statements": [
																	{
																		"nativeSrc": "2579:22:8",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:8"
																			},
																			"nativeSrc": "2588:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:8",
																"nodeType": "YulBlock",
																"src": "2559:2:8",
																"statements": []
															},
															"src": "2555:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:8",
														"nodeType": "YulTypedName",
														"src": "2533:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:8",
														"nodeType": "YulTypedName",
														"src": "2540:3:8",
														"type": ""
													}
												],
												"src": "2495:186:8"
											},
											{
												"body": {
													"nativeSrc": "2766:464:8",
													"nodeType": "YulBlock",
													"src": "2766:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:8",
																"nodeType": "YulBlock",
																"src": "2792:431:8",
																"statements": [
																	{
																		"nativeSrc": "2806:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:8"
																			},
																			"nativeSrc": "2822:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:8",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:8"
																					},
																					"nativeSrc": "2906:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:8"
																			},
																			"nativeSrc": "2892:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:8",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:8",
																			"nodeType": "YulBlock",
																			"src": "3093:27:8",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:8",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:8",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:8"
																			},
																			"nativeSrc": "3074:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:8"
																		},
																		"nativeSrc": "3071:49:8",
																		"nodeType": "YulIf",
																		"src": "3071:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:8"
																							},
																							"nativeSrc": "3189:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:8"
																					},
																					"nativeSrc": "3175:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:8"
																			},
																			"nativeSrc": "3133:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:8"
																		},
																		"nativeSrc": "3133:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:8"
																},
																"nativeSrc": "2780:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:8"
															},
															"nativeSrc": "2777:446:8",
															"nodeType": "YulIf",
															"src": "2777:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:8",
														"nodeType": "YulTypedName",
														"src": "2742:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:8",
														"nodeType": "YulTypedName",
														"src": "2749:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:8",
														"nodeType": "YulTypedName",
														"src": "2754:10:8",
														"type": ""
													}
												],
												"src": "2687:543:8"
											},
											{
												"body": {
													"nativeSrc": "3299:54:8",
													"nodeType": "YulBlock",
													"src": "3299:54:8",
													"statements": [
														{
															"nativeSrc": "3309:37:8",
															"nodeType": "YulAssignment",
															"src": "3309:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:8"
																},
																"nativeSrc": "3330:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:8",
														"nodeType": "YulTypedName",
														"src": "3274:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:8",
														"nodeType": "YulTypedName",
														"src": "3280:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:8",
														"nodeType": "YulTypedName",
														"src": "3290:8:8",
														"type": ""
													}
												],
												"src": "3236:117:8"
											},
											{
												"body": {
													"nativeSrc": "3410:118:8",
													"nodeType": "YulBlock",
													"src": "3410:118:8",
													"statements": [
														{
															"nativeSrc": "3420:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:8"
																				},
																				"nativeSrc": "3465:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:8"
																				},
																				"nativeSrc": "3480:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:8"
																		},
																		"nativeSrc": "3436:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:8"
																},
																"nativeSrc": "3432:56:8",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:8",
															"nodeType": "YulAssignment",
															"src": "3497:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:8"
																},
																"nativeSrc": "3507:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:8",
														"nodeType": "YulTypedName",
														"src": "3387:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:8",
														"nodeType": "YulTypedName",
														"src": "3393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:8",
														"nodeType": "YulTypedName",
														"src": "3403:6:8",
														"type": ""
													}
												],
												"src": "3359:169:8"
											},
											{
												"body": {
													"nativeSrc": "3614:214:8",
													"nodeType": "YulBlock",
													"src": "3614:214:8",
													"statements": [
														{
															"nativeSrc": "3747:37:8",
															"nodeType": "YulAssignment",
															"src": "3747:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:8"
																},
																"nativeSrc": "3755:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:8"
																}
															]
														},
														{
															"nativeSrc": "3793:29:8",
															"nodeType": "YulAssignment",
															"src": "3793:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:8"
																		},
																		"nativeSrc": "3810:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:8"
																},
																"nativeSrc": "3801:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:8",
														"nodeType": "YulTypedName",
														"src": "3595:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:8",
														"nodeType": "YulTypedName",
														"src": "3601:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:8",
														"nodeType": "YulTypedName",
														"src": "3609:4:8",
														"type": ""
													}
												],
												"src": "3533:295:8"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:8",
													"nodeType": "YulBlock",
													"src": "3925:1303:8",
													"statements": [
														{
															"nativeSrc": "3936:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:8"
																},
																"nativeSrc": "3950:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:8",
																"nodeType": "YulBlock",
																"src": "4072:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:8"
																			},
																			"nativeSrc": "4074:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:8"
																		},
																		"nativeSrc": "4074:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:8",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:8"
																},
																"nativeSrc": "4041:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:8"
															},
															"nativeSrc": "4038:56:8",
															"nodeType": "YulIf",
															"src": "4038:56:8"
														},
														{
															"nativeSrc": "4104:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:8"
																		},
																		"nativeSrc": "4144:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:8"
																},
																"nativeSrc": "4118:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:8"
																},
																"nativeSrc": "4203:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:8"
															},
															"nativeSrc": "4203:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:8"
														},
														{
															"nativeSrc": "4280:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:8",
																"nodeType": "YulLiteral",
																"src": "4297:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:8",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:8",
															"nodeType": "YulAssignment",
															"src": "4308:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:8",
																"nodeType": "YulLiteral",
																"src": "4321:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:8",
																		"nodeType": "YulBlock",
																		"src": "4372:611:8",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:8",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:8"
																							},
																							"nativeSrc": "4413:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:8"
																					},
																					"nativeSrc": "4401:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:8",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:8"
																					},
																					"nativeSrc": "4451:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:8",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:8",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:8",
																					"nodeType": "YulBlock",
																					"src": "4569:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:8"
																												},
																												"nativeSrc": "4608:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:8"
																										},
																										"nativeSrc": "4602:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:8"
																								},
																								"nativeSrc": "4587:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:8"
																							},
																							"nativeSrc": "4587:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:8"
																						},
																						{
																							"nativeSrc": "4646:24:8",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:8",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:8"
																								},
																								"nativeSrc": "4656:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:8",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:8",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:8"
																								},
																								"nativeSrc": "4700:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:8"
																					},
																					"nativeSrc": "4532:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:8"
																				},
																				"nativeSrc": "4524:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:8",
																					"nodeType": "YulBlock",
																					"src": "4547:21:8",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:8",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:8",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:8"
																								},
																								"nativeSrc": "4554:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:8",
																					"nodeType": "YulBlock",
																					"src": "4528:3:8",
																					"statements": []
																				},
																				"src": "4524:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:8",
																					"nodeType": "YulBlock",
																					"src": "4768:156:8",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:8"
																										},
																										"nativeSrc": "4809:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:8"
																								},
																								"nativeSrc": "4803:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:8",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:8",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:8"
																												},
																												"nativeSrc": "4891:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:8"
																										},
																										"nativeSrc": "4861:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:8"
																								},
																								"nativeSrc": "4846:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:8"
																							},
																							"nativeSrc": "4846:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:8"
																					},
																					"nativeSrc": "4748:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:8"
																				},
																				"nativeSrc": "4745:179:8",
																				"nodeType": "YulIf",
																				"src": "4745:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:8",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:8"
																									},
																									"nativeSrc": "4954:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:8",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:8"
																							},
																							"nativeSrc": "4950:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:8"
																					},
																					"nativeSrc": "4937:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:8"
																				},
																				"nativeSrc": "4937:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:8"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:8",
																	"nodeType": "YulCase",
																	"src": "4365:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:8",
																		"nodeType": "YulBlock",
																		"src": "5000:222:8",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:8",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:8",
																					"nodeType": "YulBlock",
																					"src": "5051:67:8",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:8",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:8"
																										},
																										"nativeSrc": "5084:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:8"
																								},
																								"nativeSrc": "5078:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:8"
																				},
																				"nativeSrc": "5041:77:8",
																				"nodeType": "YulIf",
																				"src": "5041:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:8"
																							},
																							"nativeSrc": "5144:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:8"
																					},
																					"nativeSrc": "5131:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:8"
																				},
																				"nativeSrc": "5131:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:8"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:8",
																	"nodeType": "YulCase",
																	"src": "4992:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:8"
																},
																"nativeSrc": "4342:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:8"
															},
															"nativeSrc": "4335:887:8",
															"nodeType": "YulSwitch",
															"src": "4335:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:8",
														"nodeType": "YulTypedName",
														"src": "3914:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:8",
														"nodeType": "YulTypedName",
														"src": "3920:3:8",
														"type": ""
													}
												],
												"src": "3833:1395:8"
											},
											{
												"body": {
													"nativeSrc": "5279:81:8",
													"nodeType": "YulBlock",
													"src": "5279:81:8",
													"statements": [
														{
															"nativeSrc": "5289:65:8",
															"nodeType": "YulAssignment",
															"src": "5289:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:8",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:8"
																},
																"nativeSrc": "5300:54:8",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:8",
														"nodeType": "YulTypedName",
														"src": "5261:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:8",
														"nodeType": "YulTypedName",
														"src": "5271:7:8",
														"type": ""
													}
												],
												"src": "5234:126:8"
											},
											{
												"body": {
													"nativeSrc": "5411:51:8",
													"nodeType": "YulBlock",
													"src": "5411:51:8",
													"statements": [
														{
															"nativeSrc": "5421:35:8",
															"nodeType": "YulAssignment",
															"src": "5421:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:8"
																},
																"nativeSrc": "5432:24:8",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:8",
														"nodeType": "YulTypedName",
														"src": "5393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:8",
														"nodeType": "YulTypedName",
														"src": "5403:7:8",
														"type": ""
													}
												],
												"src": "5366:96:8"
											},
											{
												"body": {
													"nativeSrc": "5533:53:8",
													"nodeType": "YulBlock",
													"src": "5533:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:8"
																		},
																		"nativeSrc": "5555:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:8"
																},
																"nativeSrc": "5543:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:8"
															},
															"nativeSrc": "5543:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:8",
														"nodeType": "YulTypedName",
														"src": "5521:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:8",
														"nodeType": "YulTypedName",
														"src": "5528:3:8",
														"type": ""
													}
												],
												"src": "5468:118:8"
											},
											{
												"body": {
													"nativeSrc": "5690:124:8",
													"nodeType": "YulBlock",
													"src": "5690:124:8",
													"statements": [
														{
															"nativeSrc": "5700:26:8",
															"nodeType": "YulAssignment",
															"src": "5700:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:8"
																},
																"nativeSrc": "5708:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:8"
																		},
																		"nativeSrc": "5789:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:8"
																},
																"nativeSrc": "5736:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:8"
															},
															"nativeSrc": "5736:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:8",
														"nodeType": "YulTypedName",
														"src": "5662:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:8",
														"nodeType": "YulTypedName",
														"src": "5674:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:8",
														"nodeType": "YulTypedName",
														"src": "5685:4:8",
														"type": ""
													}
												],
												"src": "5592:222:8"
											},
											{
												"body": {
													"nativeSrc": "5848:152:8",
													"nodeType": "YulBlock",
													"src": "5848:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:8"
																},
																"nativeSrc": "5858:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:8"
															},
															"nativeSrc": "5858:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:8"
																},
																"nativeSrc": "5955:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:8"
															},
															"nativeSrc": "5955:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:8"
																},
																"nativeSrc": "5979:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:8"
															},
															"nativeSrc": "5979:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:8"
											},
											{
												"body": {
													"nativeSrc": "6050:147:8",
													"nodeType": "YulBlock",
													"src": "6050:147:8",
													"statements": [
														{
															"nativeSrc": "6060:25:8",
															"nodeType": "YulAssignment",
															"src": "6060:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:8"
																},
																"nativeSrc": "6065:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:8"
																}
															]
														},
														{
															"nativeSrc": "6094:25:8",
															"nodeType": "YulAssignment",
															"src": "6094:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:8"
																},
																"nativeSrc": "6099:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:8"
																}
															]
														},
														{
															"nativeSrc": "6128:16:8",
															"nodeType": "YulAssignment",
															"src": "6128:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:8"
																},
																"nativeSrc": "6135:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:8",
																"nodeType": "YulBlock",
																"src": "6168:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:8"
																			},
																			"nativeSrc": "6170:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:8"
																		},
																		"nativeSrc": "6170:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:8"
																},
																"nativeSrc": "6157:10:8",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:8"
															},
															"nativeSrc": "6154:36:8",
															"nodeType": "YulIf",
															"src": "6154:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:8",
														"nodeType": "YulTypedName",
														"src": "6037:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:8",
														"nodeType": "YulTypedName",
														"src": "6040:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:8",
														"nodeType": "YulTypedName",
														"src": "6046:3:8",
														"type": ""
													}
												],
												"src": "6006:191:8"
											},
											{
												"body": {
													"nativeSrc": "6268:53:8",
													"nodeType": "YulBlock",
													"src": "6268:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:8"
																		},
																		"nativeSrc": "6290:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:8"
																},
																"nativeSrc": "6278:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:8"
															},
															"nativeSrc": "6278:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:8",
														"nodeType": "YulTypedName",
														"src": "6256:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:8",
														"nodeType": "YulTypedName",
														"src": "6263:3:8",
														"type": ""
													}
												],
												"src": "6203:118:8"
											},
											{
												"body": {
													"nativeSrc": "6481:288:8",
													"nodeType": "YulBlock",
													"src": "6481:288:8",
													"statements": [
														{
															"nativeSrc": "6491:26:8",
															"nodeType": "YulAssignment",
															"src": "6491:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:8"
																},
																"nativeSrc": "6499:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:8"
																		},
																		"nativeSrc": "6580:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:8"
																},
																"nativeSrc": "6527:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:8"
															},
															"nativeSrc": "6527:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:8"
																		},
																		"nativeSrc": "6661:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:8"
																},
																"nativeSrc": "6608:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:8"
															},
															"nativeSrc": "6608:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:8"
																		},
																		"nativeSrc": "6743:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:8"
																},
																"nativeSrc": "6690:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:8"
															},
															"nativeSrc": "6690:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:8",
														"nodeType": "YulTypedName",
														"src": "6437:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:8",
														"nodeType": "YulTypedName",
														"src": "6449:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:8",
														"nodeType": "YulTypedName",
														"src": "6457:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:8",
														"nodeType": "YulTypedName",
														"src": "6465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:8",
														"nodeType": "YulTypedName",
														"src": "6476:4:8",
														"type": ""
													}
												],
												"src": "6327:442:8"
											},
											{
												"body": {
													"nativeSrc": "6873:124:8",
													"nodeType": "YulBlock",
													"src": "6873:124:8",
													"statements": [
														{
															"nativeSrc": "6883:26:8",
															"nodeType": "YulAssignment",
															"src": "6883:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:8"
																},
																"nativeSrc": "6891:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:8"
																		},
																		"nativeSrc": "6972:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:8"
																},
																"nativeSrc": "6919:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:8"
															},
															"nativeSrc": "6919:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:8",
														"nodeType": "YulTypedName",
														"src": "6845:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:8",
														"nodeType": "YulTypedName",
														"src": "6857:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:8",
														"nodeType": "YulTypedName",
														"src": "6868:4:8",
														"type": ""
													}
												],
												"src": "6775:222:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040518060400160405280600b81526020017f4c696e6b20446f6c6c61720000000000000000000000000000000000000000008152506040518060400160405280600481526020017f444f484c00000000000000000000000000000000000000000000000000000000815250816003908161008b91906105f7565b50806004908161009b91906105f7565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061011760055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16673782dace9d90000061011c60201b60201c565b6107db565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361018c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101839190610705565b60405180910390fd5b61019d5f83836101a160201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101f1578060025f8282546101e5919061074b565b925050819055506102bf565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561027a578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016102719392919061078d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610306578060025f8282540392505081905550610350565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103ad91906107c2565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061043557607f821691505b602082108103610448576104476103f1565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104aa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261046f565b6104b4868361046f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6104f86104f36104ee846104cc565b6104d5565b6104cc565b9050919050565b5f819050919050565b610511836104de565b61052561051d826104ff565b84845461047b565b825550505050565b5f5f905090565b61053c61052d565b610547818484610508565b505050565b5b8181101561056a5761055f5f82610534565b60018101905061054d565b5050565b601f8211156105af576105808161044e565b61058984610460565b81016020851015610598578190505b6105ac6105a485610460565b83018261054c565b50505b505050565b5f82821c905092915050565b5f6105cf5f19846008026105b4565b1980831691505092915050565b5f6105e783836105c0565b9150826002028217905092915050565b610600826103ba565b67ffffffffffffffff811115610619576106186103c4565b5b610623825461041e565b61062e82828561056e565b5f60209050601f83116001811461065f575f841561064d578287015190505b61065785826105dc565b8655506106be565b601f19841661066d8661044e565b5f5b828110156106945784890151825560018201915060208501945060208101905061066f565b868310156106b157848901516106ad601f8916826105c0565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106ef826106c6565b9050919050565b6106ff816106e5565b82525050565b5f6020820190506107185f8301846106f6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610755826104cc565b9150610760836104cc565b92508282019050808211156107785761077761071e565b5b92915050565b610787816104cc565b82525050565b5f6060820190506107a05f8301866106f6565b6107ad602083018561077e565b6107ba604083018461077e565b949350505050565b5f6020820190506107d55f83018461077e565b92915050565b611c3b806107e85f395ff3fe608060405234801561000f575f5ffd5b506004361061013f575f3560e01c80638f32d59b116100b6578063af14052c1161007a578063af14052c14610358578063bea1dcf814610362578063dd62ed3e14610380578063f2fde38b146103b0578063f8c8765e146103cc578063faad24f4146103e85761013f565b80638f32d59b146102b057806395d89b41146102ce57806398d5fdca146102ec578063a89ae4ba1461030a578063a9059cbb146103285761013f565b8063245a7bfc11610108578063245a7bfc146101fe578063313ce5671461021c5780633221c93f1461023a57806370a0823114610258578063715018a6146102885780638da5cb5b146102925761013f565b8062113e081461014357806306fdde0314610162578063095ea7b31461018057806318160ddd146101b057806323b872dd146101ce575b5f5ffd5b61014b610406565b6040516101599291906115c7565b60405180910390f35b61016a6104f4565b604051610177919061165e565b60405180910390f35b61019a60048036038101906101959190611706565b610584565b6040516101a7919061175e565b60405180910390f35b6101b86105a6565b6040516101c59190611777565b60405180910390f35b6101e860048036038101906101e39190611790565b6105af565b6040516101f5919061175e565b60405180910390f35b610206610665565b604051610213919061183b565b60405180910390f35b61022461068a565b604051610231919061186f565b60405180910390f35b610242610692565b60405161024f9190611897565b60405180910390f35b610272600480360381019061026d91906118b0565b6106b7565b60405161027f9190611777565b60405180910390f35b6102906106fc565b005b61029a6107b2565b6040516102a79190611897565b60405180910390f35b6102b86107da565b6040516102c5919061175e565b60405180910390f35b6102d6610830565b6040516102e3919061165e565b60405180910390f35b6102f46108c0565b60405161030191906118f3565b60405180910390f35b610312610954565b60405161031f9190611897565b60405180910390f35b610342600480360381019061033d9190611706565b610979565b60405161034f919061175e565b60405180910390f35b61036061099b565b005b61036a610a67565b6040516103779190611897565b60405180910390f35b61039a6004803603810190610395919061190c565b610a8c565b6040516103a79190611777565b60405180910390f35b6103ca60048036038101906103c591906118b0565b610b0e565b005b6103e660048036038101906103e1919061194a565b610b2a565b005b6103f0610de4565b6040516103fd9190611897565b60405180910390f35b5f5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104839190611897565b602060405180830381865afa15801561049e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c291906119c2565b91506104ee60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106b7565b90509091565b60606003805461050390611a1a565b80601f016020809104026020016040519081016040528092919081815260200182805461052f90611a1a565b801561057a5780601f106105515761010080835404028352916020019161057a565b820191905f5260205f20905b81548152906001019060200180831161055d57829003601f168201915b5050505050905090565b5f5f61058e610e09565b905061059b818585610e10565b600191505092915050565b5f600254905090565b5f5f6105b9610e09565b90506105c6858285610e22565b6105ce61099b565b5f8390505f6127106101f4866105e49190611a77565b6105ee9190611ae5565b90505f5f6105fc8784610eb5565b915091508015801561060d57505f83115b15610642578193506106418960075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610ee4565b5b61064d898986610ee4565b61065561099b565b6001955050505050509392505050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6012905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107046107da565b61070c575f5ffd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f60055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60606004805461083f90611a1a565b80601f016020809104026020016040519081016040528092919081815260200182805461086b90611a1a565b80156108b65780601f1061088d576101008083540402835291602001916108b6565b820191905f5260205f20905b81548152906001019060200180831161089957829003601f168201915b5050505050905090565b5f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094f9190611b3f565b905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f610983610e09565b9050610990818585610ee4565b600191505092915050565b5f6109a46108c0565b90505f6109d160085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106b7565b90505f6109dd306106b7565b90505f83836109ec9190611a77565b90505f5f6109fa8385610eb5565b9150915080610a3357610a2e60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610fd4565b610a5f565b610a5e60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611053565b5b505050505050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610b166107da565b610b1e575f5ffd5b610b27816110d2565b50565b610b326107da565b610b3a575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff1660085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b92575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bea575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c42575f5ffd5b8360085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610dd660085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a7640000610fd4565b610dde61099b565b50505050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610e1d83838360016111c7565b505050565b5f610e2d8484610a8c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610eaf5781811015610ea0578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e9793929190611b6a565b60405180910390fd5b610eae84848484035f6111c7565b5b50505050565b5f5f83831115610ecf575f84905083945080935060019150505b8284610edb9190611b9f565b91509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f54575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f4b9190611897565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fbb9190611897565b60405180910390fd5b610fcf838383611396565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611044575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161103b9190611897565b60405180910390fd5b61104f5f8383611396565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c3575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110ba9190611897565b60405180910390fd5b6110ce825f83611396565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611109575f5ffd5b8073ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611237575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161122e9190611897565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112a7575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161129e9190611897565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611390578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113879190611777565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113e6578060025f8282546113da9190611bd2565b925050819055506114b4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561146f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161146693929190611b6a565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114fb578060025f8282540392505081905550611545565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115a29190611777565b60405180910390a3505050565b5f819050919050565b6115c1816115af565b82525050565b5f6040820190506115da5f8301856115b8565b6115e760208301846115b8565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611630826115ee565b61163a81856115f8565b935061164a818560208601611608565b61165381611616565b840191505092915050565b5f6020820190508181035f8301526116768184611626565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116ab82611682565b9050919050565b6116bb816116a1565b81146116c5575f5ffd5b50565b5f813590506116d6816116b2565b92915050565b6116e5816115af565b81146116ef575f5ffd5b50565b5f81359050611700816116dc565b92915050565b5f5f6040838503121561171c5761171b61167e565b5b5f611729858286016116c8565b925050602061173a858286016116f2565b9150509250929050565b5f8115159050919050565b61175881611744565b82525050565b5f6020820190506117715f83018461174f565b92915050565b5f60208201905061178a5f8301846115b8565b92915050565b5f5f5f606084860312156117a7576117a661167e565b5b5f6117b4868287016116c8565b93505060206117c5868287016116c8565b92505060406117d6868287016116f2565b9150509250925092565b5f819050919050565b5f6118036117fe6117f984611682565b6117e0565b611682565b9050919050565b5f611814826117e9565b9050919050565b5f6118258261180a565b9050919050565b6118358161181b565b82525050565b5f60208201905061184e5f83018461182c565b92915050565b5f60ff82169050919050565b61186981611854565b82525050565b5f6020820190506118825f830184611860565b92915050565b611891816116a1565b82525050565b5f6020820190506118aa5f830184611888565b92915050565b5f602082840312156118c5576118c461167e565b5b5f6118d2848285016116c8565b91505092915050565b5f819050919050565b6118ed816118db565b82525050565b5f6020820190506119065f8301846118e4565b92915050565b5f5f604083850312156119225761192161167e565b5b5f61192f858286016116c8565b9250506020611940858286016116c8565b9150509250929050565b5f5f5f5f608085870312156119625761196161167e565b5b5f61196f878288016116c8565b9450506020611980878288016116c8565b9350506040611991878288016116c8565b92505060606119a2878288016116c8565b91505092959194509250565b5f815190506119bc816116dc565b92915050565b5f602082840312156119d7576119d661167e565b5b5f6119e4848285016119ae565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a3157607f821691505b602082108103611a4457611a436119ed565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a81826115af565b9150611a8c836115af565b9250828202611a9a816115af565b91508282048414831517611ab157611ab0611a4a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611aef826115af565b9150611afa836115af565b925082611b0a57611b09611ab8565b5b828204905092915050565b611b1e816118db565b8114611b28575f5ffd5b50565b5f81519050611b3981611b15565b92915050565b5f60208284031215611b5457611b5361167e565b5b5f611b6184828501611b2b565b91505092915050565b5f606082019050611b7d5f830186611888565b611b8a60208301856115b8565b611b9760408301846115b8565b949350505050565b5f611ba9826115af565b9150611bb4836115af565b9250828203905081811115611bcc57611bcb611a4a565b5b92915050565b5f611bdc826115af565b9150611be7836115af565b9250828201905080821115611bff57611bfe611a4a565b5b9291505056fea26469706673582212204cb8b8dd2318b6d4ae1fc281313adcfee0ae29edeaac788bf79273e3f6a26c5264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C696E6B20446F6C6C6172000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444F484C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x5F7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x5F7 JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x117 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0x3782DACE9D900000 PUSH2 0x11C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D PUSH0 DUP4 DUP4 PUSH2 0x1A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2BF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x27A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x306 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x350 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x435 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x448 JUMPI PUSH2 0x447 PUSH2 0x3F1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x4AA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x46F JUMP JUMPDEST PUSH2 0x4B4 DUP7 DUP4 PUSH2 0x46F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F8 PUSH2 0x4F3 PUSH2 0x4EE DUP5 PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x511 DUP4 PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x525 PUSH2 0x51D DUP3 PUSH2 0x4FF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x47B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x53C PUSH2 0x52D JUMP JUMPDEST PUSH2 0x547 DUP2 DUP5 DUP5 PUSH2 0x508 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x56A JUMPI PUSH2 0x55F PUSH0 DUP3 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x54D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5AF JUMPI PUSH2 0x580 DUP2 PUSH2 0x44E JUMP JUMPDEST PUSH2 0x589 DUP5 PUSH2 0x460 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x598 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5AC PUSH2 0x5A4 DUP6 PUSH2 0x460 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x54C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5CF PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5B4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E7 DUP4 DUP4 PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x600 DUP3 PUSH2 0x3BA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST PUSH2 0x623 DUP3 SLOAD PUSH2 0x41E JUMP JUMPDEST PUSH2 0x62E DUP3 DUP3 DUP6 PUSH2 0x56E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x65F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x64D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x657 DUP6 DUP3 PUSH2 0x5DC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x66D DUP7 PUSH2 0x44E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x694 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6EF DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FF DUP2 PUSH2 0x6E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x718 PUSH0 DUP4 ADD DUP5 PUSH2 0x6F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x755 DUP3 PUSH2 0x4CC JUMP JUMPDEST SWAP2 POP PUSH2 0x760 DUP4 PUSH2 0x4CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x778 JUMPI PUSH2 0x777 PUSH2 0x71E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x787 DUP2 PUSH2 0x4CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7A0 PUSH0 DUP4 ADD DUP7 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x7AD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x7BA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x77E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x77E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C3B DUP1 PUSH2 0x7E8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAF14052C GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAF14052C EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xBEA1DCF8 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xFAAD24F4 EQ PUSH2 0x3E8 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xA89AE4BA EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x328 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x245A7BFC GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x245A7BFC EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x3221C93F EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x292 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14B PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x6FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x360 PUSH2 0x99B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F0 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x19C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EE PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B7 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x503 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52F SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x57A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x58E PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP PUSH2 0x59B DUP2 DUP6 DUP6 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B9 PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C6 DUP6 DUP3 DUP6 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x99B JUMP JUMPDEST PUSH0 DUP4 SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1F4 DUP7 PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH2 0x5FC DUP8 DUP5 PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI POP PUSH0 DUP4 GT JUMPDEST ISZERO PUSH2 0x642 JUMPI DUP2 SWAP4 POP PUSH2 0x641 DUP10 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xEE4 JUMP JUMPDEST JUMPDEST PUSH2 0x64D DUP10 DUP10 DUP7 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x655 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x704 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x70C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x83F SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86B SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x899 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x983 PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP PUSH2 0x990 DUP2 DUP6 DUP6 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9A4 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9D1 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9DD ADDRESS PUSH2 0x6B7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP4 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH2 0x9FA DUP4 DUP6 PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0xA33 JUMPI PUSH2 0xA2E PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA5E PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB16 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0xB1E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB27 DUP2 PUSH2 0x10D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB32 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0xB3A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB92 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBEA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDD6 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0xDDE PUSH2 0x99B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE1D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE2D DUP5 DUP5 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xEAF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEA0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE97 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11C7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP4 GT ISZERO PUSH2 0xECF JUMPI PUSH0 DUP5 SWAP1 POP DUP4 SWAP5 POP DUP1 SWAP4 POP PUSH1 0x1 SWAP2 POP POP JUMPDEST DUP3 DUP5 PUSH2 0xEDB SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBB SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFCF DUP4 DUP4 DUP4 PUSH2 0x1396 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1044 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103B SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x104F PUSH0 DUP4 DUP4 PUSH2 0x1396 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BA SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CE DUP3 PUSH0 DUP4 PUSH2 0x1396 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1109 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1237 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1390 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13E6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13DA SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14B4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x146F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1466 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14FB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1545 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A2 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C1 DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15DA PUSH0 DUP4 ADD DUP6 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1630 DUP3 PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x163A DUP2 DUP6 PUSH2 0x15F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x164A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x1653 DUP2 PUSH2 0x1616 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1676 DUP2 DUP5 PUSH2 0x1626 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16AB DUP3 PUSH2 0x1682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BB DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x16C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D6 DUP2 PUSH2 0x16B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E5 DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP2 EQ PUSH2 0x16EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1700 DUP2 PUSH2 0x16DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171C JUMPI PUSH2 0x171B PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1729 DUP6 DUP3 DUP7 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173A DUP6 DUP3 DUP7 ADD PUSH2 0x16F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1758 DUP2 PUSH2 0x1744 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1771 PUSH0 DUP4 ADD DUP5 PUSH2 0x174F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH0 DUP4 ADD DUP5 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17A7 JUMPI PUSH2 0x17A6 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B4 DUP7 DUP3 DUP8 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17C5 DUP7 DUP3 DUP8 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17D6 DUP7 DUP3 DUP8 ADD PUSH2 0x16F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1803 PUSH2 0x17FE PUSH2 0x17F9 DUP5 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0x1682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1814 DUP3 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1825 DUP3 PUSH2 0x180A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1835 DUP2 PUSH2 0x181B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x184E PUSH0 DUP4 ADD DUP5 PUSH2 0x182C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1869 DUP2 PUSH2 0x1854 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1882 PUSH0 DUP4 ADD DUP5 PUSH2 0x1860 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1891 DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18AA PUSH0 DUP4 ADD DUP5 PUSH2 0x1888 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C4 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D2 DUP5 DUP3 DUP6 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18ED DUP2 PUSH2 0x18DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1906 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x192F DUP6 DUP3 DUP7 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1940 DUP6 DUP3 DUP7 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x196F DUP8 DUP3 DUP9 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1980 DUP8 DUP3 DUP9 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1991 DUP8 DUP3 DUP9 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x19A2 DUP8 DUP3 DUP9 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19BC DUP2 PUSH2 0x16DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D7 JUMPI PUSH2 0x19D6 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19E4 DUP5 DUP3 DUP6 ADD PUSH2 0x19AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A31 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A44 JUMPI PUSH2 0x1A43 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A81 DUP3 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8C DUP4 PUSH2 0x15AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A9A DUP2 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1AB1 JUMPI PUSH2 0x1AB0 PUSH2 0x1A4A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AEF DUP3 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFA DUP4 PUSH2 0x15AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B0A JUMPI PUSH2 0x1B09 PUSH2 0x1AB8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B1E DUP2 PUSH2 0x18DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1B28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B39 DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B53 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B61 DUP5 DUP3 DUP6 ADD PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH0 DUP4 ADD DUP7 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x1B8A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x1B97 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15B8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA9 DUP3 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB4 DUP4 PUSH2 0x15AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BCC JUMPI PUSH2 0x1BCB PUSH2 0x1A4A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDC DUP3 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE7 DUP4 PUSH2 0x15AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x1A4A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB8 0xB8 0xDD 0x23 XOR 0xB6 0xD4 0xAE 0x1F 0xC2 DUP2 BALANCE GASPRICE 0xDC INVALID 0xE0 0xAE 0x29 0xED 0xEA 0xAC PUSH25 0x8BF79273E3F6A26C5264736F6C634300081C00330000000000 ",
							"sourceMap": "337:2912:5:-:0;;;711:91;;;;;;;;;;1601:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;581:10:6;572:6;;:19;;;;;;;;;;;;;;;;;;765:29:5::1;771:6;;;;;;;;;;;635:4;765:5;;;:29;;:::i;:::-;337:2912:::0;;7458:208:1;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;337:2912:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_absDiff_1037": {
									"entryPoint": 3765,
									"id": 1037,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_approve_542": {
									"entryPoint": 3600,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 4551,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 4179,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 4052,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 3593,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 3618,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_1220": {
									"entryPoint": 4306,
									"id": 1220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 3812,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 5014,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@aggregator_807": {
									"entryPoint": 1637,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 2700,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1412,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1719,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1674,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalances_920": {
									"entryPoint": 1030,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getPrice_1047": {
									"entryPoint": 2240,
									"id": 1047,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_897": {
									"entryPoint": 2858,
									"id": 897,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@isOwner_1167": {
									"entryPoint": 2010,
									"id": 1167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@liquidityAddress_800": {
									"entryPoint": 1682,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 1268,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@oracleAddress_802": {
									"entryPoint": 2388,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1147": {
									"entryPoint": 1970,
									"id": 1147,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rebase_1107": {
									"entryPoint": 2459,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_1184": {
									"entryPoint": 1788,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 2096,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxCollector_798": {
									"entryPoint": 2663,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenZero_796": {
									"entryPoint": 3556,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": 1446,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_998": {
									"entryPoint": 1455,
									"id": 998,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1196": {
									"entryPoint": 2830,
									"id": 1196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_261": {
									"entryPoint": 2425,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_int256_fromMemory": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorInterface_$1269_to_t_address_fromStack": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorInterface_$1269__to_t_address__fromStack_reversed": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 6363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorInterface_$1269_to_t_address": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6730,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 6933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11899:8",
										"nodeType": "YulBlock",
										"src": "0:11899:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:8",
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nativeSrc": "62:16:8",
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:8",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nativeSrc": "155:53:8",
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nativeSrc": "177:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nativeSrc": "165:37:8",
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nativeSrc": "165:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:8",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:8",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nativeSrc": "340:206:8",
													"nodeType": "YulBlock",
													"src": "340:206:8",
													"statements": [
														{
															"nativeSrc": "350:26:8",
															"nodeType": "YulAssignment",
															"src": "350:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "373:2:8",
																		"nodeType": "YulLiteral",
																		"src": "373:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "358:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:8"
																},
																"nativeSrc": "358:18:8",
																"nodeType": "YulFunctionCall",
																"src": "358:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "350:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "350:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "430:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "430:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "443:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "443:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "454:1:8",
																				"nodeType": "YulLiteral",
																				"src": "454:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "439:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "439:3:8"
																		},
																		"nativeSrc": "439:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "439:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "386:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "386:43:8"
																},
																"nativeSrc": "386:71:8",
																"nodeType": "YulFunctionCall",
																"src": "386:71:8"
															},
															"nativeSrc": "386:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "386:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "511:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "524:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "524:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "535:2:8",
																				"nodeType": "YulLiteral",
																				"src": "535:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "467:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "467:43:8"
																},
																"nativeSrc": "467:72:8",
																"nodeType": "YulFunctionCall",
																"src": "467:72:8"
															},
															"nativeSrc": "467:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "467:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "214:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "304:9:8",
														"nodeType": "YulTypedName",
														"src": "304:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "316:6:8",
														"nodeType": "YulTypedName",
														"src": "316:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "324:6:8",
														"nodeType": "YulTypedName",
														"src": "324:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "335:4:8",
														"nodeType": "YulTypedName",
														"src": "335:4:8",
														"type": ""
													}
												],
												"src": "214:332:8"
											},
											{
												"body": {
													"nativeSrc": "611:40:8",
													"nodeType": "YulBlock",
													"src": "611:40:8",
													"statements": [
														{
															"nativeSrc": "622:22:8",
															"nodeType": "YulAssignment",
															"src": "622:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "638:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "638:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "632:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "632:5:8"
																},
																"nativeSrc": "632:12:8",
																"nodeType": "YulFunctionCall",
																"src": "632:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "622:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "552:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "594:5:8",
														"nodeType": "YulTypedName",
														"src": "594:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "604:6:8",
														"nodeType": "YulTypedName",
														"src": "604:6:8",
														"type": ""
													}
												],
												"src": "552:99:8"
											},
											{
												"body": {
													"nativeSrc": "753:73:8",
													"nodeType": "YulBlock",
													"src": "753:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "763:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:8"
																},
																"nativeSrc": "763:19:8",
																"nodeType": "YulFunctionCall",
																"src": "763:19:8"
															},
															"nativeSrc": "763:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "763:19:8"
														},
														{
															"nativeSrc": "791:29:8",
															"nodeType": "YulAssignment",
															"src": "791:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "810:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "810:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "815:4:8",
																		"nodeType": "YulLiteral",
																		"src": "815:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "806:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "806:3:8"
																},
																"nativeSrc": "806:14:8",
																"nodeType": "YulFunctionCall",
																"src": "806:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "791:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "657:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "725:3:8",
														"nodeType": "YulTypedName",
														"src": "725:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "730:6:8",
														"nodeType": "YulTypedName",
														"src": "730:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "741:11:8",
														"nodeType": "YulTypedName",
														"src": "741:11:8",
														"type": ""
													}
												],
												"src": "657:169:8"
											},
											{
												"body": {
													"nativeSrc": "894:77:8",
													"nodeType": "YulBlock",
													"src": "894:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "911:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "911:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "916:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "916:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "921:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "921:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "905:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "905:5:8"
																},
																"nativeSrc": "905:23:8",
																"nodeType": "YulFunctionCall",
																"src": "905:23:8"
															},
															"nativeSrc": "905:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "905:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "948:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "948:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "953:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "953:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "944:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "944:3:8"
																		},
																		"nativeSrc": "944:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "944:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "962:1:8",
																		"nodeType": "YulLiteral",
																		"src": "962:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "937:6:8"
																},
																"nativeSrc": "937:27:8",
																"nodeType": "YulFunctionCall",
																"src": "937:27:8"
															},
															"nativeSrc": "937:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "937:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "832:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "876:3:8",
														"nodeType": "YulTypedName",
														"src": "876:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "881:3:8",
														"nodeType": "YulTypedName",
														"src": "881:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "886:6:8",
														"nodeType": "YulTypedName",
														"src": "886:6:8",
														"type": ""
													}
												],
												"src": "832:139:8"
											},
											{
												"body": {
													"nativeSrc": "1025:54:8",
													"nodeType": "YulBlock",
													"src": "1025:54:8",
													"statements": [
														{
															"nativeSrc": "1035:38:8",
															"nodeType": "YulAssignment",
															"src": "1035:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1053:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1053:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1060:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1049:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1049:3:8"
																		},
																		"nativeSrc": "1049:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1049:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1069:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1069:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1065:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1065:3:8"
																		},
																		"nativeSrc": "1065:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1065:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1045:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1045:3:8"
																},
																"nativeSrc": "1045:28:8",
																"nodeType": "YulFunctionCall",
																"src": "1045:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1035:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1035:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "977:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1008:5:8",
														"nodeType": "YulTypedName",
														"src": "1008:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1018:6:8",
														"nodeType": "YulTypedName",
														"src": "1018:6:8",
														"type": ""
													}
												],
												"src": "977:102:8"
											},
											{
												"body": {
													"nativeSrc": "1177:285:8",
													"nodeType": "YulBlock",
													"src": "1177:285:8",
													"statements": [
														{
															"nativeSrc": "1187:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1187:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1234:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1234:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1201:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "1201:32:8"
																},
																"nativeSrc": "1201:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1201:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1191:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1191:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1249:78:8",
															"nodeType": "YulAssignment",
															"src": "1249:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1315:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1320:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1256:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "1256:58:8"
																},
																"nativeSrc": "1256:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1256:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1249:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1249:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1375:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1375:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1382:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1382:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1371:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:8"
																		},
																		"nativeSrc": "1371:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1371:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1389:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1389:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1394:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1336:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "1336:34:8"
																},
																"nativeSrc": "1336:65:8",
																"nodeType": "YulFunctionCall",
																"src": "1336:65:8"
															},
															"nativeSrc": "1336:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "1336:65:8"
														},
														{
															"nativeSrc": "1410:46:8",
															"nodeType": "YulAssignment",
															"src": "1410:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1448:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1426:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "1426:21:8"
																		},
																		"nativeSrc": "1426:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1426:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1417:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1417:3:8"
																},
																"nativeSrc": "1417:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1417:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1410:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1085:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1158:5:8",
														"nodeType": "YulTypedName",
														"src": "1158:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1165:3:8",
														"nodeType": "YulTypedName",
														"src": "1165:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1173:3:8",
														"nodeType": "YulTypedName",
														"src": "1173:3:8",
														"type": ""
													}
												],
												"src": "1085:377:8"
											},
											{
												"body": {
													"nativeSrc": "1586:195:8",
													"nodeType": "YulBlock",
													"src": "1586:195:8",
													"statements": [
														{
															"nativeSrc": "1596:26:8",
															"nodeType": "YulAssignment",
															"src": "1596:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1608:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1608:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1619:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1619:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1604:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1604:3:8"
																},
																"nativeSrc": "1604:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1604:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1596:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1596:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1643:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1643:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1654:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1654:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1639:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1639:3:8"
																		},
																		"nativeSrc": "1639:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1639:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1662:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1662:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1668:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1668:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1658:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1658:3:8"
																		},
																		"nativeSrc": "1658:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1658:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1632:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1632:6:8"
																},
																"nativeSrc": "1632:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1632:47:8"
															},
															"nativeSrc": "1632:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1632:47:8"
														},
														{
															"nativeSrc": "1688:86:8",
															"nodeType": "YulAssignment",
															"src": "1688:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1760:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1760:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1769:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1769:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1696:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1696:63:8"
																},
																"nativeSrc": "1696:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1696:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1688:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1688:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1468:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1558:9:8",
														"nodeType": "YulTypedName",
														"src": "1558:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1570:6:8",
														"nodeType": "YulTypedName",
														"src": "1570:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1581:4:8",
														"nodeType": "YulTypedName",
														"src": "1581:4:8",
														"type": ""
													}
												],
												"src": "1468:313:8"
											},
											{
												"body": {
													"nativeSrc": "1827:35:8",
													"nodeType": "YulBlock",
													"src": "1827:35:8",
													"statements": [
														{
															"nativeSrc": "1837:19:8",
															"nodeType": "YulAssignment",
															"src": "1837:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1853:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1853:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1847:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1847:5:8"
																},
																"nativeSrc": "1847:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1847:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1837:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1837:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1787:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1820:6:8",
														"nodeType": "YulTypedName",
														"src": "1820:6:8",
														"type": ""
													}
												],
												"src": "1787:75:8"
											},
											{
												"body": {
													"nativeSrc": "1957:28:8",
													"nodeType": "YulBlock",
													"src": "1957:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1974:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1977:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1977:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1967:6:8"
																},
																"nativeSrc": "1967:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1967:12:8"
															},
															"nativeSrc": "1967:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1967:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1868:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1868:117:8"
											},
											{
												"body": {
													"nativeSrc": "2080:28:8",
													"nodeType": "YulBlock",
													"src": "2080:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2100:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2100:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2090:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																},
																"nativeSrc": "2090:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2090:12:8"
															},
															"nativeSrc": "2090:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "2090:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1991:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1991:117:8"
											},
											{
												"body": {
													"nativeSrc": "2159:81:8",
													"nodeType": "YulBlock",
													"src": "2159:81:8",
													"statements": [
														{
															"nativeSrc": "2169:65:8",
															"nodeType": "YulAssignment",
															"src": "2169:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2184:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2184:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2191:42:8",
																		"nodeType": "YulLiteral",
																		"src": "2191:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2180:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2180:3:8"
																},
																"nativeSrc": "2180:54:8",
																"nodeType": "YulFunctionCall",
																"src": "2180:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2169:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2169:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2114:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2141:5:8",
														"nodeType": "YulTypedName",
														"src": "2141:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2151:7:8",
														"nodeType": "YulTypedName",
														"src": "2151:7:8",
														"type": ""
													}
												],
												"src": "2114:126:8"
											},
											{
												"body": {
													"nativeSrc": "2291:51:8",
													"nodeType": "YulBlock",
													"src": "2291:51:8",
													"statements": [
														{
															"nativeSrc": "2301:35:8",
															"nodeType": "YulAssignment",
															"src": "2301:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2330:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2330:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2312:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2312:17:8"
																},
																"nativeSrc": "2312:24:8",
																"nodeType": "YulFunctionCall",
																"src": "2312:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2301:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2301:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2246:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2273:5:8",
														"nodeType": "YulTypedName",
														"src": "2273:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2283:7:8",
														"nodeType": "YulTypedName",
														"src": "2283:7:8",
														"type": ""
													}
												],
												"src": "2246:96:8"
											},
											{
												"body": {
													"nativeSrc": "2391:79:8",
													"nodeType": "YulBlock",
													"src": "2391:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2448:16:8",
																"nodeType": "YulBlock",
																"src": "2448:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2457:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2460:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2460:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2450:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:8"
																			},
																			"nativeSrc": "2450:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2450:12:8"
																		},
																		"nativeSrc": "2450:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2450:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2414:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2414:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2439:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2439:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2421:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2421:17:8"
																				},
																				"nativeSrc": "2421:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2421:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2411:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2411:2:8"
																		},
																		"nativeSrc": "2411:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2411:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2404:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:8"
																},
																"nativeSrc": "2404:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2404:43:8"
															},
															"nativeSrc": "2401:63:8",
															"nodeType": "YulIf",
															"src": "2401:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2348:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2384:5:8",
														"nodeType": "YulTypedName",
														"src": "2384:5:8",
														"type": ""
													}
												],
												"src": "2348:122:8"
											},
											{
												"body": {
													"nativeSrc": "2528:87:8",
													"nodeType": "YulBlock",
													"src": "2528:87:8",
													"statements": [
														{
															"nativeSrc": "2538:29:8",
															"nodeType": "YulAssignment",
															"src": "2538:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2560:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2560:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2547:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2547:12:8"
																},
																"nativeSrc": "2547:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2547:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2538:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2538:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2603:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2603:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2576:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2576:26:8"
																},
																"nativeSrc": "2576:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2576:33:8"
															},
															"nativeSrc": "2576:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2576:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2476:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2506:6:8",
														"nodeType": "YulTypedName",
														"src": "2506:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2514:3:8",
														"nodeType": "YulTypedName",
														"src": "2514:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2522:5:8",
														"nodeType": "YulTypedName",
														"src": "2522:5:8",
														"type": ""
													}
												],
												"src": "2476:139:8"
											},
											{
												"body": {
													"nativeSrc": "2664:79:8",
													"nodeType": "YulBlock",
													"src": "2664:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2721:16:8",
																"nodeType": "YulBlock",
																"src": "2721:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2730:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2733:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2723:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2723:6:8"
																			},
																			"nativeSrc": "2723:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2723:12:8"
																		},
																		"nativeSrc": "2723:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2723:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2687:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2687:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2712:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2712:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2694:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2694:17:8"
																				},
																				"nativeSrc": "2694:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2694:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2684:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2684:2:8"
																		},
																		"nativeSrc": "2684:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2684:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2677:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:8"
																},
																"nativeSrc": "2677:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2677:43:8"
															},
															"nativeSrc": "2674:63:8",
															"nodeType": "YulIf",
															"src": "2674:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2621:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2657:5:8",
														"nodeType": "YulTypedName",
														"src": "2657:5:8",
														"type": ""
													}
												],
												"src": "2621:122:8"
											},
											{
												"body": {
													"nativeSrc": "2801:87:8",
													"nodeType": "YulBlock",
													"src": "2801:87:8",
													"statements": [
														{
															"nativeSrc": "2811:29:8",
															"nodeType": "YulAssignment",
															"src": "2811:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2833:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2820:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:8"
																},
																"nativeSrc": "2820:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2820:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2811:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2811:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2876:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2876:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2849:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2849:26:8"
																},
																"nativeSrc": "2849:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2849:33:8"
															},
															"nativeSrc": "2849:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2849:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2749:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2779:6:8",
														"nodeType": "YulTypedName",
														"src": "2779:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2787:3:8",
														"nodeType": "YulTypedName",
														"src": "2787:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2795:5:8",
														"nodeType": "YulTypedName",
														"src": "2795:5:8",
														"type": ""
													}
												],
												"src": "2749:139:8"
											},
											{
												"body": {
													"nativeSrc": "2977:391:8",
													"nodeType": "YulBlock",
													"src": "2977:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3023:83:8",
																"nodeType": "YulBlock",
																"src": "3023:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3025:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3025:77:8"
																			},
																			"nativeSrc": "3025:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3025:79:8"
																		},
																		"nativeSrc": "3025:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3025:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2998:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2998:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3007:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3007:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2994:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2994:3:8"
																		},
																		"nativeSrc": "2994:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2994:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3019:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3019:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2990:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2990:3:8"
																},
																"nativeSrc": "2990:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2990:32:8"
															},
															"nativeSrc": "2987:119:8",
															"nodeType": "YulIf",
															"src": "2987:119:8"
														},
														{
															"nativeSrc": "3116:117:8",
															"nodeType": "YulBlock",
															"src": "3116:117:8",
															"statements": [
																{
																	"nativeSrc": "3131:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3131:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3145:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3145:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3135:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3135:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3160:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3160:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3195:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3195:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3206:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3206:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3191:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3191:3:8"
																				},
																				"nativeSrc": "3191:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3191:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3215:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3215:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3170:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3170:20:8"
																		},
																		"nativeSrc": "3170:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3170:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3160:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3160:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3243:118:8",
															"nodeType": "YulBlock",
															"src": "3243:118:8",
															"statements": [
																{
																	"nativeSrc": "3258:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3258:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3272:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3272:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3262:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3262:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3288:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3288:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3323:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3323:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3334:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3334:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3319:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3319:3:8"
																				},
																				"nativeSrc": "3319:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3319:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3343:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3343:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3298:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3298:20:8"
																		},
																		"nativeSrc": "3298:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3298:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3288:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3288:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2894:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2939:9:8",
														"nodeType": "YulTypedName",
														"src": "2939:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2950:7:8",
														"nodeType": "YulTypedName",
														"src": "2950:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2962:6:8",
														"nodeType": "YulTypedName",
														"src": "2962:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2970:6:8",
														"nodeType": "YulTypedName",
														"src": "2970:6:8",
														"type": ""
													}
												],
												"src": "2894:474:8"
											},
											{
												"body": {
													"nativeSrc": "3416:48:8",
													"nodeType": "YulBlock",
													"src": "3416:48:8",
													"statements": [
														{
															"nativeSrc": "3426:32:8",
															"nodeType": "YulAssignment",
															"src": "3426:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3451:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3451:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3444:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3444:6:8"
																		},
																		"nativeSrc": "3444:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3444:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3437:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:8"
																},
																"nativeSrc": "3437:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3437:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3426:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3426:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3374:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3398:5:8",
														"nodeType": "YulTypedName",
														"src": "3398:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3408:7:8",
														"nodeType": "YulTypedName",
														"src": "3408:7:8",
														"type": ""
													}
												],
												"src": "3374:90:8"
											},
											{
												"body": {
													"nativeSrc": "3529:50:8",
													"nodeType": "YulBlock",
													"src": "3529:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3546:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3546:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3566:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3566:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3551:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3551:14:8"
																		},
																		"nativeSrc": "3551:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3551:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3539:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3539:6:8"
																},
																"nativeSrc": "3539:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3539:34:8"
															},
															"nativeSrc": "3539:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3539:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3470:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3517:5:8",
														"nodeType": "YulTypedName",
														"src": "3517:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3524:3:8",
														"nodeType": "YulTypedName",
														"src": "3524:3:8",
														"type": ""
													}
												],
												"src": "3470:109:8"
											},
											{
												"body": {
													"nativeSrc": "3677:118:8",
													"nodeType": "YulBlock",
													"src": "3677:118:8",
													"statements": [
														{
															"nativeSrc": "3687:26:8",
															"nodeType": "YulAssignment",
															"src": "3687:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3699:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3699:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3710:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3695:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3695:3:8"
																},
																"nativeSrc": "3695:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3695:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3687:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3687:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3761:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3761:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3774:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3785:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3785:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3770:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:8"
																		},
																		"nativeSrc": "3770:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3770:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3723:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3723:37:8"
																},
																"nativeSrc": "3723:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3723:65:8"
															},
															"nativeSrc": "3723:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3723:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3585:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3649:9:8",
														"nodeType": "YulTypedName",
														"src": "3649:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3661:6:8",
														"nodeType": "YulTypedName",
														"src": "3661:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3672:4:8",
														"nodeType": "YulTypedName",
														"src": "3672:4:8",
														"type": ""
													}
												],
												"src": "3585:210:8"
											},
											{
												"body": {
													"nativeSrc": "3899:124:8",
													"nodeType": "YulBlock",
													"src": "3899:124:8",
													"statements": [
														{
															"nativeSrc": "3909:26:8",
															"nodeType": "YulAssignment",
															"src": "3909:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3921:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3921:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3932:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3932:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3917:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3917:3:8"
																},
																"nativeSrc": "3917:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3917:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3909:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3909:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3989:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3989:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4002:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4002:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4013:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4013:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:8"
																		},
																		"nativeSrc": "3998:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3945:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3945:43:8"
																},
																"nativeSrc": "3945:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3945:71:8"
															},
															"nativeSrc": "3945:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3945:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3801:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3871:9:8",
														"nodeType": "YulTypedName",
														"src": "3871:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3883:6:8",
														"nodeType": "YulTypedName",
														"src": "3883:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3894:4:8",
														"nodeType": "YulTypedName",
														"src": "3894:4:8",
														"type": ""
													}
												],
												"src": "3801:222:8"
											},
											{
												"body": {
													"nativeSrc": "4129:519:8",
													"nodeType": "YulBlock",
													"src": "4129:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4175:83:8",
																"nodeType": "YulBlock",
																"src": "4175:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4177:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4177:77:8"
																			},
																			"nativeSrc": "4177:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4177:79:8"
																		},
																		"nativeSrc": "4177:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4177:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4150:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4150:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4159:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4146:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:8"
																		},
																		"nativeSrc": "4146:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4146:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4171:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4171:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4142:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4142:3:8"
																},
																"nativeSrc": "4142:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4142:32:8"
															},
															"nativeSrc": "4139:119:8",
															"nodeType": "YulIf",
															"src": "4139:119:8"
														},
														{
															"nativeSrc": "4268:117:8",
															"nodeType": "YulBlock",
															"src": "4268:117:8",
															"statements": [
																{
																	"nativeSrc": "4283:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4283:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4297:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4297:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4287:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4287:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4312:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4312:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4347:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4347:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4358:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4358:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4343:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4343:3:8"
																				},
																				"nativeSrc": "4343:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4343:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4367:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4367:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4322:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4322:20:8"
																		},
																		"nativeSrc": "4322:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4322:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4312:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4312:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4395:118:8",
															"nodeType": "YulBlock",
															"src": "4395:118:8",
															"statements": [
																{
																	"nativeSrc": "4410:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4424:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4414:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4414:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4440:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4440:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4475:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4475:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4486:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4486:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4471:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4471:3:8"
																				},
																				"nativeSrc": "4471:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4471:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4495:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4495:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4450:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4450:20:8"
																		},
																		"nativeSrc": "4450:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4450:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4440:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4440:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4523:118:8",
															"nodeType": "YulBlock",
															"src": "4523:118:8",
															"statements": [
																{
																	"nativeSrc": "4538:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4538:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4552:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4542:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4542:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4568:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4568:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4603:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4603:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4614:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4614:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4599:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4599:3:8"
																				},
																				"nativeSrc": "4599:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4599:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4623:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4623:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4578:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4578:20:8"
																		},
																		"nativeSrc": "4578:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4578:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4568:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4568:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4029:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4083:9:8",
														"nodeType": "YulTypedName",
														"src": "4083:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4094:7:8",
														"nodeType": "YulTypedName",
														"src": "4094:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4106:6:8",
														"nodeType": "YulTypedName",
														"src": "4106:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4114:6:8",
														"nodeType": "YulTypedName",
														"src": "4114:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4122:6:8",
														"nodeType": "YulTypedName",
														"src": "4122:6:8",
														"type": ""
													}
												],
												"src": "4029:619:8"
											},
											{
												"body": {
													"nativeSrc": "4686:28:8",
													"nodeType": "YulBlock",
													"src": "4686:28:8",
													"statements": [
														{
															"nativeSrc": "4696:12:8",
															"nodeType": "YulAssignment",
															"src": "4696:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "4703:5:8",
																"nodeType": "YulIdentifier",
																"src": "4703:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4696:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4696:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4654:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4672:5:8",
														"nodeType": "YulTypedName",
														"src": "4672:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4682:3:8",
														"nodeType": "YulTypedName",
														"src": "4682:3:8",
														"type": ""
													}
												],
												"src": "4654:60:8"
											},
											{
												"body": {
													"nativeSrc": "4780:82:8",
													"nodeType": "YulBlock",
													"src": "4780:82:8",
													"statements": [
														{
															"nativeSrc": "4790:66:8",
															"nodeType": "YulAssignment",
															"src": "4790:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4848:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4848:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4830:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "4830:17:8"
																				},
																				"nativeSrc": "4830:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4830:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4821:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "4821:8:8"
																		},
																		"nativeSrc": "4821:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4821:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4803:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4803:17:8"
																},
																"nativeSrc": "4803:53:8",
																"nodeType": "YulFunctionCall",
																"src": "4803:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4790:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4790:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4720:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4760:5:8",
														"nodeType": "YulTypedName",
														"src": "4760:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4770:9:8",
														"nodeType": "YulTypedName",
														"src": "4770:9:8",
														"type": ""
													}
												],
												"src": "4720:142:8"
											},
											{
												"body": {
													"nativeSrc": "4928:66:8",
													"nodeType": "YulBlock",
													"src": "4928:66:8",
													"statements": [
														{
															"nativeSrc": "4938:50:8",
															"nodeType": "YulAssignment",
															"src": "4938:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4982:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4982:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4951:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4951:30:8"
																},
																"nativeSrc": "4951:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4951:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4938:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4938:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4868:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4908:5:8",
														"nodeType": "YulTypedName",
														"src": "4908:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4918:9:8",
														"nodeType": "YulTypedName",
														"src": "4918:9:8",
														"type": ""
													}
												],
												"src": "4868:126:8"
											},
											{
												"body": {
													"nativeSrc": "5088:66:8",
													"nodeType": "YulBlock",
													"src": "5088:66:8",
													"statements": [
														{
															"nativeSrc": "5098:50:8",
															"nodeType": "YulAssignment",
															"src": "5098:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5142:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5142:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5111:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5111:30:8"
																},
																"nativeSrc": "5111:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5111:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5098:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5098:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorInterface_$1269_to_t_address",
												"nativeSrc": "5000:154:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5068:5:8",
														"nodeType": "YulTypedName",
														"src": "5068:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5078:9:8",
														"nodeType": "YulTypedName",
														"src": "5078:9:8",
														"type": ""
													}
												],
												"src": "5000:154:8"
											},
											{
												"body": {
													"nativeSrc": "5253:94:8",
													"nodeType": "YulBlock",
													"src": "5253:94:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5334:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5334:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorInterface_$1269_to_t_address",
																			"nativeSrc": "5275:58:8",
																			"nodeType": "YulIdentifier",
																			"src": "5275:58:8"
																		},
																		"nativeSrc": "5275:65:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:65:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:8"
																},
																"nativeSrc": "5263:78:8",
																"nodeType": "YulFunctionCall",
																"src": "5263:78:8"
															},
															"nativeSrc": "5263:78:8",
															"nodeType": "YulExpressionStatement",
															"src": "5263:78:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorInterface_$1269_to_t_address_fromStack",
												"nativeSrc": "5160:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:8",
														"nodeType": "YulTypedName",
														"src": "5241:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5248:3:8",
														"nodeType": "YulTypedName",
														"src": "5248:3:8",
														"type": ""
													}
												],
												"src": "5160:187:8"
											},
											{
												"body": {
													"nativeSrc": "5479:152:8",
													"nodeType": "YulBlock",
													"src": "5479:152:8",
													"statements": [
														{
															"nativeSrc": "5489:26:8",
															"nodeType": "YulAssignment",
															"src": "5489:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5501:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5501:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5512:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5512:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5497:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5497:3:8"
																},
																"nativeSrc": "5497:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5497:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5489:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5489:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5597:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5597:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5610:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5610:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5621:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5621:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5606:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:8"
																		},
																		"nativeSrc": "5606:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5606:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorInterface_$1269_to_t_address_fromStack",
																	"nativeSrc": "5525:71:8",
																	"nodeType": "YulIdentifier",
																	"src": "5525:71:8"
																},
																"nativeSrc": "5525:99:8",
																"nodeType": "YulFunctionCall",
																"src": "5525:99:8"
															},
															"nativeSrc": "5525:99:8",
															"nodeType": "YulExpressionStatement",
															"src": "5525:99:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorInterface_$1269__to_t_address__fromStack_reversed",
												"nativeSrc": "5353:278:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5451:9:8",
														"nodeType": "YulTypedName",
														"src": "5451:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5463:6:8",
														"nodeType": "YulTypedName",
														"src": "5463:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5474:4:8",
														"nodeType": "YulTypedName",
														"src": "5474:4:8",
														"type": ""
													}
												],
												"src": "5353:278:8"
											},
											{
												"body": {
													"nativeSrc": "5680:43:8",
													"nodeType": "YulBlock",
													"src": "5680:43:8",
													"statements": [
														{
															"nativeSrc": "5690:27:8",
															"nodeType": "YulAssignment",
															"src": "5690:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5705:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5705:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5712:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5701:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5701:3:8"
																},
																"nativeSrc": "5701:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5701:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5690:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5690:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5637:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5662:5:8",
														"nodeType": "YulTypedName",
														"src": "5662:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5672:7:8",
														"nodeType": "YulTypedName",
														"src": "5672:7:8",
														"type": ""
													}
												],
												"src": "5637:86:8"
											},
											{
												"body": {
													"nativeSrc": "5790:51:8",
													"nodeType": "YulBlock",
													"src": "5790:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5807:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5807:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5828:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5828:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5812:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "5812:15:8"
																		},
																		"nativeSrc": "5812:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5812:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5800:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5800:6:8"
																},
																"nativeSrc": "5800:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5800:35:8"
															},
															"nativeSrc": "5800:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "5800:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5729:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5778:5:8",
														"nodeType": "YulTypedName",
														"src": "5778:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5785:3:8",
														"nodeType": "YulTypedName",
														"src": "5785:3:8",
														"type": ""
													}
												],
												"src": "5729:112:8"
											},
											{
												"body": {
													"nativeSrc": "5941:120:8",
													"nodeType": "YulBlock",
													"src": "5941:120:8",
													"statements": [
														{
															"nativeSrc": "5951:26:8",
															"nodeType": "YulAssignment",
															"src": "5951:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5963:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5963:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5974:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5974:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5959:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5959:3:8"
																},
																"nativeSrc": "5959:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5959:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5951:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5951:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6027:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6027:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6040:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6040:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6051:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6051:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6036:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6036:3:8"
																		},
																		"nativeSrc": "6036:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6036:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5987:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5987:39:8"
																},
																"nativeSrc": "5987:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5987:67:8"
															},
															"nativeSrc": "5987:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5987:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5847:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5913:9:8",
														"nodeType": "YulTypedName",
														"src": "5913:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5925:6:8",
														"nodeType": "YulTypedName",
														"src": "5925:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5936:4:8",
														"nodeType": "YulTypedName",
														"src": "5936:4:8",
														"type": ""
													}
												],
												"src": "5847:214:8"
											},
											{
												"body": {
													"nativeSrc": "6132:53:8",
													"nodeType": "YulBlock",
													"src": "6132:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6149:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6149:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6172:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6172:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6154:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6154:17:8"
																		},
																		"nativeSrc": "6154:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6154:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6142:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6142:6:8"
																},
																"nativeSrc": "6142:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6142:37:8"
															},
															"nativeSrc": "6142:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6142:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6067:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6120:5:8",
														"nodeType": "YulTypedName",
														"src": "6120:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6127:3:8",
														"nodeType": "YulTypedName",
														"src": "6127:3:8",
														"type": ""
													}
												],
												"src": "6067:118:8"
											},
											{
												"body": {
													"nativeSrc": "6289:124:8",
													"nodeType": "YulBlock",
													"src": "6289:124:8",
													"statements": [
														{
															"nativeSrc": "6299:26:8",
															"nodeType": "YulAssignment",
															"src": "6299:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6311:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6311:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6322:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6322:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6307:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:8"
																},
																"nativeSrc": "6307:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6307:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6299:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6299:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6379:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6392:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6392:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6403:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6403:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6388:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:8"
																		},
																		"nativeSrc": "6388:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6388:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6335:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6335:43:8"
																},
																"nativeSrc": "6335:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6335:71:8"
															},
															"nativeSrc": "6335:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6335:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6191:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6261:9:8",
														"nodeType": "YulTypedName",
														"src": "6261:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6273:6:8",
														"nodeType": "YulTypedName",
														"src": "6273:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6284:4:8",
														"nodeType": "YulTypedName",
														"src": "6284:4:8",
														"type": ""
													}
												],
												"src": "6191:222:8"
											},
											{
												"body": {
													"nativeSrc": "6485:263:8",
													"nodeType": "YulBlock",
													"src": "6485:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6531:83:8",
																"nodeType": "YulBlock",
																"src": "6531:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6533:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6533:77:8"
																			},
																			"nativeSrc": "6533:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6533:79:8"
																		},
																		"nativeSrc": "6533:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6533:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6506:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6506:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6515:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6515:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6502:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6502:3:8"
																		},
																		"nativeSrc": "6502:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6502:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6498:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:8"
																},
																"nativeSrc": "6498:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6498:32:8"
															},
															"nativeSrc": "6495:119:8",
															"nodeType": "YulIf",
															"src": "6495:119:8"
														},
														{
															"nativeSrc": "6624:117:8",
															"nodeType": "YulBlock",
															"src": "6624:117:8",
															"statements": [
																{
																	"nativeSrc": "6639:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6639:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6653:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6653:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6643:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6643:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6668:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6668:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6703:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6703:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6714:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6714:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6699:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6699:3:8"
																				},
																				"nativeSrc": "6699:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6699:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6723:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6723:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6678:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6678:20:8"
																		},
																		"nativeSrc": "6678:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6678:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6668:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6668:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6419:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6455:9:8",
														"nodeType": "YulTypedName",
														"src": "6455:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6466:7:8",
														"nodeType": "YulTypedName",
														"src": "6466:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6478:6:8",
														"nodeType": "YulTypedName",
														"src": "6478:6:8",
														"type": ""
													}
												],
												"src": "6419:329:8"
											},
											{
												"body": {
													"nativeSrc": "6798:32:8",
													"nodeType": "YulBlock",
													"src": "6798:32:8",
													"statements": [
														{
															"nativeSrc": "6808:16:8",
															"nodeType": "YulAssignment",
															"src": "6808:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "6819:5:8",
																"nodeType": "YulIdentifier",
																"src": "6819:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6808:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "6808:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "6754:76:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6780:5:8",
														"nodeType": "YulTypedName",
														"src": "6780:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6790:7:8",
														"nodeType": "YulTypedName",
														"src": "6790:7:8",
														"type": ""
													}
												],
												"src": "6754:76:8"
											},
											{
												"body": {
													"nativeSrc": "6899:52:8",
													"nodeType": "YulBlock",
													"src": "6899:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6916:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6916:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6938:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6938:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "6921:16:8",
																			"nodeType": "YulIdentifier",
																			"src": "6921:16:8"
																		},
																		"nativeSrc": "6921:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6921:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6909:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6909:6:8"
																},
																"nativeSrc": "6909:36:8",
																"nodeType": "YulFunctionCall",
																"src": "6909:36:8"
															},
															"nativeSrc": "6909:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "6909:36:8"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "6836:115:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6887:5:8",
														"nodeType": "YulTypedName",
														"src": "6887:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6894:3:8",
														"nodeType": "YulTypedName",
														"src": "6894:3:8",
														"type": ""
													}
												],
												"src": "6836:115:8"
											},
											{
												"body": {
													"nativeSrc": "7053:122:8",
													"nodeType": "YulBlock",
													"src": "7053:122:8",
													"statements": [
														{
															"nativeSrc": "7063:26:8",
															"nodeType": "YulAssignment",
															"src": "7063:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7075:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7075:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7086:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7071:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7071:3:8"
																},
																"nativeSrc": "7071:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7071:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7063:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7063:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7141:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7141:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7154:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7154:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7165:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7165:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7150:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:8"
																		},
																		"nativeSrc": "7150:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7150:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "7099:41:8",
																	"nodeType": "YulIdentifier",
																	"src": "7099:41:8"
																},
																"nativeSrc": "7099:69:8",
																"nodeType": "YulFunctionCall",
																"src": "7099:69:8"
															},
															"nativeSrc": "7099:69:8",
															"nodeType": "YulExpressionStatement",
															"src": "7099:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "6957:218:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7025:9:8",
														"nodeType": "YulTypedName",
														"src": "7025:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7037:6:8",
														"nodeType": "YulTypedName",
														"src": "7037:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7048:4:8",
														"nodeType": "YulTypedName",
														"src": "7048:4:8",
														"type": ""
													}
												],
												"src": "6957:218:8"
											},
											{
												"body": {
													"nativeSrc": "7264:391:8",
													"nodeType": "YulBlock",
													"src": "7264:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7310:83:8",
																"nodeType": "YulBlock",
																"src": "7310:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7312:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7312:77:8"
																			},
																			"nativeSrc": "7312:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7312:79:8"
																		},
																		"nativeSrc": "7312:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7312:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7285:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7294:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7294:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7281:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7281:3:8"
																		},
																		"nativeSrc": "7281:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7281:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7306:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7306:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7277:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7277:3:8"
																},
																"nativeSrc": "7277:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7277:32:8"
															},
															"nativeSrc": "7274:119:8",
															"nodeType": "YulIf",
															"src": "7274:119:8"
														},
														{
															"nativeSrc": "7403:117:8",
															"nodeType": "YulBlock",
															"src": "7403:117:8",
															"statements": [
																{
																	"nativeSrc": "7418:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7418:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7432:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7422:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7422:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7447:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7447:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7482:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7482:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7493:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7493:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7478:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7478:3:8"
																				},
																				"nativeSrc": "7478:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7478:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7502:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7502:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7457:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7457:20:8"
																		},
																		"nativeSrc": "7457:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7457:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7447:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7447:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7530:118:8",
															"nodeType": "YulBlock",
															"src": "7530:118:8",
															"statements": [
																{
																	"nativeSrc": "7545:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7545:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7559:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7559:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7549:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7549:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7575:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7575:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7610:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7610:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7621:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7621:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7606:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7606:3:8"
																				},
																				"nativeSrc": "7606:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7606:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7630:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7630:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7585:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7585:20:8"
																		},
																		"nativeSrc": "7585:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7585:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7575:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7575:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7181:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7226:9:8",
														"nodeType": "YulTypedName",
														"src": "7226:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7237:7:8",
														"nodeType": "YulTypedName",
														"src": "7237:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7249:6:8",
														"nodeType": "YulTypedName",
														"src": "7249:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7257:6:8",
														"nodeType": "YulTypedName",
														"src": "7257:6:8",
														"type": ""
													}
												],
												"src": "7181:474:8"
											},
											{
												"body": {
													"nativeSrc": "7778:648:8",
													"nodeType": "YulBlock",
													"src": "7778:648:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7825:83:8",
																"nodeType": "YulBlock",
																"src": "7825:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7827:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7827:77:8"
																			},
																			"nativeSrc": "7827:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7827:79:8"
																		},
																		"nativeSrc": "7827:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7827:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7799:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7799:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7808:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7808:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7795:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7795:3:8"
																		},
																		"nativeSrc": "7795:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7795:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7820:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7820:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7791:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7791:3:8"
																},
																"nativeSrc": "7791:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7791:33:8"
															},
															"nativeSrc": "7788:120:8",
															"nodeType": "YulIf",
															"src": "7788:120:8"
														},
														{
															"nativeSrc": "7918:117:8",
															"nodeType": "YulBlock",
															"src": "7918:117:8",
															"statements": [
																{
																	"nativeSrc": "7933:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7933:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7947:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7947:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7937:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7937:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7962:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7962:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7997:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7997:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8008:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8008:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7993:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7993:3:8"
																				},
																				"nativeSrc": "7993:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7993:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8017:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8017:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7972:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7972:20:8"
																		},
																		"nativeSrc": "7972:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7972:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7962:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7962:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8045:118:8",
															"nodeType": "YulBlock",
															"src": "8045:118:8",
															"statements": [
																{
																	"nativeSrc": "8060:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8060:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8074:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8064:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8064:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8090:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8090:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8125:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8125:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8136:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8136:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8121:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8121:3:8"
																				},
																				"nativeSrc": "8121:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8121:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8145:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8145:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8100:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8100:20:8"
																		},
																		"nativeSrc": "8100:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8100:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8090:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8090:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8173:118:8",
															"nodeType": "YulBlock",
															"src": "8173:118:8",
															"statements": [
																{
																	"nativeSrc": "8188:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8188:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8202:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8202:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8192:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8192:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8218:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8218:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8253:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8253:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8264:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8264:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8249:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8249:3:8"
																				},
																				"nativeSrc": "8249:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8249:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8273:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8273:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8228:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8228:20:8"
																		},
																		"nativeSrc": "8228:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8228:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8218:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8218:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8301:118:8",
															"nodeType": "YulBlock",
															"src": "8301:118:8",
															"statements": [
																{
																	"nativeSrc": "8316:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8316:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8330:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8330:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8320:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8320:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8346:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8346:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8381:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8381:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8392:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8392:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8377:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8377:3:8"
																				},
																				"nativeSrc": "8377:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8377:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8401:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8401:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8356:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8356:20:8"
																		},
																		"nativeSrc": "8356:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8356:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8346:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8346:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
												"nativeSrc": "7661:765:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7724:9:8",
														"nodeType": "YulTypedName",
														"src": "7724:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7735:7:8",
														"nodeType": "YulTypedName",
														"src": "7735:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7747:6:8",
														"nodeType": "YulTypedName",
														"src": "7747:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7755:6:8",
														"nodeType": "YulTypedName",
														"src": "7755:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7763:6:8",
														"nodeType": "YulTypedName",
														"src": "7763:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7771:6:8",
														"nodeType": "YulTypedName",
														"src": "7771:6:8",
														"type": ""
													}
												],
												"src": "7661:765:8"
											},
											{
												"body": {
													"nativeSrc": "8495:80:8",
													"nodeType": "YulBlock",
													"src": "8495:80:8",
													"statements": [
														{
															"nativeSrc": "8505:22:8",
															"nodeType": "YulAssignment",
															"src": "8505:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8520:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8520:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8514:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8514:5:8"
																},
																"nativeSrc": "8514:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8514:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8505:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8505:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8563:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8563:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8536:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "8536:26:8"
																},
																"nativeSrc": "8536:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8536:33:8"
															},
															"nativeSrc": "8536:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "8536:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8432:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8473:6:8",
														"nodeType": "YulTypedName",
														"src": "8473:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8481:3:8",
														"nodeType": "YulTypedName",
														"src": "8481:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8489:5:8",
														"nodeType": "YulTypedName",
														"src": "8489:5:8",
														"type": ""
													}
												],
												"src": "8432:143:8"
											},
											{
												"body": {
													"nativeSrc": "8658:274:8",
													"nodeType": "YulBlock",
													"src": "8658:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8704:83:8",
																"nodeType": "YulBlock",
																"src": "8704:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8706:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8706:77:8"
																			},
																			"nativeSrc": "8706:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8706:79:8"
																		},
																		"nativeSrc": "8706:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8706:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8679:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8679:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8688:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8688:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8675:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8675:3:8"
																		},
																		"nativeSrc": "8675:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8675:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8700:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8700:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8671:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:8"
																},
																"nativeSrc": "8671:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8671:32:8"
															},
															"nativeSrc": "8668:119:8",
															"nodeType": "YulIf",
															"src": "8668:119:8"
														},
														{
															"nativeSrc": "8797:128:8",
															"nodeType": "YulBlock",
															"src": "8797:128:8",
															"statements": [
																{
																	"nativeSrc": "8812:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8812:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8826:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8826:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8816:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8816:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8841:74:8",
																	"nodeType": "YulAssignment",
																	"src": "8841:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8887:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8887:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8898:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8898:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8883:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8883:3:8"
																				},
																				"nativeSrc": "8883:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8883:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8907:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8907:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8851:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "8851:31:8"
																		},
																		"nativeSrc": "8851:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8851:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8841:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8841:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8581:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8628:9:8",
														"nodeType": "YulTypedName",
														"src": "8628:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8639:7:8",
														"nodeType": "YulTypedName",
														"src": "8639:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8651:6:8",
														"nodeType": "YulTypedName",
														"src": "8651:6:8",
														"type": ""
													}
												],
												"src": "8581:351:8"
											},
											{
												"body": {
													"nativeSrc": "8966:152:8",
													"nodeType": "YulBlock",
													"src": "8966:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8983:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8983:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8986:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8986:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8976:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8976:6:8"
																},
																"nativeSrc": "8976:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8976:88:8"
															},
															"nativeSrc": "8976:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8976:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9080:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9080:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9073:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9073:6:8"
																},
																"nativeSrc": "9073:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9073:15:8"
															},
															"nativeSrc": "9073:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9073:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9104:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9104:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9107:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9107:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9097:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9097:6:8"
																},
																"nativeSrc": "9097:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9097:15:8"
															},
															"nativeSrc": "9097:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9097:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8938:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8938:180:8"
											},
											{
												"body": {
													"nativeSrc": "9175:269:8",
													"nodeType": "YulBlock",
													"src": "9175:269:8",
													"statements": [
														{
															"nativeSrc": "9185:22:8",
															"nodeType": "YulAssignment",
															"src": "9185:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9199:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9199:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9205:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9205:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9195:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9195:3:8"
																},
																"nativeSrc": "9195:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9195:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9185:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9185:6:8"
																}
															]
														},
														{
															"nativeSrc": "9216:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9216:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9246:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9246:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9252:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9252:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9242:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:8"
																},
																"nativeSrc": "9242:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9242:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9220:18:8",
																	"nodeType": "YulTypedName",
																	"src": "9220:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9293:51:8",
																"nodeType": "YulBlock",
																"src": "9293:51:8",
																"statements": [
																	{
																		"nativeSrc": "9307:27:8",
																		"nodeType": "YulAssignment",
																		"src": "9307:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9321:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9321:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9329:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9329:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9317:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9317:3:8"
																			},
																			"nativeSrc": "9317:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9317:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9307:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9307:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9273:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9273:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9266:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9266:6:8"
																},
																"nativeSrc": "9266:26:8",
																"nodeType": "YulFunctionCall",
																"src": "9266:26:8"
															},
															"nativeSrc": "9263:81:8",
															"nodeType": "YulIf",
															"src": "9263:81:8"
														},
														{
															"body": {
																"nativeSrc": "9396:42:8",
																"nodeType": "YulBlock",
																"src": "9396:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9410:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9410:16:8"
																			},
																			"nativeSrc": "9410:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9410:18:8"
																		},
																		"nativeSrc": "9410:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9410:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9360:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9360:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9383:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9383:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9391:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9391:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9380:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9380:2:8"
																		},
																		"nativeSrc": "9380:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9380:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9357:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9357:2:8"
																},
																"nativeSrc": "9357:38:8",
																"nodeType": "YulFunctionCall",
																"src": "9357:38:8"
															},
															"nativeSrc": "9354:84:8",
															"nodeType": "YulIf",
															"src": "9354:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9124:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9159:4:8",
														"nodeType": "YulTypedName",
														"src": "9159:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9168:6:8",
														"nodeType": "YulTypedName",
														"src": "9168:6:8",
														"type": ""
													}
												],
												"src": "9124:320:8"
											},
											{
												"body": {
													"nativeSrc": "9478:152:8",
													"nodeType": "YulBlock",
													"src": "9478:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9495:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9495:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9498:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9498:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9488:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:8"
																},
																"nativeSrc": "9488:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9488:88:8"
															},
															"nativeSrc": "9488:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9488:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9592:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9592:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9595:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9595:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9585:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9585:6:8"
																},
																"nativeSrc": "9585:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9585:15:8"
															},
															"nativeSrc": "9585:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9585:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9616:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9616:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9619:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9619:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9609:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9609:6:8"
																},
																"nativeSrc": "9609:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9609:15:8"
															},
															"nativeSrc": "9609:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9609:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9450:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9450:180:8"
											},
											{
												"body": {
													"nativeSrc": "9684:362:8",
													"nodeType": "YulBlock",
													"src": "9684:362:8",
													"statements": [
														{
															"nativeSrc": "9694:25:8",
															"nodeType": "YulAssignment",
															"src": "9694:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9717:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9717:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9699:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9699:17:8"
																},
																"nativeSrc": "9699:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9699:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9694:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9694:1:8"
																}
															]
														},
														{
															"nativeSrc": "9728:25:8",
															"nodeType": "YulAssignment",
															"src": "9728:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9751:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9751:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9733:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9733:17:8"
																},
																"nativeSrc": "9733:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9733:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9728:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9728:1:8"
																}
															]
														},
														{
															"nativeSrc": "9762:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9762:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9785:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9785:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9788:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9788:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9781:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9781:3:8"
																},
																"nativeSrc": "9781:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9781:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9766:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9766:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9799:41:8",
															"nodeType": "YulAssignment",
															"src": "9799:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9828:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9828:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9810:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9810:17:8"
																},
																"nativeSrc": "9810:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9810:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9799:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9799:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10017:22:8",
																"nodeType": "YulBlock",
																"src": "10017:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10019:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10019:16:8"
																			},
																			"nativeSrc": "10019:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10019:18:8"
																		},
																		"nativeSrc": "10019:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10019:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9950:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9950:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9943:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9943:6:8"
																				},
																				"nativeSrc": "9943:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9943:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9973:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9973:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9980:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9980:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9989:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9989:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9976:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9976:3:8"
																						},
																						"nativeSrc": "9976:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9976:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9970:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9970:2:8"
																				},
																				"nativeSrc": "9970:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9970:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9923:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9923:2:8"
																		},
																		"nativeSrc": "9923:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9923:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9903:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9903:6:8"
																},
																"nativeSrc": "9903:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9903:113:8"
															},
															"nativeSrc": "9900:139:8",
															"nodeType": "YulIf",
															"src": "9900:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9636:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9667:1:8",
														"nodeType": "YulTypedName",
														"src": "9667:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9670:1:8",
														"nodeType": "YulTypedName",
														"src": "9670:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9676:7:8",
														"nodeType": "YulTypedName",
														"src": "9676:7:8",
														"type": ""
													}
												],
												"src": "9636:410:8"
											},
											{
												"body": {
													"nativeSrc": "10080:152:8",
													"nodeType": "YulBlock",
													"src": "10080:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10097:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10097:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10100:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10100:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10090:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:8"
																},
																"nativeSrc": "10090:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10090:88:8"
															},
															"nativeSrc": "10090:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10090:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10194:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10197:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10197:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10187:6:8"
																},
																"nativeSrc": "10187:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10187:15:8"
															},
															"nativeSrc": "10187:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10187:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10218:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10218:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10221:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10221:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10211:6:8"
																},
																"nativeSrc": "10211:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10211:15:8"
															},
															"nativeSrc": "10211:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10211:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10052:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10052:180:8"
											},
											{
												"body": {
													"nativeSrc": "10280:143:8",
													"nodeType": "YulBlock",
													"src": "10280:143:8",
													"statements": [
														{
															"nativeSrc": "10290:25:8",
															"nodeType": "YulAssignment",
															"src": "10290:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10313:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10313:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10295:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10295:17:8"
																},
																"nativeSrc": "10295:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10295:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10290:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10290:1:8"
																}
															]
														},
														{
															"nativeSrc": "10324:25:8",
															"nodeType": "YulAssignment",
															"src": "10324:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10347:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10347:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10329:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10329:17:8"
																},
																"nativeSrc": "10329:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10329:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10324:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10324:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10371:22:8",
																"nodeType": "YulBlock",
																"src": "10371:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10373:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10373:16:8"
																			},
																			"nativeSrc": "10373:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10373:18:8"
																		},
																		"nativeSrc": "10373:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10373:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10368:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10368:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10361:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10361:6:8"
																},
																"nativeSrc": "10361:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10361:9:8"
															},
															"nativeSrc": "10358:35:8",
															"nodeType": "YulIf",
															"src": "10358:35:8"
														},
														{
															"nativeSrc": "10403:14:8",
															"nodeType": "YulAssignment",
															"src": "10403:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10412:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10412:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10415:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10415:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10408:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:8"
																},
																"nativeSrc": "10408:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10408:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10403:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10403:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10238:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10269:1:8",
														"nodeType": "YulTypedName",
														"src": "10269:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10272:1:8",
														"nodeType": "YulTypedName",
														"src": "10272:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10278:1:8",
														"nodeType": "YulTypedName",
														"src": "10278:1:8",
														"type": ""
													}
												],
												"src": "10238:185:8"
											},
											{
												"body": {
													"nativeSrc": "10471:78:8",
													"nodeType": "YulBlock",
													"src": "10471:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10527:16:8",
																"nodeType": "YulBlock",
																"src": "10527:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10536:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10536:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10539:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10539:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10529:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10529:6:8"
																			},
																			"nativeSrc": "10529:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10529:12:8"
																		},
																		"nativeSrc": "10529:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10529:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10494:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10494:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10518:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "10518:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "10501:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "10501:16:8"
																				},
																				"nativeSrc": "10501:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10501:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10491:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10491:2:8"
																		},
																		"nativeSrc": "10491:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10491:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10484:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10484:6:8"
																},
																"nativeSrc": "10484:42:8",
																"nodeType": "YulFunctionCall",
																"src": "10484:42:8"
															},
															"nativeSrc": "10481:62:8",
															"nodeType": "YulIf",
															"src": "10481:62:8"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "10429:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10464:5:8",
														"nodeType": "YulTypedName",
														"src": "10464:5:8",
														"type": ""
													}
												],
												"src": "10429:120:8"
											},
											{
												"body": {
													"nativeSrc": "10617:79:8",
													"nodeType": "YulBlock",
													"src": "10617:79:8",
													"statements": [
														{
															"nativeSrc": "10627:22:8",
															"nodeType": "YulAssignment",
															"src": "10627:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10642:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10642:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10636:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10636:5:8"
																},
																"nativeSrc": "10636:13:8",
																"nodeType": "YulFunctionCall",
																"src": "10636:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10627:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10627:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10684:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10684:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "10658:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "10658:25:8"
																},
																"nativeSrc": "10658:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10658:32:8"
															},
															"nativeSrc": "10658:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "10658:32:8"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "10555:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10595:6:8",
														"nodeType": "YulTypedName",
														"src": "10595:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10603:3:8",
														"nodeType": "YulTypedName",
														"src": "10603:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10611:5:8",
														"nodeType": "YulTypedName",
														"src": "10611:5:8",
														"type": ""
													}
												],
												"src": "10555:141:8"
											},
											{
												"body": {
													"nativeSrc": "10778:273:8",
													"nodeType": "YulBlock",
													"src": "10778:273:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10824:83:8",
																"nodeType": "YulBlock",
																"src": "10824:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10826:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "10826:77:8"
																			},
																			"nativeSrc": "10826:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10826:79:8"
																		},
																		"nativeSrc": "10826:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10826:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10799:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10799:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10808:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10808:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10795:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10795:3:8"
																		},
																		"nativeSrc": "10795:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10795:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10820:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10820:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10791:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10791:3:8"
																},
																"nativeSrc": "10791:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10791:32:8"
															},
															"nativeSrc": "10788:119:8",
															"nodeType": "YulIf",
															"src": "10788:119:8"
														},
														{
															"nativeSrc": "10917:127:8",
															"nodeType": "YulBlock",
															"src": "10917:127:8",
															"statements": [
																{
																	"nativeSrc": "10932:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10932:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10946:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10946:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10936:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10936:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10961:73:8",
																	"nodeType": "YulAssignment",
																	"src": "10961:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11006:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "11006:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11017:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11017:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11002:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11002:3:8"
																				},
																				"nativeSrc": "11002:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11002:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11026:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11026:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "10971:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "10971:30:8"
																		},
																		"nativeSrc": "10971:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10971:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10961:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10961:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256_fromMemory",
												"nativeSrc": "10702:349:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10748:9:8",
														"nodeType": "YulTypedName",
														"src": "10748:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10759:7:8",
														"nodeType": "YulTypedName",
														"src": "10759:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10771:6:8",
														"nodeType": "YulTypedName",
														"src": "10771:6:8",
														"type": ""
													}
												],
												"src": "10702:349:8"
											},
											{
												"body": {
													"nativeSrc": "11211:288:8",
													"nodeType": "YulBlock",
													"src": "11211:288:8",
													"statements": [
														{
															"nativeSrc": "11221:26:8",
															"nodeType": "YulAssignment",
															"src": "11221:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11233:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11233:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11244:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11244:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11229:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11229:3:8"
																},
																"nativeSrc": "11229:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11229:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11221:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11221:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11301:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11301:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11314:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11314:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11325:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11325:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11310:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11310:3:8"
																		},
																		"nativeSrc": "11310:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11310:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11257:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11257:43:8"
																},
																"nativeSrc": "11257:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11257:71:8"
															},
															"nativeSrc": "11257:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11257:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11382:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11382:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11395:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11395:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11406:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11406:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11391:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11391:3:8"
																		},
																		"nativeSrc": "11391:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11391:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11338:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11338:43:8"
																},
																"nativeSrc": "11338:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11338:72:8"
															},
															"nativeSrc": "11338:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11338:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11464:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11464:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11477:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11477:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11488:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11488:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11473:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11473:3:8"
																		},
																		"nativeSrc": "11473:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11473:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11420:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11420:43:8"
																},
																"nativeSrc": "11420:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11420:72:8"
															},
															"nativeSrc": "11420:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11420:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11057:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11167:9:8",
														"nodeType": "YulTypedName",
														"src": "11167:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11179:6:8",
														"nodeType": "YulTypedName",
														"src": "11179:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11187:6:8",
														"nodeType": "YulTypedName",
														"src": "11187:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11195:6:8",
														"nodeType": "YulTypedName",
														"src": "11195:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11206:4:8",
														"nodeType": "YulTypedName",
														"src": "11206:4:8",
														"type": ""
													}
												],
												"src": "11057:442:8"
											},
											{
												"body": {
													"nativeSrc": "11550:149:8",
													"nodeType": "YulBlock",
													"src": "11550:149:8",
													"statements": [
														{
															"nativeSrc": "11560:25:8",
															"nodeType": "YulAssignment",
															"src": "11560:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11583:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11583:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11565:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11565:17:8"
																},
																"nativeSrc": "11565:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11565:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11560:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11560:1:8"
																}
															]
														},
														{
															"nativeSrc": "11594:25:8",
															"nodeType": "YulAssignment",
															"src": "11594:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11617:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11617:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11599:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11599:17:8"
																},
																"nativeSrc": "11599:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11599:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11594:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11594:1:8"
																}
															]
														},
														{
															"nativeSrc": "11628:17:8",
															"nodeType": "YulAssignment",
															"src": "11628:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11640:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11640:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11643:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11643:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11636:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11636:3:8"
																},
																"nativeSrc": "11636:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11636:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11628:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11628:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11670:22:8",
																"nodeType": "YulBlock",
																"src": "11670:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11672:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11672:16:8"
																			},
																			"nativeSrc": "11672:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11672:18:8"
																		},
																		"nativeSrc": "11672:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11672:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11661:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11661:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11667:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11667:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11658:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11658:2:8"
																},
																"nativeSrc": "11658:11:8",
																"nodeType": "YulFunctionCall",
																"src": "11658:11:8"
															},
															"nativeSrc": "11655:37:8",
															"nodeType": "YulIf",
															"src": "11655:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11505:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11536:1:8",
														"nodeType": "YulTypedName",
														"src": "11536:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11539:1:8",
														"nodeType": "YulTypedName",
														"src": "11539:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11545:4:8",
														"nodeType": "YulTypedName",
														"src": "11545:4:8",
														"type": ""
													}
												],
												"src": "11505:194:8"
											},
											{
												"body": {
													"nativeSrc": "11749:147:8",
													"nodeType": "YulBlock",
													"src": "11749:147:8",
													"statements": [
														{
															"nativeSrc": "11759:25:8",
															"nodeType": "YulAssignment",
															"src": "11759:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11782:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11782:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11764:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11764:17:8"
																},
																"nativeSrc": "11764:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11764:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11759:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11759:1:8"
																}
															]
														},
														{
															"nativeSrc": "11793:25:8",
															"nodeType": "YulAssignment",
															"src": "11793:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11816:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11816:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11798:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11798:17:8"
																},
																"nativeSrc": "11798:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11798:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11793:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11793:1:8"
																}
															]
														},
														{
															"nativeSrc": "11827:16:8",
															"nodeType": "YulAssignment",
															"src": "11827:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11838:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11838:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11841:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11841:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11834:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11834:3:8"
																},
																"nativeSrc": "11834:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11834:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11827:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11827:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11867:22:8",
																"nodeType": "YulBlock",
																"src": "11867:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11869:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11869:16:8"
																			},
																			"nativeSrc": "11869:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11869:18:8"
																		},
																		"nativeSrc": "11869:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11869:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11859:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11859:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11862:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11862:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11856:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11856:2:8"
																},
																"nativeSrc": "11856:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11856:10:8"
															},
															"nativeSrc": "11853:36:8",
															"nodeType": "YulIf",
															"src": "11853:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11705:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11736:1:8",
														"nodeType": "YulTypedName",
														"src": "11736:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11739:1:8",
														"nodeType": "YulTypedName",
														"src": "11739:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11745:3:8",
														"nodeType": "YulTypedName",
														"src": "11745:3:8",
														"type": ""
													}
												],
												"src": "11705:191:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorInterface_$1269_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorInterface_$1269_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorInterface_$1269_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorInterface_$1269__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorInterface_$1269_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061013f575f3560e01c80638f32d59b116100b6578063af14052c1161007a578063af14052c14610358578063bea1dcf814610362578063dd62ed3e14610380578063f2fde38b146103b0578063f8c8765e146103cc578063faad24f4146103e85761013f565b80638f32d59b146102b057806395d89b41146102ce57806398d5fdca146102ec578063a89ae4ba1461030a578063a9059cbb146103285761013f565b8063245a7bfc11610108578063245a7bfc146101fe578063313ce5671461021c5780633221c93f1461023a57806370a0823114610258578063715018a6146102885780638da5cb5b146102925761013f565b8062113e081461014357806306fdde0314610162578063095ea7b31461018057806318160ddd146101b057806323b872dd146101ce575b5f5ffd5b61014b610406565b6040516101599291906115c7565b60405180910390f35b61016a6104f4565b604051610177919061165e565b60405180910390f35b61019a60048036038101906101959190611706565b610584565b6040516101a7919061175e565b60405180910390f35b6101b86105a6565b6040516101c59190611777565b60405180910390f35b6101e860048036038101906101e39190611790565b6105af565b6040516101f5919061175e565b60405180910390f35b610206610665565b604051610213919061183b565b60405180910390f35b61022461068a565b604051610231919061186f565b60405180910390f35b610242610692565b60405161024f9190611897565b60405180910390f35b610272600480360381019061026d91906118b0565b6106b7565b60405161027f9190611777565b60405180910390f35b6102906106fc565b005b61029a6107b2565b6040516102a79190611897565b60405180910390f35b6102b86107da565b6040516102c5919061175e565b60405180910390f35b6102d6610830565b6040516102e3919061165e565b60405180910390f35b6102f46108c0565b60405161030191906118f3565b60405180910390f35b610312610954565b60405161031f9190611897565b60405180910390f35b610342600480360381019061033d9190611706565b610979565b60405161034f919061175e565b60405180910390f35b61036061099b565b005b61036a610a67565b6040516103779190611897565b60405180910390f35b61039a6004803603810190610395919061190c565b610a8c565b6040516103a79190611777565b60405180910390f35b6103ca60048036038101906103c591906118b0565b610b0e565b005b6103e660048036038101906103e1919061194a565b610b2a565b005b6103f0610de4565b6040516103fd9190611897565b60405180910390f35b5f5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104839190611897565b602060405180830381865afa15801561049e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c291906119c2565b91506104ee60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106b7565b90509091565b60606003805461050390611a1a565b80601f016020809104026020016040519081016040528092919081815260200182805461052f90611a1a565b801561057a5780601f106105515761010080835404028352916020019161057a565b820191905f5260205f20905b81548152906001019060200180831161055d57829003601f168201915b5050505050905090565b5f5f61058e610e09565b905061059b818585610e10565b600191505092915050565b5f600254905090565b5f5f6105b9610e09565b90506105c6858285610e22565b6105ce61099b565b5f8390505f6127106101f4866105e49190611a77565b6105ee9190611ae5565b90505f5f6105fc8784610eb5565b915091508015801561060d57505f83115b15610642578193506106418960075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610ee4565b5b61064d898986610ee4565b61065561099b565b6001955050505050509392505050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6012905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107046107da565b61070c575f5ffd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f60055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60606004805461083f90611a1a565b80601f016020809104026020016040519081016040528092919081815260200182805461086b90611a1a565b80156108b65780601f1061088d576101008083540402835291602001916108b6565b820191905f5260205f20905b81548152906001019060200180831161089957829003601f168201915b5050505050905090565b5f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094f9190611b3f565b905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f610983610e09565b9050610990818585610ee4565b600191505092915050565b5f6109a46108c0565b90505f6109d160085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106b7565b90505f6109dd306106b7565b90505f83836109ec9190611a77565b90505f5f6109fa8385610eb5565b9150915080610a3357610a2e60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610fd4565b610a5f565b610a5e60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611053565b5b505050505050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610b166107da565b610b1e575f5ffd5b610b27816110d2565b50565b610b326107da565b610b3a575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff1660085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b92575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bea575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c42575f5ffd5b8360085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610dd660085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a7640000610fd4565b610dde61099b565b50505050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610e1d83838360016111c7565b505050565b5f610e2d8484610a8c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610eaf5781811015610ea0578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e9793929190611b6a565b60405180910390fd5b610eae84848484035f6111c7565b5b50505050565b5f5f83831115610ecf575f84905083945080935060019150505b8284610edb9190611b9f565b91509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f54575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f4b9190611897565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fbb9190611897565b60405180910390fd5b610fcf838383611396565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611044575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161103b9190611897565b60405180910390fd5b61104f5f8383611396565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c3575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110ba9190611897565b60405180910390fd5b6110ce825f83611396565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611109575f5ffd5b8073ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611237575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161122e9190611897565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112a7575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161129e9190611897565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611390578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113879190611777565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113e6578060025f8282546113da9190611bd2565b925050819055506114b4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561146f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161146693929190611b6a565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114fb578060025f8282540392505081905550611545565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115a29190611777565b60405180910390a3505050565b5f819050919050565b6115c1816115af565b82525050565b5f6040820190506115da5f8301856115b8565b6115e760208301846115b8565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611630826115ee565b61163a81856115f8565b935061164a818560208601611608565b61165381611616565b840191505092915050565b5f6020820190508181035f8301526116768184611626565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116ab82611682565b9050919050565b6116bb816116a1565b81146116c5575f5ffd5b50565b5f813590506116d6816116b2565b92915050565b6116e5816115af565b81146116ef575f5ffd5b50565b5f81359050611700816116dc565b92915050565b5f5f6040838503121561171c5761171b61167e565b5b5f611729858286016116c8565b925050602061173a858286016116f2565b9150509250929050565b5f8115159050919050565b61175881611744565b82525050565b5f6020820190506117715f83018461174f565b92915050565b5f60208201905061178a5f8301846115b8565b92915050565b5f5f5f606084860312156117a7576117a661167e565b5b5f6117b4868287016116c8565b93505060206117c5868287016116c8565b92505060406117d6868287016116f2565b9150509250925092565b5f819050919050565b5f6118036117fe6117f984611682565b6117e0565b611682565b9050919050565b5f611814826117e9565b9050919050565b5f6118258261180a565b9050919050565b6118358161181b565b82525050565b5f60208201905061184e5f83018461182c565b92915050565b5f60ff82169050919050565b61186981611854565b82525050565b5f6020820190506118825f830184611860565b92915050565b611891816116a1565b82525050565b5f6020820190506118aa5f830184611888565b92915050565b5f602082840312156118c5576118c461167e565b5b5f6118d2848285016116c8565b91505092915050565b5f819050919050565b6118ed816118db565b82525050565b5f6020820190506119065f8301846118e4565b92915050565b5f5f604083850312156119225761192161167e565b5b5f61192f858286016116c8565b9250506020611940858286016116c8565b9150509250929050565b5f5f5f5f608085870312156119625761196161167e565b5b5f61196f878288016116c8565b9450506020611980878288016116c8565b9350506040611991878288016116c8565b92505060606119a2878288016116c8565b91505092959194509250565b5f815190506119bc816116dc565b92915050565b5f602082840312156119d7576119d661167e565b5b5f6119e4848285016119ae565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a3157607f821691505b602082108103611a4457611a436119ed565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a81826115af565b9150611a8c836115af565b9250828202611a9a816115af565b91508282048414831517611ab157611ab0611a4a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611aef826115af565b9150611afa836115af565b925082611b0a57611b09611ab8565b5b828204905092915050565b611b1e816118db565b8114611b28575f5ffd5b50565b5f81519050611b3981611b15565b92915050565b5f60208284031215611b5457611b5361167e565b5b5f611b6184828501611b2b565b91505092915050565b5f606082019050611b7d5f830186611888565b611b8a60208301856115b8565b611b9760408301846115b8565b949350505050565b5f611ba9826115af565b9150611bb4836115af565b9250828203905081811115611bcc57611bcb611a4a565b5b92915050565b5f611bdc826115af565b9150611be7836115af565b9250828201905080821115611bff57611bfe611a4a565b5b9291505056fea26469706673582212204cb8b8dd2318b6d4ae1fc281313adcfee0ae29edeaac788bf79273e3f6a26c5264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAF14052C GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAF14052C EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xBEA1DCF8 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xFAAD24F4 EQ PUSH2 0x3E8 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xA89AE4BA EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x328 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x245A7BFC GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x245A7BFC EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x3221C93F EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x292 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14B PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x6FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x360 PUSH2 0x99B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F0 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x19C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EE PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B7 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x503 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52F SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x57A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x58E PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP PUSH2 0x59B DUP2 DUP6 DUP6 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B9 PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C6 DUP6 DUP3 DUP6 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x99B JUMP JUMPDEST PUSH0 DUP4 SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1F4 DUP7 PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH2 0x5FC DUP8 DUP5 PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI POP PUSH0 DUP4 GT JUMPDEST ISZERO PUSH2 0x642 JUMPI DUP2 SWAP4 POP PUSH2 0x641 DUP10 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0xEE4 JUMP JUMPDEST JUMPDEST PUSH2 0x64D DUP10 DUP10 DUP7 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x655 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x704 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x70C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x83F SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86B SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x899 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x983 PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP PUSH2 0x990 DUP2 DUP6 DUP6 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9A4 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9D1 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9DD ADDRESS PUSH2 0x6B7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP4 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH2 0x9FA DUP4 DUP6 PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0xA33 JUMPI PUSH2 0xA2E PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA5E PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB16 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0xB1E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB27 DUP2 PUSH2 0x10D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB32 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0xB3A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB92 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBEA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDD6 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0xDDE PUSH2 0x99B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE1D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE2D DUP5 DUP5 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xEAF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEA0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE97 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11C7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP4 GT ISZERO PUSH2 0xECF JUMPI PUSH0 DUP5 SWAP1 POP DUP4 SWAP5 POP DUP1 SWAP4 POP PUSH1 0x1 SWAP2 POP POP JUMPDEST DUP3 DUP5 PUSH2 0xEDB SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBB SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFCF DUP4 DUP4 DUP4 PUSH2 0x1396 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1044 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103B SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x104F PUSH0 DUP4 DUP4 PUSH2 0x1396 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BA SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CE DUP3 PUSH0 DUP4 PUSH2 0x1396 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1109 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1237 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1390 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13E6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13DA SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14B4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x146F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1466 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14FB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1545 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A2 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C1 DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15DA PUSH0 DUP4 ADD DUP6 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1630 DUP3 PUSH2 0x15EE JUMP JUMPDEST PUSH2 0x163A DUP2 DUP6 PUSH2 0x15F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x164A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x1653 DUP2 PUSH2 0x1616 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1676 DUP2 DUP5 PUSH2 0x1626 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16AB DUP3 PUSH2 0x1682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BB DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x16C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D6 DUP2 PUSH2 0x16B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E5 DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP2 EQ PUSH2 0x16EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1700 DUP2 PUSH2 0x16DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171C JUMPI PUSH2 0x171B PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1729 DUP6 DUP3 DUP7 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173A DUP6 DUP3 DUP7 ADD PUSH2 0x16F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1758 DUP2 PUSH2 0x1744 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1771 PUSH0 DUP4 ADD DUP5 PUSH2 0x174F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH0 DUP4 ADD DUP5 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17A7 JUMPI PUSH2 0x17A6 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B4 DUP7 DUP3 DUP8 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17C5 DUP7 DUP3 DUP8 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17D6 DUP7 DUP3 DUP8 ADD PUSH2 0x16F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1803 PUSH2 0x17FE PUSH2 0x17F9 DUP5 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0x1682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1814 DUP3 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1825 DUP3 PUSH2 0x180A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1835 DUP2 PUSH2 0x181B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x184E PUSH0 DUP4 ADD DUP5 PUSH2 0x182C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1869 DUP2 PUSH2 0x1854 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1882 PUSH0 DUP4 ADD DUP5 PUSH2 0x1860 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1891 DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18AA PUSH0 DUP4 ADD DUP5 PUSH2 0x1888 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C4 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D2 DUP5 DUP3 DUP6 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18ED DUP2 PUSH2 0x18DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1906 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x192F DUP6 DUP3 DUP7 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1940 DUP6 DUP3 DUP7 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x196F DUP8 DUP3 DUP9 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1980 DUP8 DUP3 DUP9 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1991 DUP8 DUP3 DUP9 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x19A2 DUP8 DUP3 DUP9 ADD PUSH2 0x16C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19BC DUP2 PUSH2 0x16DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D7 JUMPI PUSH2 0x19D6 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19E4 DUP5 DUP3 DUP6 ADD PUSH2 0x19AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A31 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A44 JUMPI PUSH2 0x1A43 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A81 DUP3 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8C DUP4 PUSH2 0x15AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A9A DUP2 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1AB1 JUMPI PUSH2 0x1AB0 PUSH2 0x1A4A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AEF DUP3 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1AFA DUP4 PUSH2 0x15AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B0A JUMPI PUSH2 0x1B09 PUSH2 0x1AB8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B1E DUP2 PUSH2 0x18DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1B28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B39 DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B54 JUMPI PUSH2 0x1B53 PUSH2 0x167E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B61 DUP5 DUP3 DUP6 ADD PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH0 DUP4 ADD DUP7 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x1B8A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x1B97 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15B8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA9 DUP3 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB4 DUP4 PUSH2 0x15AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BCC JUMPI PUSH2 0x1BCB PUSH2 0x1A4A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDC DUP3 PUSH2 0x15AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE7 DUP4 PUSH2 0x15AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x1A4A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB8 0xB8 0xDD 0x23 XOR 0xB6 0xD4 0xAE 0x1F 0xC2 DUP2 BALANCE GASPRICE 0xDC INVALID 0xE0 0xAE 0x29 0xED 0xEA 0xAC PUSH25 0x8BF79273E3F6A26C5264736F6C634300081C00330000000000 ",
							"sourceMap": "337:2912:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:248;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1656:632:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;547:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;441:31:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;872:126:6;;;:::i;:::-;;607:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;772:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2598:100:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;479:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2706:540:5;;;:::i;:::-;;407:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:109:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;810:582:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;376:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1400:248;1473:19;1494:18;1551:9;;;;;;;;;;;1544:27;;;1572:16;;;;;;;;;;;1544:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:59;;1613:27;1623:16;;;;;;;;;;;1613:9;:27::i;:::-;1600:40;;1400:248;;:::o;1779:89:1:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;1656:632:5:-;1778:4;1795:15;1813:12;:10;:12::i;:::-;1795:30;;1836:37;1852:4;1858:7;1867:5;1836:15;:37::i;:::-;1886:8;:6;:8::i;:::-;1907:22;1932:5;1907:30;;1948:11;1983:6;682:3;1963:5;:16;;;;:::i;:::-;1962:27;;;;:::i;:::-;1948:41;;2001:14;2017:13;2034:20;2043:5;2050:3;2034:8;:20::i;:::-;2000:54;;;;2072:8;2071:9;:20;;;;;2090:1;2084:3;:7;2071:20;2067:125;;;2125:6;2108:23;;2146:34;2156:4;2162:12;;;;;;;;;;;2176:3;2146:9;:34::i;:::-;2067:125;2204:35;2214:4;2220:2;2224:14;2204:9;:35::i;:::-;2250:8;:6;:8::i;:::-;2276:4;2269:11;;;;;;;1656:632;;;;;:::o;547:37::-;;;;;;;;;;;;;:::o;2707:82:1:-;2756:5;2780:2;2773:9;;2707:82;:::o;441:31:5:-;;;;;;;;;;;;;:::o;3004:116:1:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;872:126:6:-;734:9;:7;:9::i;:::-;726:18;;;;;;953:6:::1;;;;;;;;;;;934:26;;;;;;;;;;;;988:1;971:6;;:19;;;;;;;;;;;;;;;;;;872:126::o:0;607:79::-;645:7;672:6;;;;;;;;;;;665:13;;607:79;:::o;772:92::-;812:4;850:6;;;;;;;;;;;836:20;;:10;:20;;;829:27;;772:92;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2598:100:5:-;2639:6;2665:10;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2658:32;;2598:100;:::o;479:28::-;;;;;;;;;;;;;:::o;3315:178:1:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;2706:540:5:-;2742:13;2766:10;:8;:10::i;:::-;2742:35;;2788:19;2810:36;2828:16;;;;;;;;;;;2810:9;:36::i;:::-;2788:58;;2857:18;2878:24;2896:4;2878:9;:24::i;:::-;2857:45;;2915:18;2950:5;2936:11;:19;;;;:::i;:::-;2915:40;;2969:20;2991:13;3008:69;3031:10;3056;3008:8;:69::i;:::-;2968:109;;;;3095:8;3090:149;;3120:37;3126:16;;;;;;;;;;;3144:12;3120:5;:37::i;:::-;3090:149;;;3190:37;3196:16;;;;;;;;;;;3214:12;3190:5;:37::i;:::-;3090:149;2731:515;;;;;;2706:540::o;407:27::-;;;;;;;;;;;;;:::o;3551:140:1:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;1006:109:6:-;734:9;:7;:9::i;:::-;726:18;;;;;;1079:28:::1;1098:8;1079:18;:28::i;:::-;1006:109:::0;:::o;810:582:5:-;734:9:6;:7;:9::i;:::-;726:18;;;;;;1022:1:5::1;994:30;;:16;;;;;;;;;;;:30;;;986:39;;;;;;1065:1;1044:23;;:9;;;;;;;;;;;:23;;;1036:32;;;;;;1111:1;1087:26;;:12;;;;;;;;;;;:26;;;1079:35;;;;;;1146:13;1127:16;;:32;;;;;;;;;;;;;;;;;;1182:13;1170:9;;:25;;;;;;;;;;;;;;;;;;1221:7;1206:12;;:22;;;;;;;;;;;;;;;;;;1255:10;1239:13;;:26;;;;;;;;;;;;;;;;;;1309:13;;;;;;;;;;;1276:10;;:47;;;;;;;;;;;;;;;;;;1336:29;1342:16;;;;;;;;;;;1360:4;1336:5;:29::i;:::-;1376:8;:6;:8::i;:::-;810:582:::0;;;;:::o;376:24::-;;;;;;;;;;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;2296:294:5:-;2385:12;2399:13;2434:2;2429;:7;2425:131;;;2453:11;2467:2;2453:16;;2489:2;2484:7;;2511:3;2506:8;;2540:4;2529:15;;2438:118;2425:131;2580:2;2575;:7;;;;:::i;:::-;2568:14;;2296:294;;;;;:::o;5393:300:1:-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;1123:187:6:-;1217:1;1197:22;;:8;:22;;;1189:31;;;;;;1265:8;1236:38;;1257:6;;;;;;;;;;;1236:38;;;;;;;;;;;;1294:8;1285:6;;:17;;;;;;;;;;;;;;;;;;1123:187;:::o;9701:432:1:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:332::-;335:4;373:2;362:9;358:18;350:26;;386:71;454:1;443:9;439:17;430:6;386:71;:::i;:::-;467:72;535:2;524:9;520:18;511:6;467:72;:::i;:::-;214:332;;;;;:::o;552:99::-;604:6;638:5;632:12;622:22;;552:99;;;:::o;657:169::-;741:11;775:6;770:3;763:19;815:4;810:3;806:14;791:29;;657:169;;;;:::o;832:139::-;921:6;916:3;911;905:23;962:1;953:6;948:3;944:16;937:27;832:139;;;:::o;977:102::-;1018:6;1069:2;1065:7;1060:2;1053:5;1049:14;1045:28;1035:38;;977:102;;;:::o;1085:377::-;1173:3;1201:39;1234:5;1201:39;:::i;:::-;1256:71;1320:6;1315:3;1256:71;:::i;:::-;1249:78;;1336:65;1394:6;1389:3;1382:4;1375:5;1371:16;1336:65;:::i;:::-;1426:29;1448:6;1426:29;:::i;:::-;1421:3;1417:39;1410:46;;1177:285;1085:377;;;;:::o;1468:313::-;1581:4;1619:2;1608:9;1604:18;1596:26;;1668:9;1662:4;1658:20;1654:1;1643:9;1639:17;1632:47;1696:78;1769:4;1760:6;1696:78;:::i;:::-;1688:86;;1468:313;;;;:::o;1868:117::-;1977:1;1974;1967:12;2114:126;2151:7;2191:42;2184:5;2180:54;2169:65;;2114:126;;;:::o;2246:96::-;2283:7;2312:24;2330:5;2312:24;:::i;:::-;2301:35;;2246:96;;;:::o;2348:122::-;2421:24;2439:5;2421:24;:::i;:::-;2414:5;2411:35;2401:63;;2460:1;2457;2450:12;2401:63;2348:122;:::o;2476:139::-;2522:5;2560:6;2547:20;2538:29;;2576:33;2603:5;2576:33;:::i;:::-;2476:139;;;;:::o;2621:122::-;2694:24;2712:5;2694:24;:::i;:::-;2687:5;2684:35;2674:63;;2733:1;2730;2723:12;2674:63;2621:122;:::o;2749:139::-;2795:5;2833:6;2820:20;2811:29;;2849:33;2876:5;2849:33;:::i;:::-;2749:139;;;;:::o;2894:474::-;2962:6;2970;3019:2;3007:9;2998:7;2994:23;2990:32;2987:119;;;3025:79;;:::i;:::-;2987:119;3145:1;3170:53;3215:7;3206:6;3195:9;3191:22;3170:53;:::i;:::-;3160:63;;3116:117;3272:2;3298:53;3343:7;3334:6;3323:9;3319:22;3298:53;:::i;:::-;3288:63;;3243:118;2894:474;;;;;:::o;3374:90::-;3408:7;3451:5;3444:13;3437:21;3426:32;;3374:90;;;:::o;3470:109::-;3551:21;3566:5;3551:21;:::i;:::-;3546:3;3539:34;3470:109;;:::o;3585:210::-;3672:4;3710:2;3699:9;3695:18;3687:26;;3723:65;3785:1;3774:9;3770:17;3761:6;3723:65;:::i;:::-;3585:210;;;;:::o;3801:222::-;3894:4;3932:2;3921:9;3917:18;3909:26;;3945:71;4013:1;4002:9;3998:17;3989:6;3945:71;:::i;:::-;3801:222;;;;:::o;4029:619::-;4106:6;4114;4122;4171:2;4159:9;4150:7;4146:23;4142:32;4139:119;;;4177:79;;:::i;:::-;4139:119;4297:1;4322:53;4367:7;4358:6;4347:9;4343:22;4322:53;:::i;:::-;4312:63;;4268:117;4424:2;4450:53;4495:7;4486:6;4475:9;4471:22;4450:53;:::i;:::-;4440:63;;4395:118;4552:2;4578:53;4623:7;4614:6;4603:9;4599:22;4578:53;:::i;:::-;4568:63;;4523:118;4029:619;;;;;:::o;4654:60::-;4682:3;4703:5;4696:12;;4654:60;;;:::o;4720:142::-;4770:9;4803:53;4821:34;4830:24;4848:5;4830:24;:::i;:::-;4821:34;:::i;:::-;4803:53;:::i;:::-;4790:66;;4720:142;;;:::o;4868:126::-;4918:9;4951:37;4982:5;4951:37;:::i;:::-;4938:50;;4868:126;;;:::o;5000:154::-;5078:9;5111:37;5142:5;5111:37;:::i;:::-;5098:50;;5000:154;;;:::o;5160:187::-;5275:65;5334:5;5275:65;:::i;:::-;5270:3;5263:78;5160:187;;:::o;5353:278::-;5474:4;5512:2;5501:9;5497:18;5489:26;;5525:99;5621:1;5610:9;5606:17;5597:6;5525:99;:::i;:::-;5353:278;;;;:::o;5637:86::-;5672:7;5712:4;5705:5;5701:16;5690:27;;5637:86;;;:::o;5729:112::-;5812:22;5828:5;5812:22;:::i;:::-;5807:3;5800:35;5729:112;;:::o;5847:214::-;5936:4;5974:2;5963:9;5959:18;5951:26;;5987:67;6051:1;6040:9;6036:17;6027:6;5987:67;:::i;:::-;5847:214;;;;:::o;6067:118::-;6154:24;6172:5;6154:24;:::i;:::-;6149:3;6142:37;6067:118;;:::o;6191:222::-;6284:4;6322:2;6311:9;6307:18;6299:26;;6335:71;6403:1;6392:9;6388:17;6379:6;6335:71;:::i;:::-;6191:222;;;;:::o;6419:329::-;6478:6;6527:2;6515:9;6506:7;6502:23;6498:32;6495:119;;;6533:79;;:::i;:::-;6495:119;6653:1;6678:53;6723:7;6714:6;6703:9;6699:22;6678:53;:::i;:::-;6668:63;;6624:117;6419:329;;;;:::o;6754:76::-;6790:7;6819:5;6808:16;;6754:76;;;:::o;6836:115::-;6921:23;6938:5;6921:23;:::i;:::-;6916:3;6909:36;6836:115;;:::o;6957:218::-;7048:4;7086:2;7075:9;7071:18;7063:26;;7099:69;7165:1;7154:9;7150:17;7141:6;7099:69;:::i;:::-;6957:218;;;;:::o;7181:474::-;7249:6;7257;7306:2;7294:9;7285:7;7281:23;7277:32;7274:119;;;7312:79;;:::i;:::-;7274:119;7432:1;7457:53;7502:7;7493:6;7482:9;7478:22;7457:53;:::i;:::-;7447:63;;7403:117;7559:2;7585:53;7630:7;7621:6;7610:9;7606:22;7585:53;:::i;:::-;7575:63;;7530:118;7181:474;;;;;:::o;7661:765::-;7747:6;7755;7763;7771;7820:3;7808:9;7799:7;7795:23;7791:33;7788:120;;;7827:79;;:::i;:::-;7788:120;7947:1;7972:53;8017:7;8008:6;7997:9;7993:22;7972:53;:::i;:::-;7962:63;;7918:117;8074:2;8100:53;8145:7;8136:6;8125:9;8121:22;8100:53;:::i;:::-;8090:63;;8045:118;8202:2;8228:53;8273:7;8264:6;8253:9;8249:22;8228:53;:::i;:::-;8218:63;;8173:118;8330:2;8356:53;8401:7;8392:6;8381:9;8377:22;8356:53;:::i;:::-;8346:63;;8301:118;7661:765;;;;;;;:::o;8432:143::-;8489:5;8520:6;8514:13;8505:22;;8536:33;8563:5;8536:33;:::i;:::-;8432:143;;;;:::o;8581:351::-;8651:6;8700:2;8688:9;8679:7;8675:23;8671:32;8668:119;;;8706:79;;:::i;:::-;8668:119;8826:1;8851:64;8907:7;8898:6;8887:9;8883:22;8851:64;:::i;:::-;8841:74;;8797:128;8581:351;;;;:::o;8938:180::-;8986:77;8983:1;8976:88;9083:4;9080:1;9073:15;9107:4;9104:1;9097:15;9124:320;9168:6;9205:1;9199:4;9195:12;9185:22;;9252:1;9246:4;9242:12;9273:18;9263:81;;9329:4;9321:6;9317:17;9307:27;;9263:81;9391:2;9383:6;9380:14;9360:18;9357:38;9354:84;;9410:18;;:::i;:::-;9354:84;9175:269;9124:320;;;:::o;9450:180::-;9498:77;9495:1;9488:88;9595:4;9592:1;9585:15;9619:4;9616:1;9609:15;9636:410;9676:7;9699:20;9717:1;9699:20;:::i;:::-;9694:25;;9733:20;9751:1;9733:20;:::i;:::-;9728:25;;9788:1;9785;9781:9;9810:30;9828:11;9810:30;:::i;:::-;9799:41;;9989:1;9980:7;9976:15;9973:1;9970:22;9950:1;9943:9;9923:83;9900:139;;10019:18;;:::i;:::-;9900:139;9684:362;9636:410;;;;:::o;10052:180::-;10100:77;10097:1;10090:88;10197:4;10194:1;10187:15;10221:4;10218:1;10211:15;10238:185;10278:1;10295:20;10313:1;10295:20;:::i;:::-;10290:25;;10329:20;10347:1;10329:20;:::i;:::-;10324:25;;10368:1;10358:35;;10373:18;;:::i;:::-;10358:35;10415:1;10412;10408:9;10403:14;;10238:185;;;;:::o;10429:120::-;10501:23;10518:5;10501:23;:::i;:::-;10494:5;10491:34;10481:62;;10539:1;10536;10529:12;10481:62;10429:120;:::o;10555:141::-;10611:5;10642:6;10636:13;10627:22;;10658:32;10684:5;10658:32;:::i;:::-;10555:141;;;;:::o;10702:349::-;10771:6;10820:2;10808:9;10799:7;10795:23;10791:32;10788:119;;;10826:79;;:::i;:::-;10788:119;10946:1;10971:63;11026:7;11017:6;11006:9;11002:22;10971:63;:::i;:::-;10961:73;;10917:127;10702:349;;;;:::o;11057:442::-;11206:4;11244:2;11233:9;11229:18;11221:26;;11257:71;11325:1;11314:9;11310:17;11301:6;11257:71;:::i;:::-;11338:72;11406:2;11395:9;11391:18;11382:6;11338:72;:::i;:::-;11420;11488:2;11477:9;11473:18;11464:6;11420:72;:::i;:::-;11057:442;;;;;;:::o;11505:194::-;11545:4;11565:20;11583:1;11565:20;:::i;:::-;11560:25;;11599:20;11617:1;11599:20;:::i;:::-;11594:25;;11643:1;11640;11636:9;11628:17;;11667:1;11661:4;11658:11;11655:37;;;11672:18;;:::i;:::-;11655:37;11505:194;;;;:::o;11705:191::-;11745:3;11764:20;11782:1;11764:20;:::i;:::-;11759:25;;11798:20;11816:1;11798:20;:::i;:::-;11793:25;;11841:1;11838;11834:9;11827:16;;11862:3;11859:1;11856:10;11853:36;;;11869:18;;:::i;:::-;11853:36;11705:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1445400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"aggregator()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"decimals()": "383",
								"getBalances()": "infinite",
								"getPrice()": "infinite",
								"initialize(address,address,address,address)": "infinite",
								"isOwner()": "2513",
								"liquidityAddress()": "2575",
								"name()": "infinite",
								"oracleAddress()": "2597",
								"owner()": "2648",
								"rebase()": "infinite",
								"renounceOwnership()": "30018",
								"symbol()": "infinite",
								"taxCollector()": "2552",
								"tokenZero()": "2640",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30749"
							},
							"internal": {
								"_absDiff(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 337,
									"end": 3249,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 711,
									"end": 802,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 711,
									"end": 802,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 711,
									"end": 802,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 711,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 711,
									"end": 802,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 711,
									"end": 802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 711,
									"end": 802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 711,
									"end": 802,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 711,
									"end": 802,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 711,
									"end": 802,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 711,
									"end": 802,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "4C696E6B20446F6C6C6172000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "444F484C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 581,
									"end": 591,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 572,
									"end": 578,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 591,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 572,
									"end": 591,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 572,
									"end": 591,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 572,
									"end": 591,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 765,
									"end": 794,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 771,
									"end": 777,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 635,
									"end": 639,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "3782DACE9D900000"
								},
								{
									"begin": 765,
									"end": 770,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 765,
									"end": 770,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 765,
									"end": 770,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 765,
									"end": 794,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 765,
									"end": 794,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 765,
									"end": 794,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 765,
									"end": 794,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 765,
									"end": 794,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 3249,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204cb8b8dd2318b6d4ae1fc281313adcfee0ae29edeaac788bf79273e3f6a26c5264736f6c634300081c0033",
									".code": [
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "8F32D59B"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "AF14052C"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "AF14052C"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "BEA1DCF8"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "F8C8765E"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "FAAD24F4"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "8F32D59B"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "98D5FDCA"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "A89AE4BA"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "245A7BFC"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "245A7BFC"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "3221C93F"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "113E08"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 3249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1400,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1400,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1656,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1656,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1656,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 547,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 547,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 441,
											"end": 472,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 441,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 441,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 872,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 607,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 607,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 772,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 772,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2598,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2598,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 479,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 479,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2706,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 407,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 407,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1006,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1006,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 810,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 810,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 376,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 376,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1544,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1544,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1613,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1640,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1613,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1813,
											"end": 1825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1852,
											"end": 1856,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1872,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1836,
											"end": 1873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1873,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1836,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1886,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1886,
											"end": 1894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1894,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1886,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1907,
											"end": 1937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1907,
											"end": 1937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 682,
											"end": 685,
											"name": "PUSH",
											"source": 5,
											"value": "1F4"
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1963,
											"end": 1979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1963,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1979,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1963,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1962,
											"end": 1989,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 1989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1962,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1962,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2043,
											"end": 2048,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2053,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2034,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2054,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2054,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2054,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2072,
											"end": 2080,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2080,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2091,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2071,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2192,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2067,
											"end": 2192,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2156,
											"end": 2160,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2179,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2146,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2180,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2146,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2192,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2067,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2238,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2204,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2204,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2250,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2258,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2250,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2280,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 2288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 547,
											"end": 584,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 547,
											"end": 584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 441,
											"end": 472,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 441,
											"end": 472,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 441,
											"end": 472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 734,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 971,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 645,
											"end": 652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 665,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 812,
											"end": 816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 836,
											"end": 846,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 836,
											"end": 856,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 829,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2665,
											"end": 2675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2688,
											"name": "PUSH",
											"source": 5,
											"value": "50D25BCD"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2665,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2665,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 479,
											"end": 507,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 479,
											"end": 507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2706,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2766,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2766,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2810,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2810,
											"end": 2846,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2810,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2896,
											"end": 2900,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2878,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2947,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2936,
											"end": 2955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2936,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2955,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2936,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3004,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3031,
											"end": 3041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3066,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3008,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3077,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3008,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 3077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 3077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 3077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 3077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3090,
											"end": 3239,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3120,
											"end": 3157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3090,
											"end": 3239,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3239,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3090,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3196,
											"end": 3212,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3214,
											"end": 3226,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3190,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3227,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3190,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3239,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3090,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 3246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 3246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 3246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 3246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 3246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 3246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 407,
											"end": 434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 407,
											"end": 434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 734,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1079,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1098,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1079,
											"end": 1097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1079,
											"end": 1107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1079,
											"end": 1107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1079,
											"end": 1107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 734,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 994,
											"end": 1024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 994,
											"end": 1010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 994,
											"end": 1024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1024,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 986,
											"end": 1025,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1025,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 986,
											"end": 1025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1067,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1036,
											"end": 1068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1068,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1036,
											"end": 1068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1113,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1113,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1113,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1079,
											"end": 1114,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1114,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1079,
											"end": 1114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1159,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1127,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1159,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1170,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1195,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1206,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1265,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1239,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1265,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1276,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1342,
											"end": 1358,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1336,
											"end": 1341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1336,
											"end": 1365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1336,
											"end": 1365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1376,
											"end": 1382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1376,
											"end": 1384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1376,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 810,
											"end": 1392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 400,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2590,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2296,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2436,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2556,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2425,
											"end": 2556,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2491,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2514,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2529,
											"end": 2544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2556,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2425,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2575,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2582,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2590,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2590,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1310,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1123,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1273,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 214,
											"end": 546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 335,
											"end": 339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 358,
											"end": 376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 350,
											"end": 376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 350,
											"end": 376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 439,
											"end": 456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 430,
											"end": 436,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 386,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 457,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 386,
											"end": 457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 520,
											"end": 538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 467,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 467,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 467,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 552,
											"end": 651,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 552,
											"end": 651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 644,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 622,
											"end": 644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 622,
											"end": 644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 552,
											"end": 651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 552,
											"end": 651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 552,
											"end": 651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 552,
											"end": 651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 657,
											"end": 826,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 657,
											"end": 826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 741,
											"end": 752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 815,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 806,
											"end": 820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 791,
											"end": 820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 657,
											"end": 826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 657,
											"end": 826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 657,
											"end": 826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 657,
											"end": 826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 657,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 832,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 921,
											"end": 927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 916,
											"end": 919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 911,
											"end": 914,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 905,
											"end": 928,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 962,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 959,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 948,
											"end": 951,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 944,
											"end": 960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 832,
											"end": 971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 977,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1053,
											"end": 1058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1045,
											"end": 1073,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1035,
											"end": 1073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1035,
											"end": 1073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1462,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 1085,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1201,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1318,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 1256,
											"end": 1327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1327,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1256,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1327,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1380,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1336,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1401,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1336,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 1426,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1455,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1426,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1424,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1456,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1462,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1781,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1468,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1621,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1678,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1679,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1769,
											"end": 1773,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 1696,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1774,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1696,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1781,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1781,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1868,
											"end": 1985,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1868,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1979,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2234,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2169,
											"end": 2234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2169,
											"end": 2234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2240,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2312,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2336,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2312,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2470,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2348,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2421,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2445,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2421,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2446,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2401,
											"end": 2464,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2462,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2464,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2401,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2567,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2603,
											"end": 2608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2576,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2576,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2743,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2621,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2694,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2694,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2674,
											"end": 2737,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2735,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2737,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2674,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2876,
											"end": 2881,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2849,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2882,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2849,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3021,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2994,
											"end": 3017,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2990,
											"end": 3022,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3025,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3025,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3104,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3025,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2987,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 3215,
											"end": 3222,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3170,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3223,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3343,
											"end": 3350,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3319,
											"end": 3341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3298,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3243,
											"end": 3361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3458,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3579,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3470,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3566,
											"end": 3571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3551,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3572,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3551,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3573,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3687,
											"end": 3713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3687,
											"end": 3713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3767,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3723,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4023,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3801,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3921,
											"end": 3930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4011,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3945,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 4016,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3945,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4023,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4023,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4648,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4029,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4112,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4173,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4159,
											"end": 4168,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4157,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4142,
											"end": 4174,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4177,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4177,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4177,
											"end": 4256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4177,
											"end": 4256,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4177,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4139,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 4367,
											"end": 4374,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4358,
											"end": 4364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4343,
											"end": 4365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4322,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4322,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4322,
											"end": 4375,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 4322,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4312,
											"end": 4375,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4312,
											"end": 4375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4268,
											"end": 4385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 4495,
											"end": 4502,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4450,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4503,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 4450,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4503,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4513,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4578,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4623,
											"end": 4630,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4614,
											"end": 4620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4612,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4578,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4631,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4578,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4523,
											"end": 4641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4648,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4648,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4648,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4714,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4654,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4682,
											"end": 4685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4708,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4696,
											"end": 4708,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4696,
											"end": 4708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4714,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4862,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4720,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4821,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4830,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4848,
											"end": 4853,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4830,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 4854,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4830,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4821,
											"end": 4855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4855,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4821,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4803,
											"end": 4856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4856,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4803,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4862,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4994,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4868,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4982,
											"end": 4987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4951,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4988,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4951,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 4988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 4988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5154,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5000,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5078,
											"end": 5087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5142,
											"end": 5147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5111,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5111,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5111,
											"end": 5148,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5111,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5098,
											"end": 5148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5347,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5160,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 5334,
											"end": 5339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5275,
											"end": 5340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5340,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 5275,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5263,
											"end": 5341,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5631,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5353,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5619,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5606,
											"end": 5623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5597,
											"end": 5603,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5525,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5624,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 5525,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5631,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5723,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5637,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5716,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5705,
											"end": 5710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5701,
											"end": 5717,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5729,
											"end": 5841,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5729,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5828,
											"end": 5833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5812,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5807,
											"end": 5810,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5729,
											"end": 5841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5729,
											"end": 5841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5729,
											"end": 5841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 6061,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5847,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5976,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5959,
											"end": 5977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6036,
											"end": 6053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5987,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 5987,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 6061,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 6061,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 6061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 6061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 6061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6067,
											"end": 6185,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 6067,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6172,
											"end": 6177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 6154,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6178,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6154,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6149,
											"end": 6152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6142,
											"end": 6179,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6067,
											"end": 6185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6067,
											"end": 6185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6067,
											"end": 6185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6413,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 6191,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6284,
											"end": 6288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6324,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6299,
											"end": 6325,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6299,
											"end": 6325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 6403,
											"end": 6404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6379,
											"end": 6385,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 6335,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 6335,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6413,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 6419,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6515,
											"end": 6524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6513,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6525,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6614,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 6495,
											"end": 6614,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6533,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6533,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 6533,
											"end": 6612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6533,
											"end": 6612,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6533,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6614,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 6495,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6653,
											"end": 6654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 6723,
											"end": 6730,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6714,
											"end": 6720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6699,
											"end": 6721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 6678,
											"end": 6731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6731,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 6678,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6668,
											"end": 6731,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6668,
											"end": 6731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6748,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6748,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6830,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 6754,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6951,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 6836,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6921,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 6938,
											"end": 6943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6921,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 6921,
											"end": 6944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6921,
											"end": 6944,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 6921,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6945,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 7175,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 6957,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7048,
											"end": 7052,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7075,
											"end": 7084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7063,
											"end": 7089,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7063,
											"end": 7089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 7165,
											"end": 7166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7163,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7150,
											"end": 7167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 7099,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7168,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 7099,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 7175,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 7175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 7175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 7175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 7175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7655,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7181,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7249,
											"end": 7255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7294,
											"end": 7303,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7285,
											"end": 7292,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7281,
											"end": 7304,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7393,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 7274,
											"end": 7393,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7312,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7393,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 7274,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 7502,
											"end": 7509,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7493,
											"end": 7499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7478,
											"end": 7500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7457,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7457,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7457,
											"end": 7510,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 7457,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7447,
											"end": 7510,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7447,
											"end": 7510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 7630,
											"end": 7637,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7621,
											"end": 7627,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7610,
											"end": 7619,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7606,
											"end": 7628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7585,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7585,
											"end": 7638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7585,
											"end": 7638,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 7585,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7575,
											"end": 7638,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7575,
											"end": 7638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7530,
											"end": 7648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7655,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7655,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7823,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7808,
											"end": 7817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7806,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7795,
											"end": 7818,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7791,
											"end": 7824,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7908,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 7788,
											"end": 7908,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7827,
											"end": 7906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7908,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 7788,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7947,
											"end": 7948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7997,
											"end": 8006,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7993,
											"end": 8015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7972,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 8025,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 8025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 8035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8074,
											"end": 8076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8100,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 8145,
											"end": 8152,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8121,
											"end": 8143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 8100,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8153,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 8100,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8090,
											"end": 8153,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8090,
											"end": 8153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8204,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8228,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 8273,
											"end": 8280,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8264,
											"end": 8270,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8253,
											"end": 8262,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8228,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 8228,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8228,
											"end": 8281,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 8228,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8218,
											"end": 8281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8218,
											"end": 8281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8173,
											"end": 8291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8330,
											"end": 8332,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8356,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 8401,
											"end": 8408,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8390,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8399,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8356,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 8356,
											"end": 8409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8356,
											"end": 8409,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 8356,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8301,
											"end": 8419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 8426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8575,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 8432,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8489,
											"end": 8494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8514,
											"end": 8527,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8505,
											"end": 8527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8505,
											"end": 8527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8536,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 8563,
											"end": 8568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8536,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 8536,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8536,
											"end": 8569,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 8536,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8575,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8932,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 8581,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8651,
											"end": 8657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8702,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8688,
											"end": 8697,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8675,
											"end": 8698,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 8703,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8706,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 8706,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 8706,
											"end": 8785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8706,
											"end": 8785,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 8706,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 8907,
											"end": 8914,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 8851,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8915,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 8851,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8841,
											"end": 8915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8841,
											"end": 8915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8797,
											"end": 8925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8932,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8581,
											"end": 8932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9118,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 8938,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8986,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8983,
											"end": 8984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8976,
											"end": 9064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9087,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9080,
											"end": 9081,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9073,
											"end": 9088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9107,
											"end": 9111,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9104,
											"end": 9105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9112,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9124,
											"end": 9444,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 9124,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9168,
											"end": 9174,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9205,
											"end": 9206,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9199,
											"end": 9203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9195,
											"end": 9207,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9246,
											"end": 9250,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9242,
											"end": 9254,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9273,
											"end": 9291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9263,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 9263,
											"end": 9344,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9333,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 9321,
											"end": 9327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9317,
											"end": 9334,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9307,
											"end": 9334,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9307,
											"end": 9334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9263,
											"end": 9344,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 9263,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9391,
											"end": 9393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9380,
											"end": 9394,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9357,
											"end": 9395,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 9354,
											"end": 9438,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 9410,
											"end": 9428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9438,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 9354,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9175,
											"end": 9444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9124,
											"end": 9444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9124,
											"end": 9444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9124,
											"end": 9444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9124,
											"end": 9444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9630,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 9450,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9498,
											"end": 9575,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9495,
											"end": 9496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9595,
											"end": 9599,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9592,
											"end": 9593,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9585,
											"end": 9600,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 9623,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9624,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 10046,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 9636,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9676,
											"end": 9683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9699,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 9717,
											"end": 9718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9699,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 9699,
											"end": 9719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9699,
											"end": 9719,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 9699,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9733,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 9751,
											"end": 9752,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9733,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 9733,
											"end": 9753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9733,
											"end": 9753,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 9733,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9753,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9786,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9810,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 9828,
											"end": 9839,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9810,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 9810,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9810,
											"end": 9840,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 9810,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9989,
											"end": 9990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9980,
											"end": 9987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9976,
											"end": 9991,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9973,
											"end": 9974,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 9992,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9950,
											"end": 9951,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9943,
											"end": 9952,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9923,
											"end": 10006,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 9900,
											"end": 10039,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 10019,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 10039,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 9900,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9684,
											"end": 10046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 10046,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 10046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 10046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 10046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 10046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10232,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 10052,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10100,
											"end": 10177,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10097,
											"end": 10098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10090,
											"end": 10178,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10201,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10194,
											"end": 10195,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10187,
											"end": 10202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10225,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10218,
											"end": 10219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10226,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10423,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 10238,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10278,
											"end": 10279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 10313,
											"end": 10314,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 10295,
											"end": 10315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10295,
											"end": 10315,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 10295,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10290,
											"end": 10315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10290,
											"end": 10315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10329,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 10347,
											"end": 10348,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10329,
											"end": 10349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 10329,
											"end": 10349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10329,
											"end": 10349,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 10329,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10324,
											"end": 10349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10324,
											"end": 10349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10368,
											"end": 10369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10358,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10358,
											"end": 10393,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10373,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 10373,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 10373,
											"end": 10391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10373,
											"end": 10391,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 10373,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10358,
											"end": 10393,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 10358,
											"end": 10393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10415,
											"end": 10416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10417,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10549,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 10429,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10501,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 10518,
											"end": 10523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10501,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10501,
											"end": 10524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10501,
											"end": 10524,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 10501,
											"end": 10524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10494,
											"end": 10499,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10491,
											"end": 10525,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10481,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 10481,
											"end": 10543,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10539,
											"end": 10540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10536,
											"end": 10537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10529,
											"end": 10541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10481,
											"end": 10543,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 10481,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 10696,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 10555,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10611,
											"end": 10616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10636,
											"end": 10649,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10649,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10658,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 10684,
											"end": 10689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10658,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 10658,
											"end": 10690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10658,
											"end": 10690,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 10658,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 10696,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 10696,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 10696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 10696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 10696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 11051,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 10702,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10820,
											"end": 10822,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10817,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10799,
											"end": 10806,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10795,
											"end": 10818,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10791,
											"end": 10823,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 10907,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 10788,
											"end": 10907,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10826,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 10826,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 10826,
											"end": 10905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10826,
											"end": 10905,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 10826,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 10907,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 10788,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10946,
											"end": 10947,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10971,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 11026,
											"end": 11033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11017,
											"end": 11023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11006,
											"end": 11015,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11002,
											"end": 11024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10971,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 10971,
											"end": 11034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10971,
											"end": 11034,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 10971,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10961,
											"end": 11034,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10961,
											"end": 11034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 11044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 11051,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 11051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 11051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 11051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 11051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11499,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 11057,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11206,
											"end": 11210,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11244,
											"end": 11246,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11233,
											"end": 11242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 11325,
											"end": 11326,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11323,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11310,
											"end": 11327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11301,
											"end": 11307,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 11257,
											"end": 11328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 11328,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 11257,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11338,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 11406,
											"end": 11408,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11395,
											"end": 11404,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11391,
											"end": 11409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11382,
											"end": 11388,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11338,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 11338,
											"end": 11410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11338,
											"end": 11410,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 11338,
											"end": 11410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11420,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 11488,
											"end": 11490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11477,
											"end": 11486,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11473,
											"end": 11491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11464,
											"end": 11470,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11420,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 11420,
											"end": 11492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11420,
											"end": 11492,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 11420,
											"end": 11492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11499,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11499,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11505,
											"end": 11699,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 11505,
											"end": 11699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11545,
											"end": 11549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 11583,
											"end": 11584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 11565,
											"end": 11585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11560,
											"end": 11585,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11560,
											"end": 11585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 11617,
											"end": 11618,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 11599,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11619,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 11599,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11594,
											"end": 11619,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11594,
											"end": 11619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11640,
											"end": 11641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11636,
											"end": 11645,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11628,
											"end": 11645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11628,
											"end": 11645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 11668,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11658,
											"end": 11669,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11655,
											"end": 11692,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11655,
											"end": 11692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 11655,
											"end": 11692,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11672,
											"end": 11690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11655,
											"end": 11692,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 11655,
											"end": 11692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11505,
											"end": 11699,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11505,
											"end": 11699,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11505,
											"end": 11699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11505,
											"end": 11699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11505,
											"end": 11699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11896,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 11705,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 11748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 11782,
											"end": 11783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11764,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 11764,
											"end": 11784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11764,
											"end": 11784,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 11764,
											"end": 11784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11759,
											"end": 11784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11759,
											"end": 11784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11798,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11816,
											"end": 11817,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11798,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 11798,
											"end": 11818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11798,
											"end": 11818,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11798,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11793,
											"end": 11818,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11793,
											"end": 11818,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 11842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11838,
											"end": 11839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11827,
											"end": 11843,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11827,
											"end": 11843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11862,
											"end": 11865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11859,
											"end": 11860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11856,
											"end": 11866,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11853,
											"end": 11889,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11853,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 11853,
											"end": 11889,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11869,
											"end": 11887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11853,
											"end": 11889,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 11853,
											"end": 11889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11896,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11896,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11705,
											"end": 11896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DOHL.sol",
								"contracts/Ownable.sol",
								"contracts/interfaces/AggregatorInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"aggregator()": "245a7bfc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getBalances()": "00113e08",
							"getPrice()": "98d5fdca",
							"initialize(address,address,address,address)": "f8c8765e",
							"isOwner()": "8f32d59b",
							"liquidityAddress()": "3221c93f",
							"name()": "06fdde03",
							"oracleAddress()": "a89ae4ba",
							"owner()": "8da5cb5b",
							"rebase()": "af14052c",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"taxCollector()": "bea1dcf8",
							"tokenZero()": "faad24f4",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceOne\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracleAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenZeroAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenZero\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DOHL.sol\":\"DOHL\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DOHL.sol\":{\"keccak256\":\"0x6eb20f6459d7b780aa29b87f42a724050c32314d818ee816c5818af44fa59a5f\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://866d8ca794c9393a5715f92f053d1ef5fa731202a30b54978951cd2f9e7b44f5\",\"dweb:/ipfs/QmSexMAeVzXFvXjb98JvLBMP8oPVQ171vkW9eLM17CcyTZ\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xc837e67ecae78ca3af1b197cf396afb77a1c71da98ecfaf8f444ca85611e32b2\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://36f2302f8009468deab627b61088ec6d035e8d0aac85ac7fc76490031704f86f\",\"dweb:/ipfs/Qmc3Sf7733uZgUHRz555P8SBCsuWim9eUJjpvXxgD7c1iT\"]},\"contracts/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x089dfd9e1bde0e83e8b39e47619893b9bdf968954e2dc420d4f1ee4dff2a7d95\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://ea454a31115c5a75eff1b334c2b1169c30adf0558905499fdfa9d36c5c773764\",\"dweb:/ipfs/QmfFY4Ki31wNVjHAtUp8UoK3TLnHSNcXQjgm4iMQno3i56\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1120,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 796,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "tokenZero",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 798,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "taxCollector",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 800,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "liquidityAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 802,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "oracleAddress",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 804,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "_stub2",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 807,
								"contract": "contracts/DOHL.sol:DOHL",
								"label": "aggregator",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(AggregatorInterface)1269"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorInterface)1269": {
								"encoding": "inplace",
								"label": "contract AggregatorInterface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"IOwnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xc837e67ecae78ca3af1b197cf396afb77a1c71da98ecfaf8f444ca85611e32b2\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://36f2302f8009468deab627b61088ec6d035e8d0aac85ac7fc76490031704f86f\",\"dweb:/ipfs/Qmc3Sf7733uZgUHRz555P8SBCsuWim9eUJjpvXxgD7c1iT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":298:1313  contract Ownable is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":547:599  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":581:591  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":572:578  _owner */\n  0x00\n  0x00\n    /* \"contracts/Ownable.sol\":572:591  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":298:1313  contract Ownable is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":298:1313  contract Ownable is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/Ownable.sol\":872:998  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Ownable.sol\":607:686  function owner() public view returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":772:864  function isOwner() public view returns (bool) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1006:1115  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Ownable.sol\":872:998  function renounceOwnership() public onlyOwner {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      tag_22\n        /* \"contracts/Ownable.sol\":734:741  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Ownable.sol\":726:744  require(isOwner()) */\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n        /* \"contracts/Ownable.sol\":953:959  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":934:960  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":988:989  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":971:977  _owner */\n      0x00\n      0x00\n        /* \"contracts/Ownable.sol\":971:990  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":872:998  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":607:686  function owner() public view returns (address) {... */\n    tag_10:\n        /* \"contracts/Ownable.sol\":645:652  address */\n      0x00\n        /* \"contracts/Ownable.sol\":672:678  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":665:678  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":607:686  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":772:864  function isOwner() public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Ownable.sol\":812:816  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":850:856  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":836:856  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":836:846  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":836:856  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":829:856  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":772:864  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1006:1115  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      tag_28\n        /* \"contracts/Ownable.sol\":734:741  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":734:743  isOwner() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/Ownable.sol\":726:744  require(isOwner()) */\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n        /* \"contracts/Ownable.sol\":1079:1107  _transferOwnership(newOwner) */\n      tag_31\n        /* \"contracts/Ownable.sol\":1098:1106  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1079:1097  _transferOwnership */\n      tag_32\n        /* \"contracts/Ownable.sol\":1079:1107  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Ownable.sol\":1006:1115  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1123:1310  function _transferOwnership(address newOwner) internal {... */\n    tag_32:\n        /* \"contracts/Ownable.sol\":1217:1218  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1197:1219  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1197:1205  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1197:1219  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":1189:1220  require(newOwner != address(0)) */\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n        /* \"contracts/Ownable.sol\":1265:1273  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1236:1274  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1257:1263  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1236:1274  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1294:1302  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":1285:1291  _owner */\n      0x00\n      0x00\n        /* \"contracts/Ownable.sol\":1285:1302  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1123:1310  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_48\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_50\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_52\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_38:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_39:\n        /* \"#utility.yul\":770:791   */\n      tag_55\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_16:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_57\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_41:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      0x00\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_43:\n        /* \"#utility.yul\":1420:1444   */\n      tag_62\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_63:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_44:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_65\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1949   */\n    tag_19:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1728:1730   */\n      0x20\n        /* \"#utility.yul\":1716:1725   */\n      dup3\n        /* \"#utility.yul\":1707:1714   */\n      dup5\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_68\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1696:1815   */\n    tag_67:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_69\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup6\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1869:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1620:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122020fddda095fcf5a4b57759445f74b75a2986f384acc4e216704870ea1271894064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1139": {
									"entryPoint": null,
									"id": 1139,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104098061005b5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f5ffd5b6100566100b0565b005b610060610164565b60405161006d919061032e565b60405180910390f35b61007e61018b565b60405161008b9190610361565b60405180910390f35b6100ae60048036038101906100a991906103a8565b6101e0565b005b6100b861018b565b6100c0575f5ffd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f5f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e861018b565b6101f0575f5ffd5b6101f9816101fc565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610233575f5ffd5b8073ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610318826102ef565b9050919050565b6103288161030e565b82525050565b5f6020820190506103415f83018461031f565b92915050565b5f8115159050919050565b61035b81610347565b82525050565b5f6020820190506103745f830184610352565b92915050565b5f5ffd5b6103878161030e565b8114610391575f5ffd5b50565b5f813590506103a28161037e565b92915050565b5f602082840312156103bd576103bc61037a565b5b5f6103ca84828501610394565b9150509291505056fea264697066735822122020fddda095fcf5a4b57759445f74b75a2986f384acc4e216704870ea1271894064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x409 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18B JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x18B JUMP JUMPDEST PUSH2 0x1F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F9 DUP2 PUSH2 0x1FC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x233 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x318 DUP3 PUSH2 0x2EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x30E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x341 PUSH0 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35B DUP2 PUSH2 0x347 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x374 PUSH0 DUP4 ADD DUP5 PUSH2 0x352 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x387 DUP2 PUSH2 0x30E JUMP JUMPDEST DUP2 EQ PUSH2 0x391 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A2 DUP2 PUSH2 0x37E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x37A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3CA DUP5 DUP3 DUP6 ADD PUSH2 0x394 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 REVERT 0xDD LOG0 SWAP6 0xFC CREATE2 LOG4 0xB5 PUSH24 0x59445F74B75A2986F384ACC4E216704870EA127189406473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "298:1015:6:-:0;;;547:52;;;;;;;;;;581:10;572:6;;:19;;;;;;;;;;;;;;;;;;298:1015;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_1220": {
									"entryPoint": 508,
									"id": 1220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_1167": {
									"entryPoint": 395,
									"id": 1167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1147": {
									"entryPoint": 356,
									"id": 1147,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1184": {
									"entryPoint": 176,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1196": {
									"entryPoint": 480,
									"id": 1196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1952:8",
										"nodeType": "YulBlock",
										"src": "0:1952:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:8",
													"nodeType": "YulBlock",
													"src": "52:81:8",
													"statements": [
														{
															"nativeSrc": "62:65:8",
															"nodeType": "YulAssignment",
															"src": "62:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:8",
																		"nodeType": "YulLiteral",
																		"src": "84:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:8"
																},
																"nativeSrc": "73:54:8",
																"nodeType": "YulFunctionCall",
																"src": "73:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:126:8"
											},
											{
												"body": {
													"nativeSrc": "184:51:8",
													"nodeType": "YulBlock",
													"src": "184:51:8",
													"statements": [
														{
															"nativeSrc": "194:35:8",
															"nodeType": "YulAssignment",
															"src": "194:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:8"
																},
																"nativeSrc": "205:24:8",
																"nodeType": "YulFunctionCall",
																"src": "205:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:8",
														"nodeType": "YulTypedName",
														"src": "166:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:8",
														"nodeType": "YulTypedName",
														"src": "176:7:8",
														"type": ""
													}
												],
												"src": "139:96:8"
											},
											{
												"body": {
													"nativeSrc": "306:53:8",
													"nodeType": "YulBlock",
													"src": "306:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:8"
																		},
																		"nativeSrc": "328:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:8"
																},
																"nativeSrc": "316:37:8",
																"nodeType": "YulFunctionCall",
																"src": "316:37:8"
															},
															"nativeSrc": "316:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:8",
														"nodeType": "YulTypedName",
														"src": "294:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:8",
														"nodeType": "YulTypedName",
														"src": "301:3:8",
														"type": ""
													}
												],
												"src": "241:118:8"
											},
											{
												"body": {
													"nativeSrc": "463:124:8",
													"nodeType": "YulBlock",
													"src": "463:124:8",
													"statements": [
														{
															"nativeSrc": "473:26:8",
															"nodeType": "YulAssignment",
															"src": "473:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:8",
																		"nodeType": "YulLiteral",
																		"src": "496:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:8"
																},
																"nativeSrc": "481:18:8",
																"nodeType": "YulFunctionCall",
																"src": "481:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:8",
																				"nodeType": "YulLiteral",
																				"src": "577:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:8"
																		},
																		"nativeSrc": "562:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:8"
																},
																"nativeSrc": "509:71:8",
																"nodeType": "YulFunctionCall",
																"src": "509:71:8"
															},
															"nativeSrc": "509:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:8",
														"nodeType": "YulTypedName",
														"src": "435:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:8",
														"nodeType": "YulTypedName",
														"src": "447:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:8",
														"nodeType": "YulTypedName",
														"src": "458:4:8",
														"type": ""
													}
												],
												"src": "365:222:8"
											},
											{
												"body": {
													"nativeSrc": "635:48:8",
													"nodeType": "YulBlock",
													"src": "635:48:8",
													"statements": [
														{
															"nativeSrc": "645:32:8",
															"nodeType": "YulAssignment",
															"src": "645:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:8"
																		},
																		"nativeSrc": "663:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:8"
																},
																"nativeSrc": "656:21:8",
																"nodeType": "YulFunctionCall",
																"src": "656:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:8",
														"nodeType": "YulTypedName",
														"src": "617:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:8",
														"nodeType": "YulTypedName",
														"src": "627:7:8",
														"type": ""
													}
												],
												"src": "593:90:8"
											},
											{
												"body": {
													"nativeSrc": "748:50:8",
													"nodeType": "YulBlock",
													"src": "748:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:8"
																		},
																		"nativeSrc": "770:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:8"
																},
																"nativeSrc": "758:34:8",
																"nodeType": "YulFunctionCall",
																"src": "758:34:8"
															},
															"nativeSrc": "758:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:8",
														"nodeType": "YulTypedName",
														"src": "736:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:8",
														"nodeType": "YulTypedName",
														"src": "743:3:8",
														"type": ""
													}
												],
												"src": "689:109:8"
											},
											{
												"body": {
													"nativeSrc": "896:118:8",
													"nodeType": "YulBlock",
													"src": "896:118:8",
													"statements": [
														{
															"nativeSrc": "906:26:8",
															"nodeType": "YulAssignment",
															"src": "906:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:8",
																		"nodeType": "YulLiteral",
																		"src": "929:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:8"
																},
																"nativeSrc": "914:18:8",
																"nodeType": "YulFunctionCall",
																"src": "914:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:8"
																		},
																		"nativeSrc": "989:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:8"
																},
																"nativeSrc": "942:65:8",
																"nodeType": "YulFunctionCall",
																"src": "942:65:8"
															},
															"nativeSrc": "942:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:8",
														"nodeType": "YulTypedName",
														"src": "868:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:8",
														"nodeType": "YulTypedName",
														"src": "880:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:8",
														"nodeType": "YulTypedName",
														"src": "891:4:8",
														"type": ""
													}
												],
												"src": "804:210:8"
											},
											{
												"body": {
													"nativeSrc": "1060:35:8",
													"nodeType": "YulBlock",
													"src": "1060:35:8",
													"statements": [
														{
															"nativeSrc": "1070:19:8",
															"nodeType": "YulAssignment",
															"src": "1070:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:8"
																},
																"nativeSrc": "1080:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:8",
														"nodeType": "YulTypedName",
														"src": "1053:6:8",
														"type": ""
													}
												],
												"src": "1020:75:8"
											},
											{
												"body": {
													"nativeSrc": "1190:28:8",
													"nodeType": "YulBlock",
													"src": "1190:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:8"
																},
																"nativeSrc": "1200:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:8"
															},
															"nativeSrc": "1200:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:8"
											},
											{
												"body": {
													"nativeSrc": "1313:28:8",
													"nodeType": "YulBlock",
													"src": "1313:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:8"
																},
																"nativeSrc": "1323:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:8"
															},
															"nativeSrc": "1323:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:8"
											},
											{
												"body": {
													"nativeSrc": "1390:79:8",
													"nodeType": "YulBlock",
													"src": "1390:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:8",
																"nodeType": "YulBlock",
																"src": "1447:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:8"
																			},
																			"nativeSrc": "1449:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:8"
																		},
																		"nativeSrc": "1449:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:8"
																				},
																				"nativeSrc": "1420:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:8"
																		},
																		"nativeSrc": "1410:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:8"
																},
																"nativeSrc": "1403:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:8"
															},
															"nativeSrc": "1400:63:8",
															"nodeType": "YulIf",
															"src": "1400:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:8",
														"nodeType": "YulTypedName",
														"src": "1383:5:8",
														"type": ""
													}
												],
												"src": "1347:122:8"
											},
											{
												"body": {
													"nativeSrc": "1527:87:8",
													"nodeType": "YulBlock",
													"src": "1527:87:8",
													"statements": [
														{
															"nativeSrc": "1537:29:8",
															"nodeType": "YulAssignment",
															"src": "1537:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:8"
																},
																"nativeSrc": "1546:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:8"
																},
																"nativeSrc": "1575:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:8"
															},
															"nativeSrc": "1575:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:8",
														"nodeType": "YulTypedName",
														"src": "1505:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:8",
														"nodeType": "YulTypedName",
														"src": "1513:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:8",
														"nodeType": "YulTypedName",
														"src": "1521:5:8",
														"type": ""
													}
												],
												"src": "1475:139:8"
											},
											{
												"body": {
													"nativeSrc": "1686:263:8",
													"nodeType": "YulBlock",
													"src": "1686:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1732:83:8",
																"nodeType": "YulBlock",
																"src": "1732:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1734:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:8"
																			},
																			"nativeSrc": "1734:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:8"
																		},
																		"nativeSrc": "1734:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1707:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1716:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1703:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:8"
																		},
																		"nativeSrc": "1703:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1699:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:8"
																},
																"nativeSrc": "1699:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1699:32:8"
															},
															"nativeSrc": "1696:119:8",
															"nodeType": "YulIf",
															"src": "1696:119:8"
														},
														{
															"nativeSrc": "1825:117:8",
															"nodeType": "YulBlock",
															"src": "1825:117:8",
															"statements": [
																{
																	"nativeSrc": "1840:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1854:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1844:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1869:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1869:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1904:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1915:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1900:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:8"
																				},
																				"nativeSrc": "1900:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1924:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1879:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:8"
																		},
																		"nativeSrc": "1879:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1869:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1620:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:8",
														"nodeType": "YulTypedName",
														"src": "1656:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:8",
														"nodeType": "YulTypedName",
														"src": "1667:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:8",
														"nodeType": "YulTypedName",
														"src": "1679:6:8",
														"type": ""
													}
												],
												"src": "1620:329:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f5ffd5b6100566100b0565b005b610060610164565b60405161006d919061032e565b60405180910390f35b61007e61018b565b60405161008b9190610361565b60405180910390f35b6100ae60048036038101906100a991906103a8565b6101e0565b005b6100b861018b565b6100c0575f5ffd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f5f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e861018b565b6101f0575f5ffd5b6101f9816101fc565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610233575f5ffd5b8073ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610318826102ef565b9050919050565b6103288161030e565b82525050565b5f6020820190506103415f83018461031f565b92915050565b5f8115159050919050565b61035b81610347565b82525050565b5f6020820190506103745f830184610352565b92915050565b5f5ffd5b6103878161030e565b8114610391575f5ffd5b50565b5f813590506103a28161037e565b92915050565b5f602082840312156103bd576103bc61037a565b5b5f6103ca84828501610394565b9150509291505056fea264697066735822122020fddda095fcf5a4b57759445f74b75a2986f384acc4e216704870ea1271894064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18B JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x18B JUMP JUMPDEST PUSH2 0x1F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1F9 DUP2 PUSH2 0x1FC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x233 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x318 DUP3 PUSH2 0x2EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x30E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x341 PUSH0 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35B DUP2 PUSH2 0x347 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x374 PUSH0 DUP4 ADD DUP5 PUSH2 0x352 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x387 DUP2 PUSH2 0x30E JUMP JUMPDEST DUP2 EQ PUSH2 0x391 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A2 DUP2 PUSH2 0x37E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x37A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3CA DUP5 DUP3 DUP6 ADD PUSH2 0x394 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 REVERT 0xDD LOG0 SWAP6 0xFC CREATE2 LOG4 0xB5 PUSH24 0x59445F74B75A2986F384ACC4E216704870EA127189406473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "298:1015:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:126;;;:::i;:::-;;607:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;772:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;872:126;734:9;:7;:9::i;:::-;726:18;;;;;;953:6:::1;;;;;;;;;;;934:26;;;;;;;;;;;;988:1;971:6;;:19;;;;;;;;;;;;;;;;;;872:126::o:0;607:79::-;645:7;672:6;;;;;;;;;;;665:13;;607:79;:::o;772:92::-;812:4;850:6;;;;;;;;;;;836:20;;:10;:20;;;829:27;;772:92;:::o;1006:109::-;734:9;:7;:9::i;:::-;726:18;;;;;;1079:28:::1;1098:8;1079:18;:28::i;:::-;1006:109:::0;:::o;1123:187::-;1217:1;1197:22;;:8;:22;;;1189:31;;;;;;1265:8;1236:38;;1257:6;;;;;;;;;;;1236:38;;;;;;;;;;;;1294:8;1285:6;;:17;;;;;;;;;;;;;;;;;;1123:187;:::o;7:126:8:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206600",
								"executionCost": "24513",
								"totalCost": "231113"
							},
							"external": {
								"isOwner()": "2511",
								"owner()": "2514",
								"renounceOwnership()": "29882",
								"transferOwnership(address)": "30702"
							},
							"internal": {
								"_transferOwnership(address)": "27998"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 298,
									"end": 1313,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 547,
									"end": 599,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 547,
									"end": 599,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 547,
									"end": 599,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 547,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 547,
									"end": 599,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 547,
									"end": 599,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 599,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 599,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 547,
									"end": 599,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 547,
									"end": 599,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 547,
									"end": 599,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 581,
									"end": 591,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 572,
									"end": 578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 572,
									"end": 591,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 572,
									"end": 591,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 572,
									"end": 591,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 572,
									"end": 591,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 572,
									"end": 591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 1313,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020fddda095fcf5a4b57759445f74b75a2986f384acc4e216704870ea1271894064736f6c634300081c0033",
									".code": [
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "8F32D59B"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1313,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 872,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 607,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 607,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 772,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 772,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1006,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 872,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 734,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 959,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 934,
											"end": 960,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 971,
											"end": 990,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 872,
											"end": 998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 607,
											"end": 686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 645,
											"end": 652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 672,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 665,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 772,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 812,
											"end": 816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 850,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 836,
											"end": 846,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 836,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 836,
											"end": 856,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 829,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 772,
											"end": 864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 734,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 734,
											"end": 743,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1079,
											"end": 1107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1098,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1079,
											"end": 1097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1079,
											"end": 1107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1079,
											"end": 1107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1079,
											"end": 1107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1310,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1123,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1273,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1274,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DOHL.sol",
								"contracts/Ownable.sol",
								"contracts/interfaces/AggregatorInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xc837e67ecae78ca3af1b197cf396afb77a1c71da98ecfaf8f444ca85611e32b2\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://36f2302f8009468deab627b61088ec6d035e8d0aac85ac7fc76490031704f86f\",\"dweb:/ipfs/Qmc3Sf7733uZgUHRz555P8SBCsuWim9eUJjpvXxgD7c1iT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1120,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/AggregatorInterface.sol": {
				"AggregatorInterface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int256",
									"name": "current",
									"type": "int256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"name": "AnswerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "startedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								}
							],
							"name": "NewRound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAnswer(uint256)": "b5ab58dc",
							"getTimestamp(uint256)": "b633620c",
							"latestAnswer()": "50d25bcd",
							"latestRound()": "668a0f02",
							"latestTimestamp()": "8205bf6a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/AggregatorInterface.sol\":\"AggregatorInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x089dfd9e1bde0e83e8b39e47619893b9bdf968954e2dc420d4f1ee4dff2a7d95\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://ea454a31115c5a75eff1b334c2b1169c30adf0558905499fdfa9d36c5c773764\",\"dweb:/ipfs/QmfFY4Ki31wNVjHAtUp8UoK3TLnHSNcXQjgm4iMQno3i56\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/DOHL.sol": {
				"ast": {
					"absolutePath": "contracts/DOHL.sol",
					"exportedSymbols": {
						"AggregatorInterface": [
							1269
						],
						"Context": [
							785
						],
						"DOHL": [
							1108
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"IOwnable": [
							1116
						],
						"Ownable": [
							1221
						]
					},
					"id": 1109,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "179:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 652,
							"src": "205:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 1222,
							"src": "262:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/AggregatorInterface.sol",
							"file": "./interfaces/AggregatorInterface.sol",
							"id": 790,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 1270,
							"src": "287:46:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 791,
										"name": "ERC20",
										"nameLocations": [
											"354:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "354:5:5"
									},
									"id": 792,
									"nodeType": "InheritanceSpecifier",
									"src": "354:5:5"
								},
								{
									"baseName": {
										"id": 793,
										"name": "Ownable",
										"nameLocations": [
											"361:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1221,
										"src": "361:7:5"
									},
									"id": 794,
									"nodeType": "InheritanceSpecifier",
									"src": "361:7:5"
								}
							],
							"canonicalName": "DOHL",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1108,
							"linearizedBaseContracts": [
								1108,
								1221,
								1116,
								651,
								41,
								755,
								729,
								785
							],
							"name": "DOHL",
							"nameLocation": "346:4:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "faad24f4",
									"id": 796,
									"mutability": "mutable",
									"name": "tokenZero",
									"nameLocation": "391:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "376:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 795,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "376:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bea1dcf8",
									"id": 798,
									"mutability": "mutable",
									"name": "taxCollector",
									"nameLocation": "422:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "407:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 797,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "407:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3221c93f",
									"id": 800,
									"mutability": "mutable",
									"name": "liquidityAddress",
									"nameLocation": "456:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "441:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 799,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a89ae4ba",
									"id": 802,
									"mutability": "mutable",
									"name": "oracleAddress",
									"nameLocation": "494:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "479:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 801,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "479:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 804,
									"mutability": "mutable",
									"name": "_stub2",
									"nameLocation": "532:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "516:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 803,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "516:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "245a7bfc",
									"id": 807,
									"mutability": "mutable",
									"name": "aggregator",
									"nameLocation": "574:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "547:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorInterface_$1269",
										"typeString": "contract AggregatorInterface"
									},
									"typeName": {
										"id": 806,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 805,
											"name": "AggregatorInterface",
											"nameLocations": [
												"547:19:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1269,
											"src": "547:19:5"
										},
										"referencedDeclaration": 1269,
										"src": "547:19:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorInterface_$1269",
											"typeString": "contract AggregatorInterface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 810,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "618:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "593:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 808,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "593:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34653138",
										"id": 809,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "635:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4000000000000000000_by_1",
											"typeString": "int_const 4000000000000000000"
										},
										"value": "4e18"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 813,
									"mutability": "constant",
									"name": "FEE_PERC",
									"nameLocation": "671:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "646:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 811,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 812,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "682:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "754:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "771:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "779:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 820,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "765:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "765:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "765:29:5"
											}
										]
									},
									"id": 826,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c696e6b20446f6c6c6172",
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "731:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ab319090775208cf3133efb4797b5b63ab674175e8e6e710d0348143bb0ff5d0",
														"typeString": "literal_string \"Link Dollar\""
													},
													"value": "Link Dollar"
												},
												{
													"hexValue": "444f484c",
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c1650eeb0da3cf2da67d3712c06c9bfb726d0a8dc4e345c1fda88fba3e7c10c1",
														"typeString": "literal_string \"DOHL\""
													},
													"value": "DOHL"
												}
											],
											"id": 818,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 815,
												"name": "ERC20",
												"nameLocations": [
													"725:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "725:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "725:28:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:2:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:5"
									},
									"scope": 1108,
									"src": "711:91:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "975:417:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "liquidityAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "994:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1022:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1014:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1014:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1014:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "994:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "986:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "986:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "986:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 849,
																"name": "tokenZero",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "1044:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1065:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1057:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 850,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1057:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1057:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1044:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1036:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "1036:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 858,
																"name": "taxCollector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "1087:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1111:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1103:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1103:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1103:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1087:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1079:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1079:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "1079:35:5"
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 866,
														"name": "liquidityAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "1127:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 867,
														"name": "liquidityAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1146:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1127:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "1127:32:5"
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "tokenZero",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1170:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "tokenZeroAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "1182:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1170:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1170:25:5"
											},
											{
												"expression": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 874,
														"name": "taxCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1206:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 875,
														"name": "taxAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "1221:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1206:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "1206:22:5"
											},
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "oracleAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1239:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 879,
														"name": "oracleAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1255:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1239:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "1239:26:5"
											},
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 882,
														"name": "aggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1276:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorInterface_$1269",
															"typeString": "contract AggregatorInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 884,
																"name": "oracleAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1309:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 883,
															"name": "AggregatorInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "1289:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorInterface_$1269_$",
																"typeString": "type(contract AggregatorInterface)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorInterface_$1269",
															"typeString": "contract AggregatorInterface"
														}
													},
													"src": "1276:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorInterface_$1269",
														"typeString": "contract AggregatorInterface"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "1276:47:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 889,
															"name": "liquidityAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "1342:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31653138",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1360:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"id": 888,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1336:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1336:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "1336:29:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 893,
														"name": "rebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1376:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:8:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "1376:8:5"
											}
										]
									},
									"functionSelector": "f8c8765e",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 837,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 836,
												"name": "onlyOwner",
												"nameLocations": [
													"965:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1156,
												"src": "965:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "965:9:5"
										}
									],
									"name": "initialize",
									"nameLocation": "819:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "liquidityAddr",
												"nameLocation": "848:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "840:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "oracleAddr",
												"nameLocation": "880:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "872:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "tokenZeroAddr",
												"nameLocation": "909:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "901:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "taxAddr",
												"nameLocation": "941:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "933:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:126:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:5"
									},
									"scope": 1108,
									"src": "810:582:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "1519:129:5",
										"statements": [
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 904,
														"name": "balanceZero",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "1530:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 909,
																"name": "liquidityAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "1572:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 906,
																		"name": "tokenZero",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "1551:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 905,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "1544:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1562:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "1544:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1544:45:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1530:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "1530:59:5"
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "balanceOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1600:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 915,
																"name": "liquidityAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "1623:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 914,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1613:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1613:27:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1600:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "1600:40:5"
											}
										]
									},
									"functionSelector": "00113e08",
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalances",
									"nameLocation": "1409:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:2:5"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "balanceZero",
												"nameLocation": "1481:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1473:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "balanceOne",
												"nameLocation": "1502:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1494:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:41:5"
									},
									"scope": 1108,
									"src": "1400:248:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										334
									],
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "1784:504:5",
										"statements": [
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "1803:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "1795:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 932,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1795:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 936,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 934,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "1813:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1813:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1795:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 938,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "1852:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "1858:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "1867:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 937,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "1836:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1836:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "1836:37:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 943,
														"name": "rebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1886:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:8:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "1886:8:5"
											},
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "1915:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "1907:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1907:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 949,
												"initialValue": {
													"id": 948,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 926,
													"src": "1932:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1907:30:5"
											},
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "1956:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "1948:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 950,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1948:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 952,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "1963:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 953,
																	"name": "FEE_PERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1971:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1963:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 955,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1962:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31305f303030",
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1983:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10_000"
													},
													"src": "1962:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1948:41:5"
											},
											{
												"assignments": [
													960,
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2009:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "2001:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 959,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2001:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "negative",
														"nameLocation": "2022:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "2017:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 961,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2017:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 967,
												"initialValue": {
													"arguments": [
														{
															"id": 964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "2043:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 965,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2050:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 963,
														"name": "_absDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "2034:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,bool)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2034:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2000:54:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2071:9:5",
														"subExpression": {
															"id": 968,
															"name": "negative",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "2072:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 970,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2084:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2084:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2071:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"nodeType": "IfStatement",
												"src": "2067:125:5",
												"trueBody": {
													"id": 984,
													"nodeType": "Block",
													"src": "2093:99:5",
													"statements": [
														{
															"expression": {
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 974,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "2108:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 975,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "2125:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2108:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "2108:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 979,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "2156:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 980,
																		"name": "taxCollector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "2162:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 981,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "2176:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 978,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "2146:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2146:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 983,
															"nodeType": "ExpressionStatement",
															"src": "2146:34:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "2214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "2220:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "transferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "2224:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "2204:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "2204:35:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 992,
														"name": "rebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "2250:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2250:8:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "2250:8:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2276:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 931,
												"id": 996,
												"nodeType": "Return",
												"src": "2269:11:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1665:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 928,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1760:8:5"
									},
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1696:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1688:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1719:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1711:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1740:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1732:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:75:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1778:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1778:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1777:6:5"
									},
									"scope": 1108,
									"src": "1656:632:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "2414:176:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1009,
														"name": "v2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "2429:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1010,
														"name": "v1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "2434:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2429:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "2425:131:5",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "2438:118:5",
													"statements": [
														{
															"assignments": [
																1013
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1013,
																	"mutability": "mutable",
																	"name": "tmp",
																	"nameLocation": "2461:3:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1028,
																	"src": "2453:11:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1012,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2453:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1015,
															"initialValue": {
																"id": 1014,
																"name": "v1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "2467:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2453:16:5"
														},
														{
															"expression": {
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1016,
																	"name": "v1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "2484:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1017,
																	"name": "v2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "2489:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2484:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1019,
															"nodeType": "ExpressionStatement",
															"src": "2484:7:5"
														},
														{
															"expression": {
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1020,
																	"name": "v2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "2506:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1021,
																	"name": "tmp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "2511:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2506:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1023,
															"nodeType": "ExpressionStatement",
															"src": "2506:8:5"
														},
														{
															"expression": {
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1024,
																	"name": "negative",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "2529:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2540:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2529:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "2529:15:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1030,
														"name": "diff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "2568:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1031,
															"name": "v1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "2575:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1032,
															"name": "v2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "2580:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2575:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2568:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "2568:14:5"
											}
										]
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_absDiff",
									"nameLocation": "2305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "v1",
												"nameLocation": "2332:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2324:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "v2",
												"nameLocation": "2353:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2345:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:49:5"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "diff",
												"nameLocation": "2393:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2385:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "negative",
												"nameLocation": "2404:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2399:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:29:5"
									},
									"scope": 1108,
									"src": "2296:294:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "2647:51:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1042,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "2665:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorInterface_$1269",
																"typeString": "contract AggregatorInterface"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2676:12:5",
														"memberName": "latestAnswer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1228,
														"src": "2665:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
															"typeString": "function () view external returns (int256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2665:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1045,
												"nodeType": "Return",
												"src": "2658:32:5"
											}
										]
									},
									"functionSelector": "98d5fdca",
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "2607:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2615:2:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2639:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1039,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2639:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2638:8:5"
									},
									"scope": 1108,
									"src": "2598:100:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "2731:515:5",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2750:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "2742:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2742:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1054,
																"name": "getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "2766:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
																	"typeString": "function () view returns (int256)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2766:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2758:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2758:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2758:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2742:35:5"
											},
											{
												"assignments": [
													1059
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "balanceZero",
														"nameLocation": "2796:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "2788:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1058,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2788:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1063,
																	"name": "liquidityAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "2828:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2820:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1061,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2820:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2820:25:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1060,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2810:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2788:58:5"
											},
											{
												"assignments": [
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "balanceOne",
														"nameLocation": "2865:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "2857:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2857:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1072,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2896:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DOHL_$1108",
																		"typeString": "contract DOHL"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DOHL_$1108",
																		"typeString": "contract DOHL"
																	}
																],
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2888:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2888:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2888:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1069,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2878:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2878:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2857:45:5"
											},
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "lastRebase",
														"nameLocation": "2923:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "2915:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2915:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1078,
														"name": "balanceZero",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "2936:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1079,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "2950:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2936:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2915:40:5"
											},
											{
												"assignments": [
													1083,
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "rebaseFactor",
														"nameLocation": "2977:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "2969:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1082,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2969:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "negative",
														"nameLocation": "2996:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "2991:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1084,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2991:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1090,
												"initialValue": {
													"arguments": [
														{
															"id": 1087,
															"name": "lastRebase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "3031:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1088,
															"name": "balanceOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "3056:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1086,
														"name": "_absDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "3008:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,bool)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3008:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2968:109:5"
											},
											{
												"condition": {
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3094:9:5",
													"subExpression": {
														"id": 1091,
														"name": "negative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "3095:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1104,
													"nodeType": "Block",
													"src": "3175:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1100,
																		"name": "liquidityAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "3196:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1101,
																		"name": "rebaseFactor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "3214:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1099,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "3190:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3190:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1103,
															"nodeType": "ExpressionStatement",
															"src": "3190:37:5"
														}
													]
												},
												"id": 1105,
												"nodeType": "IfStatement",
												"src": "3090:149:5",
												"trueBody": {
													"id": 1098,
													"nodeType": "Block",
													"src": "3105:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1094,
																		"name": "liquidityAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "3126:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1095,
																		"name": "rebaseFactor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "3144:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1093,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3120:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3120:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1097,
															"nodeType": "ExpressionStatement",
															"src": "3120:37:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "af14052c",
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nameLocation": "2715:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2721:2:5"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2731:0:5"
									},
									"scope": 1108,
									"src": "2706:540:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1109,
							"src": "337:2912:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								1124,
								1130
							]
						}
					],
					"src": "179:3072:5"
				},
				"id": 5
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"IOwnable": [
							1116
						],
						"Ownable": [
							1221
						]
					},
					"id": 1222,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "183:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1116,
							"linearizedBaseContracts": [
								1116
							],
							"name": "IOwnable",
							"nameLocation": "221:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "246:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "272:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "264:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:18:6"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:0:6"
									},
									"scope": 1116,
									"src": "237:54:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1222,
							"src": "211:83:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1117,
										"name": "IOwnable",
										"nameLocations": [
											"318:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1116,
										"src": "318:8:6"
									},
									"id": 1118,
									"nodeType": "InheritanceSpecifier",
									"src": "318:8:6"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1221,
							"linearizedBaseContracts": [
								1221,
								1116
							],
							"name": "Ownable",
							"nameLocation": "307:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1120,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "351:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1221,
									"src": "334:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1119,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "334:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "f8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820",
									"id": 1124,
									"name": "OwnershipRenounced",
									"nameLocation": "372:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "407:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "391:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:31:6"
									},
									"src": "366:56:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1130,
									"name": "OwnershipTransferred",
									"nameLocation": "436:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "483:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "467:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "523:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "507:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "456:82:6"
									},
									"src": "430:109:6"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "561:38:6",
										"statements": [
											{
												"expression": {
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1133,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "572:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1134,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "581:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "585:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "581:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "572:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "572:19:6"
											}
										]
									},
									"id": 1139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:2:6"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:0:6"
									},
									"scope": 1221,
									"src": "547:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "654:32:6",
										"statements": [
											{
												"expression": {
													"id": 1144,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1120,
													"src": "672:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1145,
												"nodeType": "Return",
												"src": "665:13:6"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "616:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "645:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:9:6"
									},
									"scope": 1221,
									"src": "607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "715:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1150,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "734:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "734:9:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "726:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "726:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "726:18:6"
											},
											{
												"id": 1154,
												"nodeType": "PlaceholderStatement",
												"src": "755:1:6"
											}
										]
									},
									"id": 1156,
									"name": "onlyOwner",
									"nameLocation": "703:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:2:6"
									},
									"src": "694:70:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "818:46:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1161,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "836:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "840:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "836:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1163,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "850:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "836:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1160,
												"id": 1165,
												"nodeType": "Return",
												"src": "829:27:6"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "781:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:6"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "812:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "812:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:6:6"
									},
									"scope": 1221,
									"src": "772:92:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "918:80:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1173,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "953:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1172,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "934:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "EmitStatement",
												"src": "929:31:6"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1176,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "971:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "988:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "980:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1177,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "980:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "980:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "971:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "971:19:6"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1169,
												"name": "onlyOwner",
												"nameLocations": [
													"908:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1156,
												"src": "908:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "908:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "881:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "898:2:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:6"
									},
									"scope": 1221,
									"src": "872:126:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1115
									],
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "1068:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "1098:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1191,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "1079:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1079:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "1079:28:6"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1189,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1188,
												"name": "onlyOwner",
												"nameLocations": [
													"1058:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1156,
												"src": "1058:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1058:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1015:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1041:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1033:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:18:6"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:0:6"
									},
									"scope": 1221,
									"src": "1006:109:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "1178:132:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1202,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "1197:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1217:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1209:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1203,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1209:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1209:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1197:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1189:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "1189:31:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1211,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "1257:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "1265:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1210,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "1236:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1236:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "EmitStatement",
												"src": "1231:43:6"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1215,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "1285:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1216,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "1294:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1285:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "1285:17:6"
											}
										]
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1132:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1159:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1151:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:18:6"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1178:0:6"
									},
									"scope": 1221,
									"src": "1123:187:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1222,
							"src": "298:1015:6",
							"usedErrors": [],
							"usedEvents": [
								1124,
								1130
							]
						}
					],
					"src": "183:1130:6"
				},
				"id": 6
			},
			"contracts/interfaces/AggregatorInterface.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/AggregatorInterface.sol",
					"exportedSymbols": {
						"AggregatorInterface": [
							1269
						]
					},
					"id": 1270,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1223,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1269,
							"linearizedBaseContracts": [
								1269
							],
							"name": "AggregatorInterface",
							"nameLocation": "232:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "50d25bcd",
									"id": 1228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestAnswer",
									"nameLocation": "266:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:7"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "304:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1225,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "304:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:8:7"
									},
									"scope": 1269,
									"src": "257:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8205bf6a",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestTimestamp",
									"nameLocation": "325:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:2:7"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "366:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:9:7"
									},
									"scope": 1269,
									"src": "316:59:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "668a0f02",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRound",
									"nameLocation": "388:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:2:7"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "425:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:9:7"
									},
									"scope": 1269,
									"src": "379:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b5ab58dc",
									"id": 1245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAnswer",
									"nameLocation": "447:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "465:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "457:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "456:17:7"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "497:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1242,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "497:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:8:7"
									},
									"scope": 1269,
									"src": "438:67:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b633620c",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimestamp",
									"nameLocation": "518:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "539:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "531:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:17:7"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "571:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:9:7"
									},
									"scope": 1269,
									"src": "509:71:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f",
									"id": 1260,
									"name": "AnswerUpdated",
									"nameLocation": "592:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"indexed": true,
												"mutability": "mutable",
												"name": "current",
												"nameLocation": "621:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "606:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1253,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "606:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "646:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "630:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "663:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "655:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:68:7"
									},
									"src": "586:88:7"
								},
								{
									"anonymous": false,
									"eventSelector": "0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271",
									"id": 1268,
									"name": "NewRound",
									"nameLocation": "684:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "709:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "693:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"indexed": true,
												"mutability": "mutable",
												"name": "startedBy",
												"nameLocation": "734:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "718:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"indexed": false,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "753:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "745:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:71:7"
									},
									"src": "678:86:7"
								}
							],
							"scope": 1270,
							"src": "222:545:7",
							"usedErrors": [],
							"usedEvents": [
								1260,
								1268
							]
						}
					],
					"src": "192:575:7"
				},
				"id": 7
			}
		}
	}
}